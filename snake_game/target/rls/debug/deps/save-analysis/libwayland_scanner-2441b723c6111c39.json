{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5","program":"/home/abraham/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wayland_scanner","/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=2441b723c6111c39","-C","extra-filename=-2441b723c6111c39","--out-dir","/home/abraham/Frontier/snake_game/target/rls/debug/deps","-L","dependency=/home/abraham/Frontier/snake_game/target/rls/debug/deps","--extern","xml=/home/abraham/Frontier/snake_game/target/rls/debug/deps/libxml-851a3fcdbd9e5273.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/abraham/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/abraham/Frontier/snake_game/target/rls/debug/deps/libwayland_scanner-2441b723c6111c39.rmeta"},"prelude":{"crate_id":{"name":"wayland_scanner","disambiguator":[17005048058630678604,0]},"crate_root":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src","external_crates":[{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":20,"id":{"name":"xml","disambiguator":[16866587744925090094,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","num":21,"id":{"name":"bitflags","disambiguator":[7787525666997475791,0]}}],"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":0,"byte_end":7124,"line_start":1,"line_end":196,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":255},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4343,"byte_end":4347,"line_start":117,"line_end":117,"column_start":15,"column_end":19},"alias_span":null,"name":"Side","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":0,"byte_end":7124,"line_start":1,"line_end":196,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":32},{"krate":0,"index":81},{"krate":0,"index":100},{"krate":0,"index":114},{"krate":0,"index":128},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":171}],"decl_id":null,"docs":" Wayland scanner crate","sig":null,"attributes":[{"value":"/ Wayland scanner crate","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":30,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This crate is a rust equivalent of the wayland-scanner tool from the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":34,"byte_end":106,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ official wayland C library.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":107,"byte_end":138,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":139,"byte_end":142,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ You can use in your build script to generate the rust code for any","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":143,"byte_end":213,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ wayland protocol file, to use alongside the `wayland_client` and","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":214,"byte_end":282,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ `wayland_server` crate to build your applications.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":283,"byte_end":337,"line_start":9,"line_end":9,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":338,"byte_end":341,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## How to use this crate","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":342,"byte_end":370,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":371,"byte_end":374,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This crate is to be used in a build script. It provides you two","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":375,"byte_end":442,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"/ functions, `generate_code` and `generate_interfaces`. They'll","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":443,"byte_end":508,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ allow you to generate the code to use with the `wayland_client` or","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":509,"byte_end":579,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `wayland_server` crates for any XML wayland protocol file (NB: you don't","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":580,"byte_end":656,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ need to do it for the core protocol, which is already included in both crates).","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":657,"byte_end":740,"line_start":17,"line_end":17,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":741,"byte_end":744,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ First, have the XML files you want to use in your project, somewhere the build script","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":745,"byte_end":834,"line_start":19,"line_end":19,"column_start":1,"column_end":90}},{"value":"/ will be able to read them.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":835,"byte_end":865,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":866,"byte_end":869,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Then, you'll need to invoke both `generate_interfaces` *and* `generate_code` for","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":870,"byte_end":954,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ each of these files.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":955,"byte_end":979,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":980,"byte_end":983,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A sample build script:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":984,"byte_end":1010,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1011,"byte_end":1014,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1015,"byte_end":1028,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ extern crate wayland_scanner;","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1029,"byte_end":1062,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1063,"byte_end":1066,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ use std::env::var;","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1067,"byte_end":1089,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/ use std::path::Path;","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1090,"byte_end":1114,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1115,"byte_end":1118,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ use wayland_scanner::{Side, generate_code, generate_interfaces};","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1119,"byte_end":1187,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1188,"byte_end":1191,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1192,"byte_end":1207,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/     // Location of the xml file, relative to the `Cargo.toml`","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1208,"byte_end":1273,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/     let protocol_file = \"./my_protocol.xml\";","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1274,"byte_end":1322,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1323,"byte_end":1326,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/     // Target directory for the generate files","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1327,"byte_end":1377,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/     let out_dir_str = var(\"OUT_DIR\").unwrap();","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1378,"byte_end":1428,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/     let out_dir = Path::new(&out_dir_str);","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1429,"byte_end":1475,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1476,"byte_end":1479,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/     generate_code(","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1480,"byte_end":1502,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/         protocol_file,","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1503,"byte_end":1529,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/         out_dir.join(\"my_protocol_api.rs\"),","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1530,"byte_end":1577,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/         Side::Client, // Replace by `Side::Server` for server-side code","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1578,"byte_end":1653,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/     );","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1654,"byte_end":1664,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1665,"byte_end":1668,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // interfaces are the same for client and server","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1669,"byte_end":1725,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/     generate_interfaces(","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1726,"byte_end":1754,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/         protocol_file,","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1755,"byte_end":1781,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/         out_dir.join(\"my_protocol_interfaces.rs\")","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1782,"byte_end":1835,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/     );","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1836,"byte_end":1846,"line_start":53,"line_end":53,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1847,"byte_end":1852,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1853,"byte_end":1860,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1861,"byte_end":1864,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The above example will output two `.rs` files in the `OUT_DIR` defined by","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1865,"byte_end":1942,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ cargo. Then, you'll need to include these two generated files (using the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":1943,"byte_end":2019,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/ macro of the same name) to make this code available in your crate.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2020,"byte_end":2090,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2091,"byte_end":2094,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2095,"byte_end":2108,"line_start":61,"line_end":61,"column_start":1,"column_end":14}},{"value":"/ // The generated code will import stuff from wayland_sys","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2109,"byte_end":2169,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"/ extern crate wayland_sys;","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2170,"byte_end":2199,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/ extern crate wayland_client;","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2200,"byte_end":2232,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2233,"byte_end":2236,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // Re-export only the actual code, and then only use this re-export","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2237,"byte_end":2308,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/ // The `generated` module below is just some boilerplate to properly isolate stuff","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2309,"byte_end":2395,"line_start":67,"line_end":67,"column_start":1,"column_end":87}},{"value":"/ // and avoid exposing internal details.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2396,"byte_end":2439,"line_start":68,"line_end":68,"column_start":1,"column_end":44}},{"value":"/ //","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2440,"byte_end":2446,"line_start":69,"line_end":69,"column_start":1,"column_end":7}},{"value":"/ // You can use all the types from my_procol as if they went from `wayland_client::protocol`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2447,"byte_end":2543,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/ pub use generated::client as my_protocol;","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2544,"byte_end":2589,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2590,"byte_end":2593,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ mod generated {","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2594,"byte_end":2613,"line_start":73,"line_end":73,"column_start":1,"column_end":20}},{"value":"/     // The generated code tends to trigger a lot of warnings","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2614,"byte_end":2678,"line_start":74,"line_end":74,"column_start":1,"column_end":65}},{"value":"/     // so we isole it into a very permissive module","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2679,"byte_end":2734,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"/     #![allow(dead_code,non_camel_case_types,unused_unsafe,unused_variables)]","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2735,"byte_end":2815,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/     #![allow(non_upper_case_globals,non_snake_case,unused_imports)]","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2816,"byte_end":2887,"line_start":77,"line_end":77,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2888,"byte_end":2891,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     pub mod interfaces {","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2892,"byte_end":2920,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/         // include the interfaces, they just need to be accessible to the generated code","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":2921,"byte_end":3013,"line_start":80,"line_end":80,"column_start":1,"column_end":93}},{"value":"/         // so this module is `pub` so that it can be imported by the other one.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3014,"byte_end":3097,"line_start":81,"line_end":81,"column_start":1,"column_end":84}},{"value":"/         include!(concat!(env!(\"OUT_DIR\"), \"/my_protocol_interfaces.rs\"));","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3098,"byte_end":3175,"line_start":82,"line_end":82,"column_start":1,"column_end":78}},{"value":"/     }","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3176,"byte_end":3185,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3186,"byte_end":3189,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     pub mod client {","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3190,"byte_end":3214,"line_start":85,"line_end":85,"column_start":1,"column_end":25}},{"value":"/         // These import are mandatory, and need to by `pub`, because","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3215,"byte_end":3287,"line_start":86,"line_end":86,"column_start":1,"column_end":73}},{"value":"/         // submodules in the generated code will try to import them.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3288,"byte_end":3360,"line_start":87,"line_end":87,"column_start":1,"column_end":73}},{"value":"/         // Hopefully someday pub(restricted) and friends will","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3361,"byte_end":3426,"line_start":88,"line_end":88,"column_start":1,"column_end":66}},{"value":"/         // allow for a cleaner way to do that","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3427,"byte_end":3476,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/         #[doc(hidden)] pub use wayland_client::{Proxy, Handler, EventQueueHandle, RequestResult};","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3477,"byte_end":3578,"line_start":90,"line_end":90,"column_start":1,"column_end":102}},{"value":"/         // Replace the above line with this for server-side:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3579,"byte_end":3643,"line_start":91,"line_end":91,"column_start":1,"column_end":65}},{"value":"/         // #[doc(hidden)] pub use wayland_server::{Resource, Handler, EventLoopHandle, EventResult};","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3644,"byte_end":3748,"line_start":92,"line_end":92,"column_start":1,"column_end":105}},{"value":"/         #[doc(hidden)] pub use super::interfaces;","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3749,"byte_end":3802,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"/         // If you protocol interacts with objects from other protocols, you'll need to import","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3803,"byte_end":3900,"line_start":94,"line_end":94,"column_start":1,"column_end":98}},{"value":"/         // their modules, like so:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3901,"byte_end":3939,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/         #[doc(hidden)] pub use wayland_client::protocol::{wl_surface, wl_region};","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":3940,"byte_end":4025,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"/         include!(concat!(env!(\"OUT_DIR\"), \"/my_protocol_code.rs\"));","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4026,"byte_end":4097,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"/     }","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4098,"byte_end":4107,"line_start":98,"line_end":98,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4108,"byte_end":4113,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4114,"byte_end":4121,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4123,"byte_end":4145,"line_start":102,"line_end":102,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":256},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":25170,"byte_end":25176,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Client","qualname":"::side::Side::Client","value":"Side::Client","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" wayland client applications\n","sig":null,"attributes":[{"value":"/ wayland client applications","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":25134,"byte_end":25165,"line_start":9,"line_end":9,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":258},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":25210,"byte_end":25216,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Server","qualname":"::side::Side::Server","value":"Side::Server","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" wayland compositors\n","sig":null,"attributes":[{"value":"/ wayland compositors","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":25182,"byte_end":25205,"line_start":11,"line_end":11,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":255},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":25123,"byte_end":25127,"line_start":8,"line_end":8,"column_start":10,"column_end":14},"name":"Side","qualname":"::side::Side","value":"pub enum Side { Client, Server, }","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":258}],"decl_id":null,"docs":" Side to generate","sig":null,"attributes":[{"value":"/ Side to generate","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":24956,"byte_end":24976,"line_start":3,"line_end":3,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":24977,"byte_end":24980,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This enum represents the two possible sides of","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":24981,"byte_end":25031,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/ the protocol API that can be generated.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":25032,"byte_end":25075,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":25259,"byte_end":25274,"line_start":17,"line_end":17,"column_start":12,"column_end":27},"name":"object_ptr_type","qualname":"<Side>::object_ptr_type","value":"pub fn object_ptr_type(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":25421,"byte_end":25433,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"object_trait","qualname":"<Side>::object_trait","value":"pub fn object_trait(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":25574,"byte_end":25585,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"handle_type","qualname":"<Side>::handle_type","value":"pub fn handle_type(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":25744,"byte_end":25750,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"handle","qualname":"<Side>::handle","value":"pub fn handle(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":25920,"byte_end":25931,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"result_type","qualname":"<Side>::result_type","value":"pub fn result_type(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":162},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4972,"byte_end":4991,"line_start":139,"line_end":139,"column_start":8,"column_end":27},"name":"generate_interfaces","qualname":"::generate_interfaces","value":"pub fn generate_interfaces<P1: AsRef<Path>, P2: AsRef<Path>>(P1, P2)","parent":null,"children":[],"decl_id":null,"docs":" Generate the interfaces for a protocol","sig":null,"attributes":[{"value":"/ Generate the interfaces for a protocol","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4645,"byte_end":4687,"line_start":130,"line_end":130,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4688,"byte_end":4691,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ See this crate toplevel documentation for details.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4692,"byte_end":4746,"line_start":132,"line_end":132,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4747,"byte_end":4750,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4751,"byte_end":4760,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4761,"byte_end":4764,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: a path to the XML file describing the protocol, absolute or relative to","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4765,"byte_end":4854,"line_start":136,"line_end":136,"column_start":1,"column_end":90}},{"value":"/   the build script using this function.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4855,"byte_end":4898,"line_start":137,"line_end":137,"column_start":1,"column_end":44}},{"value":"/ - `target`: the path of the file to store this interfaces in.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":4899,"byte_end":4964,"line_start":138,"line_end":138,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":165},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":5679,"byte_end":5692,"line_start":160,"line_end":160,"column_start":8,"column_end":21},"name":"generate_code","qualname":"::generate_code","value":"pub fn generate_code<P1: AsRef<Path>, P2: AsRef<Path>>(P1, P2, Side)","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol","sig":null,"attributes":[{"value":"/ Generate the code for a protocol","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":5301,"byte_end":5337,"line_start":150,"line_end":150,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":5338,"byte_end":5341,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ See this crate toplevel documentation for details.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":5342,"byte_end":5396,"line_start":152,"line_end":152,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":5397,"byte_end":5400,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":5401,"byte_end":5410,"line_start":154,"line_end":154,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":5411,"byte_end":5414,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: a path to the XML file describing the protocol, absolute or relative to","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":5415,"byte_end":5504,"line_start":156,"line_end":156,"column_start":1,"column_end":90}},{"value":"/   the build script using this function.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":5505,"byte_end":5548,"line_start":157,"line_end":157,"column_start":1,"column_end":44}},{"value":"/ - `target`: the path of the file to store the code in.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":5549,"byte_end":5607,"line_start":158,"line_end":158,"column_start":1,"column_end":59}},{"value":"/ - `side`: the side (client or server) to generate code for.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":5608,"byte_end":5671,"line_start":159,"line_end":159,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":168},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6344,"byte_end":6371,"line_start":179,"line_end":179,"column_start":8,"column_end":35},"name":"generate_interfaces_streams","qualname":"::generate_interfaces_streams","value":"pub fn generate_interfaces_streams<P1: Read, P2: Write>(P1, &mut P2)","parent":null,"children":[],"decl_id":null,"docs":" Generate the interfaces for a protocol from/to IO streams","sig":null,"attributes":[{"value":"/ Generate the interfaces for a protocol from/to IO streams","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6010,"byte_end":6071,"line_start":171,"line_end":171,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6072,"byte_end":6075,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ Like `generate_interfaces`, but takes IO Streams directly rather than filenames","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6076,"byte_end":6159,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6160,"byte_end":6163,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6164,"byte_end":6173,"line_start":175,"line_end":175,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6174,"byte_end":6177,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: an object `Read`-able containing the XML protocol file","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6178,"byte_end":6250,"line_start":177,"line_end":177,"column_start":1,"column_end":73}},{"value":"/ - `target`: a `Write`-able object to which the generated code will be outputed to","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6251,"byte_end":6336,"line_start":178,"line_end":178,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":171},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6923,"byte_end":6944,"line_start":193,"line_end":193,"column_start":8,"column_end":29},"name":"generate_code_streams","qualname":"::generate_code_streams","value":"pub fn generate_code_streams<P1: Read, P2: Write>(P1, &mut P2, Side)","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol from/to IO streams","sig":null,"attributes":[{"value":"/ Generate the code for a protocol from/to IO streams","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6537,"byte_end":6592,"line_start":184,"line_end":184,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6593,"byte_end":6596,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ Like `generate_code`, but takes IO Streams directly rather than filenames","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6597,"byte_end":6674,"line_start":186,"line_end":186,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6675,"byte_end":6678,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6679,"byte_end":6688,"line_start":188,"line_end":188,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6689,"byte_end":6692,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: an object `Read`-able containing the XML protocol file","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6693,"byte_end":6765,"line_start":190,"line_end":190,"column_start":1,"column_end":73}},{"value":"/ - `target`: a `Write`-able object to which the generated code will be outputed to","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6766,"byte_end":6851,"line_start":191,"line_end":191,"column_start":1,"column_end":86}},{"value":"/ - `side`: the side (client or server) to generate code for.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/lib.rs","byte_start":6852,"byte_end":6915,"line_start":192,"line_end":192,"column_start":1,"column_end":64}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":20337,"byte_end":20345,"line_start":10,"line_end":10,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":20776,"byte_end":20785,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":22433,"byte_end":22440,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":23109,"byte_end":23112,"line_start":118,"line_end":118,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":23566,"byte_end":23570,"line_start":141,"line_end":141,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":23971,"byte_end":23976,"line_start":162,"line_end":162,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":24359,"byte_end":24363,"line_start":187,"line_end":187,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":25241,"byte_end":25245,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":20337,"byte_end":20345,"line_start":10,"line_end":10,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":20776,"byte_end":20785,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":22433,"byte_end":22440,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":23109,"byte_end":23112,"line_start":118,"line_end":118,"column_start":6,"column_end":9},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":23566,"byte_end":23570,"line_start":141,"line_end":141,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":23971,"byte_end":23976,"line_start":162,"line_end":162,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/protocol.rs","byte_start":24359,"byte_end":24363,"line_start":187,"line_end":187,"column_start":6,"column_end":10},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.12.5/src/side.rs","byte_start":25241,"byte_end":25245,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}}]}