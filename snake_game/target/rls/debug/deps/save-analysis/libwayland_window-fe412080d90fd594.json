{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3","program":"/home/abraham/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wayland_window","/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=fe412080d90fd594","-C","extra-filename=-fe412080d90fd594","--out-dir","/home/abraham/Frontier/snake_game/target/rls/debug/deps","-L","dependency=/home/abraham/Frontier/snake_game/target/rls/debug/deps","--extern","memmap=/home/abraham/Frontier/snake_game/target/rls/debug/deps/libmemmap-efa872e349b39136.rmeta","--extern","tempfile=/home/abraham/Frontier/snake_game/target/rls/debug/deps/libtempfile-cc3f9460c8743be4.rmeta","--extern","wayland_client=/home/abraham/Frontier/snake_game/target/rls/debug/deps/libwayland_client-a5f1c95e645ad86a.rmeta","--extern","wayland_protocols=/home/abraham/Frontier/snake_game/target/rls/debug/deps/libwayland_protocols-921697a3457197f6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/abraham/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/abraham/Frontier/snake_game/target/rls/debug/deps/libwayland_window-fe412080d90fd594.rmeta"},"prelude":{"crate_id":{"name":"wayland_window","disambiguator":[16904451474133758182,0]},"crate_root":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src","external_crates":[{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":20,"id":{"name":"memmap","disambiguator":[16039499344037746122,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":21,"id":{"name":"libc","disambiguator":[1269810525686256945,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":22,"id":{"name":"tempfile","disambiguator":[3725922738186498006,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":23,"id":{"name":"remove_dir_all","disambiguator":[28728740213864523,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":24,"id":{"name":"fastrand","disambiguator":[14647155122949681519,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":25,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":26,"id":{"name":"wayland_client","disambiguator":[2759866066984625328,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":27,"id":{"name":"bitflags","disambiguator":[15852493003383756076,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":28,"id":{"name":"token_store","disambiguator":[11046059346698597120,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":29,"id":{"name":"wayland_sys","disambiguator":[16642949370290190437,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":30,"id":{"name":"dlib","disambiguator":[5549583731788796334,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":31,"id":{"name":"libloading","disambiguator":[9101022996519854472,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":32,"id":{"name":"lazy_static","disambiguator":[2335416628160260444,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","num":33,"id":{"name":"wayland_protocols","disambiguator":[8890146482684650264,0]}}],"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":0,"byte_end":9773,"line_start":1,"line_end":275,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":53},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":5581,"byte_end":5586,"line_start":139,"line_end":139,"column_start":17,"column_end":22},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":63},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":5588,"byte_end":5593,"line_start":139,"line_end":139,"column_start":24,"column_end":29},"alias_span":null,"name":"State","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":464},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":5650,"byte_end":5659,"line_start":141,"line_end":141,"column_start":17,"column_end":26},"alias_span":null,"name":"Configure","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":339},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":5661,"byte_end":5666,"line_start":141,"line_end":141,"column_start":28,"column_end":33},"alias_span":null,"name":"Shell","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":219},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":5755,"byte_end":5766,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"alias_span":null,"name":"add_borders","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":218},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":5768,"byte_end":5784,"line_start":145,"line_end":145,"column_start":30,"column_end":46},"alias_span":null,"name":"subtract_borders","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":0,"byte_end":9773,"line_start":1,"line_end":275,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":92},{"krate":0,"index":187},{"krate":0,"index":231},{"krate":0,"index":278},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":475},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":424},{"krate":0,"index":429},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":447}],"decl_id":null,"docs":" Wayland Window, a minimalistic decoration-drawing library for\n wayland applications.","sig":null,"attributes":[{"value":"/ Wayland Window, a minimalistic decoration-drawing library for","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/ wayland applications.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":66,"byte_end":91,"line_start":2,"line_end":2,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":92,"byte_end":95,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This crate is only usable in conjuction of the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":96,"byte_end":146,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/ [`wayland-client`](https://crates.io/crates/wayland-client) crate.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":147,"byte_end":217,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":218,"byte_end":221,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Creating a window with decorations","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":222,"byte_end":263,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":264,"byte_end":267,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Creating a decorated frame for your window is simply done using the provided init function:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":268,"byte_end":363,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":364,"byte_end":367,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":368,"byte_end":381,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/ use wayland_window::create_frame;","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":382,"byte_end":419,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/ // if using the legacy wl_shell global","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":420,"byte_end":462,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ let shell = Shell::Wl(my_wl_shell);","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":463,"byte_end":502,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ // if using the new not-yet-stable xdg_shell","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":503,"byte_end":551,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ let shell = Shell::Xdg(my_xdh_shell);","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":552,"byte_end":593,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ let frame = create_frame(","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":594,"byte_end":623,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/        &mut event_queue, my_implementation, my_implementation_data,","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":624,"byte_end":695,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/        &my_surface, width, height, &compositor, &subcompositor, &shm, &shell, Some(seat)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":696,"byte_end":788,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ ).unwrap(); // creation can fail","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":789,"byte_end":825,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":826,"byte_end":833,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":834,"byte_end":837,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As you can see, you need to pass several references to global objects as well as a `WlSeat`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":838,"byte_end":934,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ It is required for the library to be able to create the surfaces to draw the borders, react","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":935,"byte_end":1030,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/ to user input in the borders, for resizing and move. It will use the events provided on the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1031,"byte_end":1126,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ seat you passed as argument. (So if you are on a setup with more than one pointer,","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1127,"byte_end":1213,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/ only the one associated with this seat will be able to resize the window).","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1214,"byte_end":1292,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1293,"byte_end":1296,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ See next section for example use of the `my_implementation` and","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1297,"byte_end":1364,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ `my_implementation_data` arguments.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1365,"byte_end":1404,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1405,"byte_end":1408,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Configure events","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1409,"byte_end":1432,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1433,"byte_end":1436,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The `Frame` object will not resize your window itself, as it cannot do it.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1437,"byte_end":1515,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1516,"byte_end":1519,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ When the user clicks on a border and starts a resize, the server will start to generate a","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1520,"byte_end":1613,"line_start":36,"line_end":36,"column_start":1,"column_end":94}},{"value":"/ number of `configure` events on the shell surface. You'll need to process the events generated","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1614,"byte_end":1712,"line_start":37,"line_end":37,"column_start":1,"column_end":99}},{"value":"/ by the surface to handle them.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1713,"byte_end":1747,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1748,"byte_end":1751,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The wayland server can (and will) generate a ton of `configure` events during a single","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1752,"byte_end":1842,"line_start":40,"line_end":40,"column_start":1,"column_end":91}},{"value":"/ `WlDisplay::dispatch()` if the user is currently resizing the window. You are only required to","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1843,"byte_end":1941,"line_start":41,"line_end":41,"column_start":1,"column_end":99}},{"value":"/ process the last one, and if you try to handle them all your aplication will be very","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":1942,"byte_end":2030,"line_start":42,"line_end":42,"column_start":1,"column_end":89}},{"value":"/ laggy.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2031,"byte_end":2041,"line_start":43,"line_end":43,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2042,"byte_end":2045,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The proper way is to accumulate them in your subhandler, overwriting the the previous one","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2046,"byte_end":2139,"line_start":45,"line_end":45,"column_start":1,"column_end":94}},{"value":"/ each time, and manually checking if one has been received in the main loop of your program.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2140,"byte_end":2235,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ For example like this","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2236,"byte_end":2261,"line_start":47,"line_end":47,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2262,"byte_end":2265,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2266,"byte_end":2279,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ # extern crate wayland_client;","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2280,"byte_end":2314,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ # extern crate wayland_window;","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2315,"byte_end":2349,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/ use wayland_window::{Frame, create_frame, FrameImplementation};","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2350,"byte_end":2417,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2418,"byte_end":2421,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // define a state to accumulate sizes","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2422,"byte_end":2463,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ struct ConfigureState {","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2464,"byte_end":2491,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/     new_size: Option<(i32,i32)>","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2492,"byte_end":2527,"line_start":56,"line_end":56,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2528,"byte_end":2533,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2534,"byte_end":2537,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2538,"byte_end":2555,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ # let (display, mut event_queue) = wayland_client::default_connect().unwrap();","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2556,"byte_end":2638,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ // insert it in your event queue state","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2639,"byte_end":2681,"line_start":61,"line_end":61,"column_start":1,"column_end":43}},{"value":"/ let configure_token = event_queue.state().insert(ConfigureState { new_size: None });","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2682,"byte_end":2770,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2771,"byte_end":2774,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // use it in your implementation:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2775,"byte_end":2812,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ let my_implementation = FrameImplementation {","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2813,"byte_end":2862,"line_start":65,"line_end":65,"column_start":1,"column_end":50}},{"value":"/     configure: |evqh, token, _, newsize| {","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2863,"byte_end":2909,"line_start":66,"line_end":66,"column_start":1,"column_end":47}},{"value":"/         let configure_state: &mut ConfigureState = evqh.state().get_mut(token);","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2910,"byte_end":2993,"line_start":67,"line_end":67,"column_start":1,"column_end":84}},{"value":"/         configure_state.new_size = newsize;","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":2994,"byte_end":3041,"line_start":68,"line_end":68,"column_start":1,"column_end":48}},{"value":"/     },","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3042,"byte_end":3052,"line_start":69,"line_end":69,"column_start":1,"column_end":11}},{"value":"/     close: |_, _| { /* ... */ },","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3053,"byte_end":3089,"line_start":70,"line_end":70,"column_start":1,"column_end":37}},{"value":"/     refresh: |_, _| { /* ... */ }","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3090,"byte_end":3127,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3128,"byte_end":3134,"line_start":72,"line_end":72,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3135,"byte_end":3138,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # let (my_surface,width,height,compositor,subcompositor,shm,shell,seat) = unimplemented!();","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3139,"byte_end":3234,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/ // create the decorated surface:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3235,"byte_end":3271,"line_start":75,"line_end":75,"column_start":1,"column_end":37}},{"value":"/ let frame = create_frame(","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3272,"byte_end":3301,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/     &mut event_queue,          // the event queue","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3302,"byte_end":3355,"line_start":77,"line_end":77,"column_start":1,"column_end":54}},{"value":"/     my_implementation,         // our implementation","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3356,"byte_end":3412,"line_start":78,"line_end":78,"column_start":1,"column_end":57}},{"value":"/     configure_token.clone(),   // the implementation data","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3413,"byte_end":3474,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"/     &my_surface, width, height, &compositor, &subcompositor, &shm, &shell, Some(seat)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3475,"byte_end":3564,"line_start":80,"line_end":80,"column_start":1,"column_end":90}},{"value":"/ ).unwrap();","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3565,"byte_end":3580,"line_start":81,"line_end":81,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3581,"byte_end":3584,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // then, while running your event loop","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3585,"byte_end":3627,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/ loop {","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3628,"byte_end":3638,"line_start":84,"line_end":84,"column_start":1,"column_end":11}},{"value":"/     display.flush().unwrap();","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3639,"byte_end":3672,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/     event_queue.dispatch().unwrap();","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3673,"byte_end":3713,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3714,"byte_end":3717,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/     // check if a resize is needed","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3718,"byte_end":3756,"line_start":88,"line_end":88,"column_start":1,"column_end":39}},{"value":"/     let mut configure_state = event_queue.state().get_mut(&configure_token);","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3757,"byte_end":3837,"line_start":89,"line_end":89,"column_start":1,"column_end":81}},{"value":"/     if let Some((w, h)) = configure_state.new_size.take() {","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3838,"byte_end":3901,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/         // The compositor suggests we take a new size of (w, h)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3902,"byte_end":3969,"line_start":91,"line_end":91,"column_start":1,"column_end":68}},{"value":"/         // Handle it as needed (see next section)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":3970,"byte_end":4023,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4024,"byte_end":4033,"line_start":93,"line_end":93,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4034,"byte_end":4039,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4040,"byte_end":4043,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4044,"byte_end":4051,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4052,"byte_end":4059,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4060,"byte_end":4063,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Resizing the surface","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4064,"byte_end":4091,"line_start":99,"line_end":99,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4092,"byte_end":4095,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ When resizing your main surface, you need to tell the `Frame` that it","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4096,"byte_end":4169,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/ must update its dimensions. This is very simple:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4170,"byte_end":4222,"line_start":102,"line_end":102,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4223,"byte_end":4226,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4227,"byte_end":4240,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/ // update your contents size (here by attaching a new buffer)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4241,"byte_end":4306,"line_start":105,"line_end":105,"column_start":1,"column_end":66}},{"value":"/ surface.attach(Some(&new_buffer));","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4307,"byte_end":4345,"line_start":106,"line_end":106,"column_start":1,"column_end":39}},{"value":"/ surface.commit();","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4346,"byte_end":4367,"line_start":107,"line_end":107,"column_start":1,"column_end":22}},{"value":"/ // update the borders size","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4368,"byte_end":4398,"line_start":108,"line_end":108,"column_start":1,"column_end":31}},{"value":"/ frame.resize(width, height);","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4399,"byte_end":4431,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ // refresh the frame so that it actually draws the new size","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4432,"byte_end":4495,"line_start":110,"line_end":110,"column_start":1,"column_end":64}},{"value":"/ frame.refresh();","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4496,"byte_end":4516,"line_start":111,"line_end":111,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4517,"byte_end":4524,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4525,"byte_end":4528,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ If you do this as a response of a `configure` event, note the following points:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4529,"byte_end":4612,"line_start":114,"line_end":114,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4613,"byte_end":4616,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ - You do not have to respect the exact sizes provided by the compositor, it is","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4617,"byte_end":4699,"line_start":116,"line_end":116,"column_start":1,"column_end":83}},{"value":"/   just a hint. You can even ignore it if you don't want the window to be resized.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4700,"byte_end":4785,"line_start":117,"line_end":117,"column_start":1,"column_end":86}},{"value":"/ - In case you chose to ignore the resize, it can be appropiate to still resize your","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4786,"byte_end":4873,"line_start":118,"line_end":118,"column_start":1,"column_end":88}},{"value":"/   window to its current size (update the buffer to the compositor), as the compositer","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4874,"byte_end":4963,"line_start":119,"line_end":119,"column_start":1,"column_end":90}},{"value":"/   might have resized your window without telling you.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":4964,"byte_end":5021,"line_start":120,"line_end":120,"column_start":1,"column_end":58}},{"value":"/ - The size hint provided to your implementation is a size hint for the interior of the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":5022,"byte_end":5112,"line_start":121,"line_end":121,"column_start":1,"column_end":91}},{"value":"/   window: the dimensions of the border has been subtracted from the hint the compositor","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":5113,"byte_end":5204,"line_start":122,"line_end":122,"column_start":1,"column_end":92}},{"value":"/   gave. If you need to compute dimensions taking into account the sizes of the borders,","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":5205,"byte_end":5296,"line_start":123,"line_end":123,"column_start":1,"column_end":92}},{"value":"/   you can use the `add_borders` and `subtract_borders` functions.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":5297,"byte_end":5366,"line_start":124,"line_end":124,"column_start":1,"column_end":70}},{"value":"warn(missing_docs)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":5368,"byte_end":5390,"line_start":126,"line_end":126,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":53},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11320,"byte_end":11325,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"Frame","qualname":"::frame::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" A decorated frame for a window","sig":null,"attributes":[{"value":"/ A decorated frame for a window","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11029,"byte_end":11063,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11064,"byte_end":11067,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This object allows you to interact with the shell_surface","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11068,"byte_end":11129,"line_start":49,"line_end":49,"column_start":1,"column_end":62}},{"value":"/ and frame.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11130,"byte_end":11144,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11145,"byte_end":11148,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ You'll at least need to use it to resize the borders when you window is","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11149,"byte_end":11224,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ resized.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11225,"byte_end":11237,"line_start":53,"line_end":53,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11238,"byte_end":11241,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Dropping it will remove your window and unmap your wl_surface.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11242,"byte_end":11308,"line_start":55,"line_end":55,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":65},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11795,"byte_end":11802,"line_start":71,"line_end":71,"column_start":5,"column_end":12},"name":"Regular","qualname":"::frame::State::Regular","value":"State::Regular","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Regular floating window\n","sig":null,"attributes":[{"value":"/ Regular floating window","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11763,"byte_end":11790,"line_start":70,"line_end":70,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":67},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11833,"byte_end":11842,"line_start":73,"line_end":73,"column_start":5,"column_end":14},"name":"Minimized","qualname":"::frame::State::Minimized","value":"State::Minimized","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Minimized window\n","sig":null,"attributes":[{"value":"/ Minimized window","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11808,"byte_end":11828,"line_start":72,"line_end":72,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":69},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11873,"byte_end":11882,"line_start":75,"line_end":75,"column_start":5,"column_end":14},"name":"Maximized","qualname":"::frame::State::Maximized","value":"State::Maximized","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Maximized window\n","sig":null,"attributes":[{"value":"/ Maximized window","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11848,"byte_end":11868,"line_start":74,"line_end":74,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":71},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11966,"byte_end":11976,"line_start":77,"line_end":77,"column_start":5,"column_end":15},"name":"Fullscreen","qualname":"::frame::State::Fullscreen","value":"State::Fullscreen(Option<&'output wl_output::WlOutput>)","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Fullscreen, with optional specification of an output to maximize over\n","sig":null,"attributes":[{"value":"/ Fullscreen, with optional specification of an output to maximize over","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11888,"byte_end":11961,"line_start":76,"line_end":76,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":63},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11742,"byte_end":11747,"line_start":69,"line_end":69,"column_start":10,"column_end":15},"name":"State","qualname":"::frame::State","value":"pub enum State<'output> {\n    Regular,\n    Minimized,\n    Maximized,\n    Fullscreen(Option<&'output wl_output::WlOutput>),\n}","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":71}],"decl_id":null,"docs":" Possible requested state for a window\n","sig":null,"attributes":[{"value":"/ Possible requested state for a window","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":11691,"byte_end":11732,"line_start":68,"line_end":68,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17122,"byte_end":17129,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"refresh","qualname":"<Frame>::refresh","value":"pub fn refresh(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Refreshes the frame","sig":null,"attributes":[{"value":"/ Refreshes the frame","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":16607,"byte_end":16630,"line_start":217,"line_end":217,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":16635,"byte_end":16638,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Redraws the frame to match its requested state (dimensions, presence/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":16643,"byte_end":16716,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ absence of decorations, ...)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":16721,"byte_end":16753,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":16758,"byte_end":16761,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ If the frame does not need a redraw, this method will do nothing,","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":16766,"byte_end":16835,"line_start":222,"line_end":222,"column_start":5,"column_end":74}},{"value":"/ so don't be afraid to call it frequently.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":16840,"byte_end":16885,"line_start":223,"line_end":223,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":16890,"byte_end":16893,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ You need to call this method after every change to the dimensions or state","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":16898,"byte_end":16976,"line_start":225,"line_end":225,"column_start":5,"column_end":83}},{"value":"/ of the decorations of your window, otherwise the drawn decorations may go","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":16981,"byte_end":17058,"line_start":226,"line_end":226,"column_start":5,"column_end":82}},{"value":"/ out of sync with the state of your content.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17063,"byte_end":17110,"line_start":227,"line_end":227,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17491,"byte_end":17500,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"set_title","qualname":"<Frame>::set_title","value":"pub fn set_title(&Self, String)","parent":null,"children":[],"decl_id":null,"docs":" Set a short title for the window.","sig":null,"attributes":[{"value":"/ Set a short title for the window.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17281,"byte_end":17318,"line_start":235,"line_end":235,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17323,"byte_end":17326,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This string may be used to identify the surface in a task bar, window list, or other user","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17331,"byte_end":17424,"line_start":237,"line_end":237,"column_start":5,"column_end":98}},{"value":"/ interface elements provided by the compositor.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17429,"byte_end":17479,"line_start":238,"line_end":238,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17883,"byte_end":17893,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"set_app_id","qualname":"<Frame>::set_app_id","value":"pub fn set_app_id(&Self, String)","parent":null,"children":[],"decl_id":null,"docs":" Set an app id for the surface.","sig":null,"attributes":[{"value":"/ Set an app id for the surface.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17580,"byte_end":17614,"line_start":243,"line_end":243,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17619,"byte_end":17622,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The surface class identifies the general class of applications to which the surface","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17627,"byte_end":17714,"line_start":245,"line_end":245,"column_start":5,"column_end":92}},{"value":"/ belongs.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17719,"byte_end":17731,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17736,"byte_end":17739,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Several wayland compositors will try to find a `.desktop` file matching this name","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17744,"byte_end":17829,"line_start":248,"line_end":248,"column_start":5,"column_end":90}},{"value":"/ to find metadata about your apps.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17834,"byte_end":17871,"line_start":249,"line_end":249,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":18138,"byte_end":18150,"line_start":258,"line_end":258,"column_start":12,"column_end":24},"name":"set_decorate","qualname":"<Frame>::set_decorate","value":"pub fn set_decorate(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set wether the window should be decorated or not","sig":null,"attributes":[{"value":"/ Set wether the window should be decorated or not","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":17976,"byte_end":18028,"line_start":254,"line_end":254,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":18033,"byte_end":18036,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ You need to call `refresh()` afterwards for this to properly","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":18041,"byte_end":18105,"line_start":256,"line_end":256,"column_start":5,"column_end":69}},{"value":"/ take effect.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":18110,"byte_end":18126,"line_start":257,"line_end":257,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":18792,"byte_end":18798,"line_start":277,"line_end":277,"column_start":12,"column_end":18},"name":"resize","qualname":"<Frame>::resize","value":"pub fn resize(&mut Self, i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Resize the decorations","sig":null,"attributes":[{"value":"/ Resize the decorations","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":18508,"byte_end":18534,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":18539,"byte_end":18542,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ You should call this whenever you change the size of the contents","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":18547,"byte_end":18616,"line_start":272,"line_end":272,"column_start":5,"column_end":74}},{"value":"/ of your window, with the new _inner size_ of your window.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":18621,"byte_end":18682,"line_start":273,"line_end":273,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":18687,"byte_end":18690,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ You need to call `refresh()` afterwards for this to properly","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":18695,"byte_end":18759,"line_start":275,"line_end":275,"column_start":5,"column_end":69}},{"value":"/ take effect.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":18764,"byte_end":18780,"line_start":276,"line_end":276,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":19093,"byte_end":19102,"line_start":287,"line_end":287,"column_start":12,"column_end":21},"name":"set_state","qualname":"<Frame>::set_state","value":"pub fn set_state(&mut Self, State)","parent":null,"children":[],"decl_id":null,"docs":" Sets the requested state of this surface\n","sig":null,"attributes":[{"value":"/ Sets the requested state of this surface","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":19037,"byte_end":19081,"line_start":286,"line_end":286,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":20005,"byte_end":20017,"line_start":313,"line_end":313,"column_start":12,"column_end":24},"name":"set_min_size","qualname":"<Frame>::set_min_size","value":"pub fn set_min_size(&mut Self, Option<(i32, i32)>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the minimum possible size for this window","sig":null,"attributes":[{"value":"/ Sets the minimum possible size for this window","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":19754,"byte_end":19804,"line_start":307,"line_end":307,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":19809,"byte_end":19812,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Provide either a tuple `Some((width, height))` or `None` to unset the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":19817,"byte_end":19890,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ minimum size.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":19895,"byte_end":19912,"line_start":310,"line_end":310,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":19917,"byte_end":19920,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The provided size is the interior size, not counting decorations","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":19925,"byte_end":19993,"line_start":312,"line_end":312,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":20658,"byte_end":20670,"line_start":333,"line_end":333,"column_start":12,"column_end":24},"name":"set_max_size","qualname":"<Frame>::set_max_size","value":"pub fn set_max_size(&mut Self, Option<(i32, i32)>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum possible size for this window","sig":null,"attributes":[{"value":"/ Sets the maximum possible size for this window","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":20407,"byte_end":20457,"line_start":327,"line_end":327,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":20462,"byte_end":20465,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Provide either a tuple `Some((width, height))` or `None` to unset the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":20470,"byte_end":20543,"line_start":329,"line_end":329,"column_start":5,"column_end":78}},{"value":"/ maximum size.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":20548,"byte_end":20565,"line_start":330,"line_end":330,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":20570,"byte_end":20573,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ The provided size is the interior size, not counting decorations","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":20578,"byte_end":20646,"line_start":332,"line_end":332,"column_start":5,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":218},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/theme.rs","byte_start":32024,"byte_end":32040,"line_start":91,"line_end":91,"column_start":8,"column_end":24},"name":"subtract_borders","qualname":"::theme::subtract_borders","value":"pub fn subtract_borders(i32, i32) -> (i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Subtracts the border dimensions from the given dimensions.\n","sig":null,"attributes":[{"value":"/ Subtracts the border dimensions from the given dimensions.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/theme.rs","byte_start":31954,"byte_end":32016,"line_start":90,"line_end":90,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":219},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/theme.rs","byte_start":32276,"byte_end":32287,"line_start":99,"line_end":99,"column_start":8,"column_end":19},"name":"add_borders","qualname":"::theme::add_borders","value":"pub fn add_borders(i32, i32) -> (i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Adds the border dimensions to the given dimensions.\n","sig":null,"attributes":[{"value":"/ Adds the border dimensions to the given dimensions.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/theme.rs","byte_start":32213,"byte_end":32268,"line_start":98,"line_end":98,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":340},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":38490,"byte_end":38493,"line_start":12,"line_end":12,"column_start":5,"column_end":8},"name":"Xdg","qualname":"::shell::Shell::Xdg","value":"Shell::Xdg(xdg_shell::client::zxdg_shell_v6::ZxdgShellV6)","parent":{"krate":0,"index":339},"children":[],"decl_id":null,"docs":" A xdg_shell from unstable v6\n","sig":null,"attributes":[{"value":"/ A xdg_shell from unstable v6","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":38453,"byte_end":38485,"line_start":11,"line_end":11,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":343},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":38565,"byte_end":38567,"line_start":14,"line_end":14,"column_start":5,"column_end":7},"name":"Wl","qualname":"::shell::Shell::Wl","value":"Shell::Wl(wl_shell::WlShell)","parent":{"krate":0,"index":339},"children":[],"decl_id":null,"docs":" A wl_shell\n","sig":null,"attributes":[{"value":"/ A wl_shell","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":38546,"byte_end":38560,"line_start":13,"line_end":13,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":339},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":38441,"byte_end":38446,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Shell","qualname":"::shell::Shell","value":"pub enum Shell {\n    Xdg(xdg_shell::client::zxdg_shell_v6::ZxdgShellV6),\n    Wl(wl_shell::WlShell),\n}","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":343}],"decl_id":null,"docs":" Enum over the supported shells\n","sig":null,"attributes":[{"value":"/ Enum over the supported shells","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":38397,"byte_end":38431,"line_start":9,"line_end":9,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":465},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":39005,"byte_end":39008,"line_start":35,"line_end":35,"column_start":5,"column_end":8},"name":"Xdg","qualname":"::shell::Configure::Xdg","value":"Configure::Xdg(Vec<xdg_shell::client::zxdg_toplevel_v6::State>)","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" Configure data from xdg_shell\n","sig":null,"attributes":[{"value":"/ Configure data from xdg_shell","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":38967,"byte_end":39000,"line_start":34,"line_end":34,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":468},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":39100,"byte_end":39102,"line_start":37,"line_end":37,"column_start":5,"column_end":7},"name":"Wl","qualname":"::shell::Configure::Wl","value":"Configure::Wl(wl_shell_surface::Resize)","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" Configure data from wl_shell\n","sig":null,"attributes":[{"value":"/ Configure data from wl_shell","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":39063,"byte_end":39095,"line_start":36,"line_end":36,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":464},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":38951,"byte_end":38960,"line_start":33,"line_end":33,"column_start":10,"column_end":19},"name":"Configure","qualname":"::shell::Configure","value":"pub enum Configure {\n    Xdg(Vec<xdg_shell::client::zxdg_toplevel_v6::State>),\n    Wl(wl_shell_surface::Resize),\n}","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":468}],"decl_id":null,"docs":" Configure data for a decorated surface handler.\n","sig":null,"attributes":[{"value":"/ Configure data for a decorated surface handler.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":38866,"byte_end":38917,"line_start":31,"line_end":31,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":6919,"byte_end":6938,"line_start":196,"line_end":196,"column_start":12,"column_end":31},"name":"FrameImplementation","qualname":"::FrameImplementation","value":"FrameImplementation { configure, close, refresh }","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"decl_id":null,"docs":" For handling events that occur to a Frame.\n","sig":null,"attributes":[{"value":"/ For handling events that occur to a Frame.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":6861,"byte_end":6907,"line_start":195,"line_end":195,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":439},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7231,"byte_end":7240,"line_start":202,"line_end":202,"column_start":9,"column_end":18},"name":"configure","qualname":"::FrameImplementation::configure","value":"for<'r, 's> fn(&'r mut wayland_client::EventQueueHandle, &'s mut ID, shell::Configure, std::option::Option<(i32, i32)>)","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Called whenever the Frame has been resized.","sig":null,"attributes":[{"value":"/ Called whenever the Frame has been resized.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":6949,"byte_end":6996,"line_start":197,"line_end":197,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7001,"byte_end":7004,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ **Note:** if you've not set a minimum size, `width` and `height` will not always be","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7009,"byte_end":7096,"line_start":199,"line_end":199,"column_start":5,"column_end":92}},{"value":"/ positive values. Values can be negative if a user attempts to resize the window past","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7101,"byte_end":7189,"line_start":200,"line_end":200,"column_start":5,"column_end":93}},{"value":"/ the left or top borders.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7194,"byte_end":7222,"line_start":201,"line_end":201,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":440},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7400,"byte_end":7405,"line_start":205,"line_end":205,"column_start":9,"column_end":14},"name":"close","qualname":"::FrameImplementation::close","value":"for<'r, 's> fn(&'r mut wayland_client::EventQueueHandle, &'s mut ID)","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Called when the Frame is closed.\n","sig":null,"attributes":[{"value":"/ Called when the Frame is closed.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7355,"byte_end":7391,"line_start":204,"line_end":204,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":441},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7516,"byte_end":7523,"line_start":207,"line_end":207,"column_start":9,"column_end":16},"name":"refresh","qualname":"::FrameImplementation::refresh","value":"for<'r, 's> fn(&'r mut wayland_client::EventQueueHandle, &'s mut ID)","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Called when the Frame wants to be refreshed\n","sig":null,"attributes":[{"value":"/ Called when the Frame wants to be refreshed","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7460,"byte_end":7507,"line_start":206,"line_end":206,"column_start":5,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":447},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7962,"byte_end":7974,"line_start":223,"line_end":223,"column_start":8,"column_end":20},"name":"create_frame","qualname":"::create_frame","value":"pub fn create_frame<ID: 'static>(&mut EventQueueHandle,\n                                 FrameImplementation<ID>, ID,\n                                 &wl_surface::WlSurface, i32, i32,\n                                 &wl_compositor::WlCompositor,\n                                 &wl_subcompositor::WlSubcompositor,\n                                 &wl_shm::WlShm, &Shell,\n                                 Option<wl_seat::WlSeat>) -> Result<Frame, ()>","parent":null,"children":[],"decl_id":null,"docs":" Create a decoration frame for a wl_surface","sig":null,"attributes":[{"value":"/ Create a decoration frame for a wl_surface","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7739,"byte_end":7785,"line_start":217,"line_end":217,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7786,"byte_end":7789,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ This will create a decoration and declare it as a shell surface to","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7790,"byte_end":7860,"line_start":219,"line_end":219,"column_start":1,"column_end":71}},{"value":"/ the wayland compositor.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7861,"byte_end":7888,"line_start":220,"line_end":220,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7889,"byte_end":7892,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ See crate documentations for details about how to use it.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7893,"byte_end":7954,"line_start":222,"line_end":222,"column_start":1,"column_end":62}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":10471,"byte_end":10484,"line_start":26,"line_end":26,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":12024,"byte_end":12029,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":21072,"byte_end":21077,"line_start":348,"line_end":348,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/pointer.rs","byte_start":21867,"byte_end":21874,"line_start":14,"line_end":14,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/pointer.rs","byte_start":22262,"byte_end":22274,"line_start":32,"line_end":32,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/theme.rs","byte_start":35391,"byte_end":35397,"line_start":199,"line_end":199,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/themed_pointer.rs","byte_start":36256,"byte_end":36269,"line_start":14,"line_end":14,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/themed_pointer.rs","byte_start":37957,"byte_end":37970,"line_start":69,"line_end":69,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/themed_pointer.rs","byte_start":38107,"byte_end":38120,"line_start":76,"line_end":76,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/xdg.rs","byte_start":44821,"byte_end":44828,"line_start":11,"line_end":11,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":38596,"byte_end":38601,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":39138,"byte_end":39145,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":6631,"byte_end":6641,"line_start":185,"line_end":185,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7595,"byte_end":7614,"line_start":210,"line_end":210,"column_start":19,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7641,"byte_end":7660,"line_start":211,"line_end":211,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":10471,"byte_end":10484,"line_start":26,"line_end":26,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":12024,"byte_end":12029,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/frame.rs","byte_start":21072,"byte_end":21077,"line_start":348,"line_end":348,"column_start":15,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/pointer.rs","byte_start":21867,"byte_end":21874,"line_start":14,"line_end":14,"column_start":15,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/pointer.rs","byte_start":22262,"byte_end":22274,"line_start":32,"line_end":32,"column_start":6,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/theme.rs","byte_start":35391,"byte_end":35397,"line_start":199,"line_end":199,"column_start":10,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/themed_pointer.rs","byte_start":36256,"byte_end":36269,"line_start":14,"line_end":14,"column_start":6,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/themed_pointer.rs","byte_start":37957,"byte_end":37970,"line_start":69,"line_end":69,"column_start":16,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":264},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/themed_pointer.rs","byte_start":38107,"byte_end":38120,"line_start":76,"line_end":76,"column_start":15,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":264},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/xdg.rs","byte_start":44821,"byte_end":44828,"line_start":11,"line_end":11,"column_start":6,"column_end":13},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":38596,"byte_end":38601,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/shell/mod.rs","byte_start":39138,"byte_end":39145,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":6631,"byte_end":6641,"line_start":185,"line_end":185,"column_start":20,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7595,"byte_end":7614,"line_start":210,"line_end":210,"column_start":19,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-window-0.13.3/src/lib.rs","byte_start":7641,"byte_end":7660,"line_start":211,"line_end":211,"column_start":20,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":2625}}]}