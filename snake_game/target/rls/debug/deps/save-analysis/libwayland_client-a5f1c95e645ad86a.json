{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5","program":"/home/abraham/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wayland_client","/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"cursor\"","--cfg","feature=\"default\"","--cfg","feature=\"dlopen\"","--cfg","feature=\"egl\"","-C","metadata=a5f1c95e645ad86a","-C","extra-filename=-a5f1c95e645ad86a","--out-dir","/home/abraham/Frontier/snake_game/target/rls/debug/deps","-L","dependency=/home/abraham/Frontier/snake_game/target/rls/debug/deps","--extern","bitflags=/home/abraham/Frontier/snake_game/target/rls/debug/deps/libbitflags-d5435ff0cbbc4090.rmeta","--extern","libc=/home/abraham/Frontier/snake_game/target/rls/debug/deps/liblibc-808a18f5e342f94a.rmeta","--extern","token_store=/home/abraham/Frontier/snake_game/target/rls/debug/deps/libtoken_store-e5e4a9364f05cdd2.rmeta","--extern","wayland_sys=/home/abraham/Frontier/snake_game/target/rls/debug/deps/libwayland_sys-df6b849d5b966efc.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/abraham/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/abraham/Frontier/snake_game/target/rls/debug/deps/libwayland_client-a5f1c95e645ad86a.rmeta"},"prelude":{"crate_id":{"name":"wayland_client","disambiguator":[2759866066984625328,0]},"crate_root":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src","external_crates":[{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":20,"id":{"name":"bitflags","disambiguator":[15852493003383756076,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":21,"id":{"name":"libc","disambiguator":[1269810525686256945,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":22,"id":{"name":"token_store","disambiguator":[11046059346698597120,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":23,"id":{"name":"wayland_sys","disambiguator":[16642949370290190437,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":24,"id":{"name":"dlib","disambiguator":[5549583731788796334,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":25,"id":{"name":"libloading","disambiguator":[9101022996519854472,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":26,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","num":27,"id":{"name":"lazy_static","disambiguator":[2335416628160260444,0]}}],"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":0,"byte_end":9315,"line_start":1,"line_end":264,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":376},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2861,"byte_end":2867,"line_start":86,"line_end":86,"column_start":20,"column_end":26},"alias_span":null,"name":"protocol","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":375},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2900,"byte_end":2910,"line_start":87,"line_end":87,"column_start":20,"column_end":30},"alias_span":null,"name":"protocol_interfaces","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3165,"byte_end":3175,"line_start":101,"line_end":101,"column_start":19,"column_end":29},"alias_span":null,"name":"connect_to","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3177,"byte_end":3192,"line_start":101,"line_end":101,"column_start":31,"column_end":46},"alias_span":null,"name":"default_connect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":399},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3194,"byte_end":3206,"line_start":101,"line_end":101,"column_start":48,"column_end":60},"alias_span":null,"name":"ConnectError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":406},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3208,"byte_end":3218,"line_start":101,"line_end":101,"column_start":62,"column_end":72},"alias_span":null,"name":"FatalError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3235,"byte_end":3245,"line_start":102,"line_end":102,"column_start":15,"column_end":25},"alias_span":null,"name":"EnvHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":179},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3247,"byte_end":3262,"line_start":102,"line_end":102,"column_start":27,"column_end":42},"alias_span":null,"name":"EnvHandlerInner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3264,"byte_end":3273,"line_start":102,"line_end":102,"column_start":44,"column_end":53},"alias_span":null,"name":"EnvNotify","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3298,"byte_end":3308,"line_start":103,"line_end":103,"column_start":23,"column_end":33},"alias_span":null,"name":"EventQueue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3310,"byte_end":3326,"line_start":103,"line_end":103,"column_start":35,"column_end":51},"alias_span":null,"name":"EventQueueHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3328,"byte_end":3343,"line_start":103,"line_end":103,"column_start":53,"column_end":68},"alias_span":null,"name":"ReadEventsGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":124},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3345,"byte_end":3359,"line_start":103,"line_end":103,"column_start":70,"column_end":84},"alias_span":null,"name":"RegisterStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":18},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3361,"byte_end":3366,"line_start":103,"line_end":103,"column_start":86,"column_end":91},"alias_span":null,"name":"State","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":57},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3368,"byte_end":3378,"line_start":103,"line_end":103,"column_start":93,"column_end":103},"alias_span":null,"name":"StateProxy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":20},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3402,"byte_end":3412,"line_start":104,"line_end":104,"column_start":23,"column_end":33},"alias_span":null,"name":"StateToken","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":9275,"byte_end":9276,"line_start":262,"line_end":262,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":396}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":9311,"byte_end":9312,"line_start":263,"line_end":263,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":396}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":0,"byte_end":9315,"line_start":1,"line_end":264,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":63},{"krate":0,"index":164},{"krate":0,"index":217},{"krate":0,"index":244},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":367},{"krate":0,"index":416},{"krate":0,"index":423},{"krate":0,"index":371},{"krate":0,"index":426},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":374},{"krate":0,"index":396}],"decl_id":null,"docs":" Client-side Wayland connector","sig":null,"attributes":[{"value":"/ Client-side Wayland connector","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":34,"byte_end":37,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":38,"byte_end":52,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":53,"byte_end":56,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Connection to the Wayland compositor is achieved by","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":57,"byte_end":112,"line_start":5,"line_end":5,"column_start":1,"column_end":56}},{"value":"/ the `default_connect()` function, which provides you","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":113,"byte_end":169,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/ with a `WlDisplay` and an `EventQueue`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":170,"byte_end":213,"line_start":7,"line_end":7,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":214,"byte_end":217,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ From the display, you'll retrieve the registry, from","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":218,"byte_end":274,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/ which you can instantiate the globals you need. This","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":275,"byte_end":331,"line_start":10,"line_end":10,"column_start":1,"column_end":57}},{"value":"/ step being really similar in most cases, this crate","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":332,"byte_end":387,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/ contains an utility struct `EnvHandler` which can do","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":388,"byte_end":444,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/ this job for you. See its documentation for details.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":445,"byte_end":501,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":502,"byte_end":505,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ You then register your handlers for events to the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":506,"byte_end":559,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"/ event queue, and integrate it in your main event loop.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":560,"byte_end":618,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":619,"byte_end":622,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Implementations and event queues","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":623,"byte_end":661,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":662,"byte_end":665,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This crate mirrors the callback-oriented design of the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":666,"byte_end":724,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/ Wayland C library by using implementation structs: each wayland","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":725,"byte_end":792,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/ type defines an `Implementation` struct in its module, with","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":793,"byte_end":856,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ one function field for each possible event this object can receive.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":857,"byte_end":928,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":929,"byte_end":932,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When registering an object on an event queue, you need to provide an","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":933,"byte_end":1005,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ implementation for this object. You can also provide some","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1006,"byte_end":1067,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/ \"implementation data\": a value that will be provided as second","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1068,"byte_end":1134,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ argument to all the callback methods of your implementation.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1135,"byte_end":1199,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1200,"byte_end":1203,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A typical use of implementation data is to store here one or more","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1204,"byte_end":1273,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ state tokens to access some part of the shared state from your","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1274,"byte_end":1340,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ callback.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1341,"byte_end":1354,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1355,"byte_end":1358,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ## Example of implementation","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1359,"byte_end":1391,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1392,"byte_end":1395,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ You can register your wayland objects to an event queue:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1396,"byte_end":1456,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1457,"byte_end":1460,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1461,"byte_end":1474,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ event_queue.register(&my_object, implementation, impl_data);","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1475,"byte_end":1539,"line_start":39,"line_end":39,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1540,"byte_end":1547,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1548,"byte_end":1551,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ A given wayland object can only be registered to a event","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1552,"byte_end":1612,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ queue at a given time, re-registering it will overwrite","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1613,"byte_end":1672,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/ the previous configuration.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1673,"byte_end":1704,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1705,"byte_end":1708,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Objects can be registered to event queues using the `&EventQueueHandle`","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1709,"byte_end":1784,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ argument, available from withing an event callback.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1785,"byte_end":1840,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1841,"byte_end":1844,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ## Event loop integration","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1845,"byte_end":1874,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1875,"byte_end":1878,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Once this setup is done, you can integrate the event queue","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1879,"byte_end":1941,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"/ to the main event loop of your program:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1942,"byte_end":1985,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1986,"byte_end":1989,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":1990,"byte_end":2003,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/ loop {","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2004,"byte_end":2014,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/     // flush events to the server","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2015,"byte_end":2052,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/     display.flush().unwrap();","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2053,"byte_end":2086,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     // receive events from the server and dispatch them","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2087,"byte_end":2146,"line_start":58,"line_end":58,"column_start":1,"column_end":60}},{"value":"/     // to handlers (might block)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2147,"byte_end":2183,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/     event_queue.dispatch().unwrap();","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2184,"byte_end":2224,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2225,"byte_end":2230,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2231,"byte_end":2238,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2239,"byte_end":2242,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ For more precise control of the flow of the event queue","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2243,"byte_end":2302,"line_start":64,"line_end":64,"column_start":1,"column_end":60}},{"value":"/ (and importantly non-blocking options), see `EventQueue`","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2303,"byte_end":2363,"line_start":65,"line_end":65,"column_start":1,"column_end":61}},{"value":"/ documentation.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2364,"byte_end":2382,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2383,"byte_end":2386,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Protocols integration","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2387,"byte_end":2414,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2415,"byte_end":2418,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This crate provides the basic primitives as well as the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2419,"byte_end":2478,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/ core wayland protocol (in the `protocol` module), but","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2479,"byte_end":2536,"line_start":71,"line_end":71,"column_start":1,"column_end":58}},{"value":"/ other protocols can be integrated from XML descriptions.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2537,"byte_end":2597,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2598,"byte_end":2601,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The the crate `wayland_scanner` and its documentation for","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2602,"byte_end":2663,"line_start":74,"line_end":74,"column_start":1,"column_end":62}},{"value":"/ details about how to do so.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2664,"byte_end":2695,"line_start":75,"line_end":75,"column_start":1,"column_end":32}},{"value":"warn(missing_docs)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":2697,"byte_end":2719,"line_start":77,"line_end":77,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":400},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":9808,"byte_end":9820,"line_start":14,"line_end":14,"column_start":5,"column_end":17},"name":"NoWaylandLib","qualname":"::display::ConnectError::NoWaylandLib","value":"ConnectError::NoWaylandLib","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":" The library was compiled with the `dlopen` feature, and the `libwayland-client.so`\n library could not be found at runtime\n","sig":null,"attributes":[{"value":"/ The library was compiled with the `dlopen` feature, and the `libwayland-client.so`","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":9671,"byte_end":9757,"line_start":12,"line_end":12,"column_start":5,"column_end":91}},{"value":"/ library could not be found at runtime","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":9762,"byte_end":9803,"line_start":13,"line_end":13,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":402},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10033,"byte_end":10054,"line_start":19,"line_end":19,"column_start":5,"column_end":26},"name":"NoCompositorListening","qualname":"::display::ConnectError::NoCompositorListening","value":"ConnectError::NoCompositorListening","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":" Any needed library was found, but the listening socket of the server could not be\n found.","sig":null,"attributes":[{"value":"/ Any needed library was found, but the listening socket of the server could not be","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":9826,"byte_end":9911,"line_start":15,"line_end":15,"column_start":5,"column_end":90}},{"value":"/ found.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":9916,"byte_end":9926,"line_start":16,"line_end":16,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":9931,"byte_end":9934,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ Most of the time, this means that the program was not started from a wayland session.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":9939,"byte_end":10028,"line_start":18,"line_end":18,"column_start":5,"column_end":94}}]},{"kind":"Enum","id":{"krate":0,"index":399},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":9652,"byte_end":9664,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"name":"ConnectError","qualname":"::display::ConnectError","value":"pub enum ConnectError { NoWaylandLib, NoCompositorListening, }","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":402}],"decl_id":null,"docs":" Enum representing the possible reasons why connecting to the wayland server failed\n","sig":null,"attributes":[{"value":"/ Enum representing the possible reasons why connecting to the wayland server failed","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":9539,"byte_end":9625,"line_start":9,"line_end":9,"column_start":1,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":407},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10479,"byte_end":10481,"line_start":31,"line_end":31,"column_start":5,"column_end":7},"name":"Io","qualname":"::display::FatalError::Io","value":"FatalError::Io(io::Error)","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Session aborted after an I/O error\n","sig":null,"attributes":[{"value":"/ Session aborted after an I/O error","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10436,"byte_end":10474,"line_start":30,"line_end":30,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":410},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10545,"byte_end":10553,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::display::FatalError::Protocol","value":"FatalError::Protocol { interface, proxy_id, error_code }","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Session aborted after a protocol error\n","sig":null,"attributes":[{"value":"/ Session aborted after a protocol error","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10498,"byte_end":10540,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":406},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10419,"byte_end":10429,"line_start":29,"line_end":29,"column_start":10,"column_end":20},"name":"FatalError","qualname":"::display::FatalError","value":"pub enum FatalError {\n    Io(io::Error),\n    Protocol {\n        interface: String,\n        proxy_id: u32,\n        error_code: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":410}],"decl_id":null,"docs":" Enum representing possible errors fatal to a wayland session","sig":null,"attributes":[{"value":"/ Enum representing possible errors fatal to a wayland session","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10059,"byte_end":10123,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10124,"byte_end":10127,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ These errors are fatal, so there is no way to recover the session, you","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10128,"byte_end":10202,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ must create a new one (or report failure to your user). But recovering","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10203,"byte_end":10277,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ this error can provide usefull debug information and/or help provide","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10278,"byte_end":10350,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ a sensible error message to the user.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10351,"byte_end":10392,"line_start":27,"line_end":27,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":11193,"byte_end":11208,"line_start":49,"line_end":49,"column_start":8,"column_end":23},"name":"default_connect","qualname":"::display::default_connect","value":"pub fn default_connect() -> Result<(WlDisplay, EventQueue), ConnectError>","parent":null,"children":[],"decl_id":null,"docs":" Connect to the compositor socket","sig":null,"attributes":[{"value":"/ Connect to the compositor socket","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10952,"byte_end":10988,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10989,"byte_end":10992,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Attempt to connect to a Wayland compositor according to the environment variables.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":10993,"byte_end":11079,"line_start":46,"line_end":46,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":11080,"byte_end":11083,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ On success, returns the display object, as well as the default event iterator associated with it.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":11084,"byte_end":11185,"line_start":48,"line_end":48,"column_start":1,"column_end":102}}]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":12048,"byte_end":12058,"line_start":74,"line_end":74,"column_start":8,"column_end":18},"name":"connect_to","qualname":"::display::connect_to","value":"pub fn connect_to(&OsStr) -> Result<(WlDisplay, EventQueue), ConnectError>","parent":null,"children":[],"decl_id":null,"docs":" Connect to the compositor socket","sig":null,"attributes":[{"value":"/ Connect to the compositor socket","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":11824,"byte_end":11860,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":11861,"byte_end":11864,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Attempt to connect to a Wayland compositor on a given socket name","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":11865,"byte_end":11934,"line_start":71,"line_end":71,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":11935,"byte_end":11938,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ On success, returns the display object, as well as the default event iterator associated with it.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":11939,"byte_end":12040,"line_start":73,"line_end":73,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":13186,"byte_end":13191,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"flush","qualname":"<WlDisplay>::flush","value":"pub fn flush(&Self) -> io::Result<i32>","parent":null,"children":[],"decl_id":null,"docs":" Non-blocking write to the server","sig":null,"attributes":[{"value":"/ Non-blocking write to the server","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":12888,"byte_end":12924,"line_start":92,"line_end":92,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":12929,"byte_end":12932,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Will write as many pending requests as possible to the server socket. Never blocks: if not all","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":12937,"byte_end":13035,"line_start":94,"line_end":94,"column_start":5,"column_end":103}},{"value":"/ requests coul be written, will return an io error `WouldBlock`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":13040,"byte_end":13107,"line_start":95,"line_end":95,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":13112,"byte_end":13115,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ On success returns the number of written requests.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":13120,"byte_end":13174,"line_start":97,"line_end":97,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":13628,"byte_end":13646,"line_start":116,"line_end":116,"column_start":12,"column_end":30},"name":"create_event_queue","qualname":"<WlDisplay>::create_event_queue","value":"pub fn create_event_queue(&Self) -> EventQueue","parent":null,"children":[],"decl_id":null,"docs":" Create a new EventQueue","sig":null,"attributes":[{"value":"/ Create a new EventQueue","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":13533,"byte_end":13560,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":13565,"byte_end":13568,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ No object is by default attached to it.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":13573,"byte_end":13616,"line_start":115,"line_end":115,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":14347,"byte_end":14357,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"last_error","qualname":"<WlDisplay>::last_error","value":"pub fn last_error(&Self) -> Option<FatalError>","parent":null,"children":[],"decl_id":null,"docs":" Get the last error that occured on the session","sig":null,"attributes":[{"value":"/ Get the last error that occured on the session","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":13948,"byte_end":13998,"line_start":127,"line_end":127,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":14003,"byte_end":14006,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Such errors are *fatal*, meaning that if this function does not","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":14011,"byte_end":14078,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ return `None`, your session is not usable any longer.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":14083,"byte_end":14140,"line_start":130,"line_end":130,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":14145,"byte_end":14148,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ As such, this function mostly provide diagnistics information. You can have a hint","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":14153,"byte_end":14239,"line_start":132,"line_end":132,"column_start":5,"column_end":91}},{"value":"/ an error might have been generated if I/O methods of EventQueue start returning errors.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":14244,"byte_end":14335,"line_start":133,"line_end":133,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":16095,"byte_end":16101,"line_start":182,"line_end":182,"column_start":19,"column_end":25},"name":"get_fd","qualname":"<WlDisplay>::get_fd","value":"pub unsafe fn get_fd(&Self) -> ::std::os::unix::io::RawFd","parent":null,"children":[],"decl_id":null,"docs":" Get the raw File Descriptor associated with the connection","sig":null,"attributes":[{"value":"/ Get the raw File Descriptor associated with the connection","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":15577,"byte_end":15639,"line_start":173,"line_end":173,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":15644,"byte_end":15647,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This is provided to be used in conjunction with some polling mecanism,","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":15652,"byte_end":15726,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ if you want to manually control the flow with something like `epoll`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":15731,"byte_end":15804,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/ In this case, you'll most likely want to use `EventQueue::prepare_read()` and","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":15809,"byte_end":15890,"line_start":177,"line_end":177,"column_start":5,"column_end":86}},{"value":"/ `EventQueue::dispatch_pending()` rather than `EventQueue::dispatch()`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":15895,"byte_end":15969,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":15974,"byte_end":15977,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Reading or writing anything to this FD will corrupt the internal state of","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":15982,"byte_end":16059,"line_start":180,"line_end":180,"column_start":5,"column_end":82}},{"value":"/ the lib.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":16064,"byte_end":16076,"line_start":181,"line_end":181,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":16511,"byte_end":16521,"line_start":195,"line_end":195,"column_start":19,"column_end":29},"name":"disconnect","qualname":"<WlDisplay>::disconnect","value":"pub unsafe fn disconnect(Self)","parent":null,"children":[],"decl_id":null,"docs":" Close the wayland connection","sig":null,"attributes":[{"value":"/ Close the wayland connection","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":16284,"byte_end":16316,"line_start":190,"line_end":190,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":16321,"byte_end":16324,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This is unsafe because you must ensure you do this only","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":16329,"byte_end":16388,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/ after all wayland objects are destroyed, as this will","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":16393,"byte_end":16450,"line_start":193,"line_end":193,"column_start":5,"column_end":62}},{"value":"/ release the wayland shared state.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":16455,"byte_end":16492,"line_start":194,"line_end":194,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":125},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17371,"byte_end":17381,"line_start":23,"line_end":23,"column_start":5,"column_end":15},"name":"Registered","qualname":"::event_queue::RegisterStatus::Registered","value":"RegisterStatus::Registered","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" The proxy was properly registered to this event queue & handler.\n","sig":null,"attributes":[{"value":"/ The proxy was properly registered to this event queue & handler.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17298,"byte_end":17366,"line_start":22,"line_end":22,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":127},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17471,"byte_end":17480,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"name":"Unmanaged","qualname":"::event_queue::RegisterStatus::Unmanaged","value":"RegisterStatus::Unmanaged","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" The proxy was not registered because it is not managed by `wayland-client`.\n","sig":null,"attributes":[{"value":"/ The proxy was not registered because it is not managed by `wayland-client`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17387,"byte_end":17466,"line_start":24,"line_end":24,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":129},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17556,"byte_end":17560,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Dead","qualname":"::event_queue::RegisterStatus::Dead","value":"RegisterStatus::Dead","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" The proxy was not registered because it is already destroyed.\n","sig":null,"attributes":[{"value":"/ The proxy was not registered because it is already destroyed.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17486,"byte_end":17551,"line_start":26,"line_end":26,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":124},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17277,"byte_end":17291,"line_start":21,"line_end":21,"column_start":10,"column_end":24},"name":"RegisterStatus","qualname":"::event_queue::RegisterStatus","value":"pub enum RegisterStatus { Registered, Unmanaged, Dead, }","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129}],"decl_id":null,"docs":" Status of a registration attempt of a proxy.\n","sig":null,"attributes":[{"value":"/ Status of a registration attempt of a proxy.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17219,"byte_end":17267,"line_start":20,"line_end":20,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":131},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17790,"byte_end":17806,"line_start":36,"line_end":36,"column_start":12,"column_end":28},"name":"EventQueueHandle","qualname":"::event_queue::EventQueueHandle","value":"EventQueueHandle {  }","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133}],"decl_id":null,"docs":" Handle to an event queue","sig":null,"attributes":[{"value":"/ Handle to an event queue","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17565,"byte_end":17593,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17594,"byte_end":17597,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This handle gives you access to methods on an event queue","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17598,"byte_end":17659,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"/ that are safe to do from within a callback.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17660,"byte_end":17707,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17708,"byte_end":17711,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ They are also available on an `EventQueue` object via `Deref`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17712,"byte_end":17778,"line_start":35,"line_end":35,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":18564,"byte_end":18572,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"register","qualname":"<EventQueueHandle>::register","value":"pub fn register<P, ID>(&mut Self, &P, P::Implementation, ID) -> RegisterStatus\nwhere P: Proxy + Implementable<ID>, ID: 'static","parent":null,"children":[],"decl_id":null,"docs":" Register a proxy to this event queue.","sig":null,"attributes":[{"value":"/ Register a proxy to this event queue.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17898,"byte_end":17939,"line_start":42,"line_end":42,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17944,"byte_end":17947,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ You are required to provide a valid implementation for this proxy","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17952,"byte_end":18021,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ as well as some associated implementation data. This implementation","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":18026,"byte_end":18097,"line_start":45,"line_end":45,"column_start":5,"column_end":76}},{"value":"/ is expected to be a struct holding the various relevant","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":18102,"byte_end":18161,"line_start":46,"line_end":46,"column_start":5,"column_end":64}},{"value":"/ function pointers.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":18166,"byte_end":18188,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":18193,"byte_end":18196,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This implementation data can typically contain indexes to state value","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":18201,"byte_end":18274,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ that the implementation will need to work on.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":18279,"byte_end":18328,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":18333,"byte_end":18336,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This overwrites any precedently set implementation for this proxy.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":18341,"byte_end":18411,"line_start":52,"line_end":52,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":18416,"byte_end":18419,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Returns appropriately and does nothing if this proxy is dead or already managed by","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":18424,"byte_end":18510,"line_start":54,"line_end":54,"column_start":5,"column_end":91}},{"value":"/ something else than this library.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":18515,"byte_end":18552,"line_start":55,"line_end":55,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20464,"byte_end":20469,"line_start":103,"line_end":103,"column_start":12,"column_end":17},"name":"state","qualname":"<EventQueueHandle>::state","value":"pub fn state(&mut Self) -> &mut State","parent":null,"children":[],"decl_id":null,"docs":" Get a handle to the internal state","sig":null,"attributes":[{"value":"/ Get a handle to the internal state","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20259,"byte_end":20297,"line_start":98,"line_end":98,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20302,"byte_end":20305,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The returned guard object allows you to get references","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20310,"byte_end":20368,"line_start":100,"line_end":100,"column_start":5,"column_end":63}},{"value":"/ to the handler objects you previously inserted in this","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20373,"byte_end":20431,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/ event queue.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20436,"byte_end":20452,"line_start":102,"line_end":102,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21462,"byte_end":21472,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"EventQueue","qualname":"::event_queue::EventQueue","value":"EventQueue {  }","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"decl_id":null,"docs":" An event queue managing wayland events","sig":null,"attributes":[{"value":"/ An event queue managing wayland events","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20530,"byte_end":20572,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20573,"byte_end":20576,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Each wayland object can receive events from the server. To handle these events","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20577,"byte_end":20659,"line_start":110,"line_end":110,"column_start":1,"column_end":83}},{"value":"/ you must associate to these objects an implementation: a struct defined in their","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20660,"byte_end":20744,"line_start":111,"line_end":111,"column_start":1,"column_end":85}},{"value":"/ respective module, in which you provide a set of functions that will handle each event.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20745,"byte_end":20836,"line_start":112,"line_end":112,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20837,"byte_end":20840,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Your implementation can also access a shared state managed by the event queue. See","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20841,"byte_end":20927,"line_start":114,"line_end":114,"column_start":1,"column_end":87}},{"value":"/ the `State` struct and the `state()` method on `EventQueueHandle`. If you need this,","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":20928,"byte_end":21016,"line_start":115,"line_end":115,"column_start":1,"column_end":89}},{"value":"/ the way to do it is:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21017,"byte_end":21041,"line_start":116,"line_end":116,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21042,"byte_end":21045,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ - insert your state value in the event queue state store, your are then provided with a","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21046,"byte_end":21137,"line_start":118,"line_end":118,"column_start":1,"column_end":92}},{"value":"/   token to access it","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21138,"byte_end":21162,"line_start":119,"line_end":119,"column_start":1,"column_end":25}},{"value":"/ - provide this token (you can clone it) as implementation data to any wayland object","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21163,"byte_end":21251,"line_start":120,"line_end":120,"column_start":1,"column_end":89}},{"value":"/   that need to access this state in its event callbacks.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21252,"byte_end":21312,"line_start":121,"line_end":121,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21313,"byte_end":21316,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ The event queues also provides you control on the flow of the program, via the `dispatch()` and","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21317,"byte_end":21416,"line_start":123,"line_end":123,"column_start":1,"column_end":100}},{"value":"/ `dispatch_pending()` methods.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21417,"byte_end":21450,"line_start":124,"line_end":124,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":22014,"byte_end":22022,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<EventQueue>::dispatch","value":"pub fn dispatch(&mut Self) -> IoResult<u32>","parent":null,"children":[],"decl_id":null,"docs":" Dispatches events from the internal buffer.","sig":null,"attributes":[{"value":"/ Dispatches events from the internal buffer.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21565,"byte_end":21612,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21617,"byte_end":21620,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Dispatches all events to their appropriate handlers.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21625,"byte_end":21681,"line_start":133,"line_end":133,"column_start":5,"column_end":61}},{"value":"/ If not events were in the internal buffer, will block until","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21686,"byte_end":21749,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ some events are read and dispatch them.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21754,"byte_end":21797,"line_start":135,"line_end":135,"column_start":5,"column_end":48}},{"value":"/ This process can insert events in the internal buffers of","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21802,"byte_end":21863,"line_start":136,"line_end":136,"column_start":5,"column_end":66}},{"value":"/ other event queues.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21868,"byte_end":21891,"line_start":137,"line_end":137,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21896,"byte_end":21899,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ If an error is returned, your connection with the wayland","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21904,"byte_end":21965,"line_start":139,"line_end":139,"column_start":5,"column_end":66}},{"value":"/ compositor is probably lost.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21970,"byte_end":22002,"line_start":140,"line_end":140,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":22916,"byte_end":22932,"line_start":168,"line_end":168,"column_start":12,"column_end":28},"name":"dispatch_pending","qualname":"<EventQueue>::dispatch_pending","value":"pub fn dispatch_pending(&mut Self) -> IoResult<u32>","parent":null,"children":[],"decl_id":null,"docs":" Dispatches pending events from the internal buffer.","sig":null,"attributes":[{"value":"/ Dispatches pending events from the internal buffer.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":22587,"byte_end":22642,"line_start":160,"line_end":160,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":22647,"byte_end":22650,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Dispatches all events to their appropriate handlers.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":22655,"byte_end":22711,"line_start":162,"line_end":162,"column_start":5,"column_end":61}},{"value":"/ Never blocks, if not events were pending, simply returns","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":22716,"byte_end":22776,"line_start":163,"line_end":163,"column_start":5,"column_end":65}},{"value":"/ `Ok(0)`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":22781,"byte_end":22793,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":22798,"byte_end":22801,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ If an error is returned, your connection with the wayland","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":22806,"byte_end":22867,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/ compositor is probably lost.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":22872,"byte_end":22904,"line_start":167,"line_end":167,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":24023,"byte_end":24037,"line_start":202,"line_end":202,"column_start":12,"column_end":26},"name":"sync_roundtrip","qualname":"<EventQueue>::sync_roundtrip","value":"pub fn sync_roundtrip(&mut Self) -> IoResult<i32>","parent":null,"children":[],"decl_id":null,"docs":" Synchronous roundtrip","sig":null,"attributes":[{"value":"/ Synchronous roundtrip","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":23619,"byte_end":23644,"line_start":193,"line_end":193,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":23649,"byte_end":23652,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ This call will cause a synchonous roundtrip with the wayland server. It will block until all","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":23657,"byte_end":23753,"line_start":195,"line_end":195,"column_start":5,"column_end":101}},{"value":"/ pending requests of this queue are sent to the server and it has processed all of them and","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":23758,"byte_end":23852,"line_start":196,"line_end":196,"column_start":5,"column_end":99}},{"value":"/ send the appropriate events.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":23857,"byte_end":23889,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":23894,"byte_end":23897,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Handlers are called as a consequence.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":23902,"byte_end":23943,"line_start":199,"line_end":199,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":23948,"byte_end":23951,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ On success returns the number of dispatched events.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":23956,"byte_end":24011,"line_start":201,"line_end":201,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":25588,"byte_end":25600,"line_start":240,"line_end":240,"column_start":12,"column_end":24},"name":"prepare_read","qualname":"<EventQueue>::prepare_read","value":"pub fn prepare_read(&Self) -> Option<ReadEventsGuard>","parent":null,"children":[],"decl_id":null,"docs":" Prepare an conccurent read","sig":null,"attributes":[{"value":"/ Prepare an conccurent read","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":24592,"byte_end":24622,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":24627,"byte_end":24630,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Will declare your intention to read events from the server socket.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":24635,"byte_end":24705,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":24710,"byte_end":24713,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Will return `None` if there are still some events awaiting dispatch on this EventIterator.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":24718,"byte_end":24812,"line_start":225,"line_end":225,"column_start":5,"column_end":99}},{"value":"/ In this case, you need to call `dispatch_pending()` before calling this method again.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":24817,"byte_end":24906,"line_start":226,"line_end":226,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":24911,"byte_end":24914,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ As long as the returned guard is in scope, no events can be dispatched to any event iterator.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":24919,"byte_end":25016,"line_start":228,"line_end":228,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":25021,"byte_end":25024,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The guard can then be destroyed by two means:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":25029,"byte_end":25078,"line_start":230,"line_end":230,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":25083,"byte_end":25086,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/  - Calling its `cancel()` method (or letting it go out of scope): the read intention will","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":25091,"byte_end":25184,"line_start":232,"line_end":232,"column_start":5,"column_end":98}},{"value":"/    be cancelled","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":25189,"byte_end":25208,"line_start":233,"line_end":233,"column_start":5,"column_end":24}},{"value":"/  - Calling its `read_events()` method: will block until all existing guards are destroyed","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":25213,"byte_end":25306,"line_start":234,"line_end":234,"column_start":5,"column_end":98}},{"value":"/    by one of these methods, then events will be read and all blocked `read_events()` calls","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":25311,"byte_end":25405,"line_start":235,"line_end":235,"column_start":5,"column_end":99}},{"value":"/    will return.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":25410,"byte_end":25429,"line_start":236,"line_end":236,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":25434,"byte_end":25437,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This call will otherwise not block on the server socket if it is empty, and return","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":25442,"byte_end":25528,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ an io error `WouldBlock` in such cases.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":25533,"byte_end":25576,"line_start":239,"line_end":239,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26582,"byte_end":26597,"line_start":278,"line_end":278,"column_start":12,"column_end":27},"name":"ReadEventsGuard","qualname":"::event_queue::ReadEventsGuard","value":"ReadEventsGuard {  }","parent":null,"children":[{"krate":0,"index":153}],"decl_id":null,"docs":" A guard over a read intention.","sig":null,"attributes":[{"value":"/ A guard over a read intention.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26468,"byte_end":26502,"line_start":275,"line_end":275,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26503,"byte_end":26506,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ See `EventQueue::prepare_read()` for details about its use.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26507,"byte_end":26570,"line_start":277,"line_end":277,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26836,"byte_end":26847,"line_start":287,"line_end":287,"column_start":12,"column_end":23},"name":"read_events","qualname":"<ReadEventsGuard>::read_events","value":"pub fn read_events(Self) -> IoResult<i32>","parent":null,"children":[],"decl_id":null,"docs":" Read events","sig":null,"attributes":[{"value":"/ Read events","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26660,"byte_end":26675,"line_start":283,"line_end":283,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26680,"byte_end":26683,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Reads events from the server socket. If other `ReadEventsGuard` exists, will block","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26688,"byte_end":26774,"line_start":285,"line_end":285,"column_start":5,"column_end":91}},{"value":"/ until they are all consumed or destroyed.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26779,"byte_end":26824,"line_start":286,"line_end":286,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":27393,"byte_end":27399,"line_start":303,"line_end":303,"column_start":12,"column_end":18},"name":"cancel","qualname":"<ReadEventsGuard>::cancel","value":"pub fn cancel(Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the read","sig":null,"attributes":[{"value":"/ Cancel the read","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":27200,"byte_end":27219,"line_start":298,"line_end":298,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":27224,"byte_end":27227,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Will cancel the read intention associated with this guard. Never blocks.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":27232,"byte_end":27308,"line_start":300,"line_end":300,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":27313,"byte_end":27316,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Has the same effet as letting the guard go out of scope.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":27321,"byte_end":27381,"line_start":302,"line_end":302,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":179},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":29666,"byte_end":29681,"line_start":5,"line_end":5,"column_start":11,"column_end":26},"name":"EnvHandlerInner","qualname":"::env::EnvHandlerInner","value":"EnvHandlerInner: Sized","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":29698,"byte_end":29704,"line_start":6,"line_end":6,"column_start":8,"column_end":14},"name":"create","qualname":"::env::EnvHandlerInner::create","value":"pub fn create(&WlRegistry, &[(u32, String, u32)]) -> Option<Self>","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":29765,"byte_end":29774,"line_start":7,"line_end":7,"column_start":8,"column_end":17},"name":"clone_env","qualname":"::env::EnvHandlerInner::clone_env","value":"pub fn clone_env(&Self) -> Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":182},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31932,"byte_end":31942,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"EnvHandler","qualname":"::env::EnvHandler","value":"EnvHandler {  }","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"decl_id":null,"docs":" Utility type to handle the registry and global objects","sig":null,"attributes":[{"value":"/ Utility type to handle the registry and global objects","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":29794,"byte_end":29852,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":29853,"byte_end":29856,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This struct provides you with a generic handler for the `wl_registry`","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":29857,"byte_end":29930,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ and the instanciation of global objects.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":29931,"byte_end":29975,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":29976,"byte_end":29979,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ To use it, you need to declare your globals of interest using the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":29980,"byte_end":30049,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ `wayland_env!(..)` macro. Then, insert this handler in your event loop and","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30050,"byte_end":30128,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ register your registry to it.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30129,"byte_end":30162,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30163,"byte_end":30166,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once this handler is fully initialized (and all globals have been","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30167,"byte_end":30236,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ instantiated), it makes them usable via deref-ing towards the struct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30237,"byte_end":30309,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ previously declared by the `wayland_env!(...)` macro.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30310,"byte_end":30367,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30368,"byte_end":30371,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The `globals()` method also give you a list of all globals declared by","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30372,"byte_end":30446,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ the server, had them been instantiated or not. It is perfectly safe","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30447,"byte_end":30518,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"/ to instantiate again a global that have already been instantiated.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30519,"byte_end":30589,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30590,"byte_end":30593,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This list is updated whenever the server declares or removes a global object,","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30594,"byte_end":30675,"line_start":27,"line_end":27,"column_start":1,"column_end":82}},{"value":"/ (as long as you don't change the handler associated to your registry).","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30676,"byte_end":30750,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30751,"byte_end":30754,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If you want to manage all you globals manually, but still want to use","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30755,"byte_end":30828,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ this utility to maintain the list of evailable globals, you can simply","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30829,"byte_end":30903,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ create an empty env type using the macro, like this : `wayland_env!(WaylandEnv)`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30904,"byte_end":30989,"line_start":32,"line_end":32,"column_start":1,"column_end":86}},{"value":"/ No global will be automatically instantiated for you, but you still can use","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":30990,"byte_end":31069,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ this `globals()` method.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31070,"byte_end":31098,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31099,"byte_end":31102,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## example of use","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31103,"byte_end":31124,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31125,"byte_end":31128,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31129,"byte_end":31142,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ // Declare your globals of interest using the macro.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31143,"byte_end":31199,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/ // This creates a struct named WaylandEnv (but you can change it).","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31200,"byte_end":31270,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/ wayland_env!(WaylandEnv, compositor: wl_compositor::WlCompositor);","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31271,"byte_end":31341,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31342,"byte_end":31345,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let registry = display.get_registry();","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31346,"byte_end":31388,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/ let env_token = EnvHandler::<WaylandEnv>::init(&mut event_queue, &registry);","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31389,"byte_end":31469,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ // a roundtrip sync will dispatch all event declaring globals to the handler","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31470,"byte_end":31550,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ eventqueue.sync_roundtrip().unwrap();","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31551,"byte_end":31592,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/ // then, we can access them via the state of the event queue:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31593,"byte_end":31658,"line_start":47,"line_end":47,"column_start":1,"column_end":66}},{"value":"/ let state = eventqueue.state();","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31659,"byte_end":31694,"line_start":48,"line_end":48,"column_start":1,"column_end":36}},{"value":"/ let env = state.get(&env_token);","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31695,"byte_end":31731,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"/ // We can now access the globals as fields of env.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31732,"byte_end":31786,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"/ // Note that is some globals were missing, this acces (via Deref)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31787,"byte_end":31856,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ // will panic!","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31857,"byte_end":31875,"line_start":52,"line_end":52,"column_start":1,"column_end":19}},{"value":"/ let compositor = env.compositor;","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31876,"byte_end":31912,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":31913,"byte_end":31920,"line_start":54,"line_end":54,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":32174,"byte_end":32178,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"init","qualname":"<EnvHandler<H>>::init","value":"pub fn init(&mut EventQueueHandle, &WlRegistry) -> StateToken<EnvHandler<H>>","parent":null,"children":[],"decl_id":null,"docs":" Insert a new EnvHandler in this event queue and register the registry to it\n","sig":null,"attributes":[{"value":"/ Insert a new EnvHandler in this event queue and register the registry to it","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":32083,"byte_end":32162,"line_start":61,"line_end":61,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":32973,"byte_end":32989,"line_start":81,"line_end":81,"column_start":12,"column_end":28},"name":"init_with_notify","qualname":"<EnvHandler<H>>::init_with_notify","value":"pub fn init_with_notify<ID: 'static>(&mut EventQueueHandle, &WlRegistry,\n                                     EnvNotify<ID>, ID)\n-> StateToken<EnvHandler<H>>","parent":null,"children":[],"decl_id":null,"docs":" Insert a new EnvHandler in this event queue with a notify implementation","sig":null,"attributes":[{"value":"/ Insert a new EnvHandler in this event queue with a notify implementation","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":32545,"byte_end":32621,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":32626,"byte_end":32629,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Does the same as `EnvHandler::init(..)`, but you additionnaly supply an implementation","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":32634,"byte_end":32724,"line_start":76,"line_end":76,"column_start":5,"column_end":95}},{"value":"/ struct that the EnvHandler will use to notify you of events:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":32729,"byte_end":32793,"line_start":77,"line_end":77,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":32798,"byte_end":32801,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ - events of creation/deletion of a global are forwarded","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":32806,"byte_end":32865,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/ - event of readiness of this EnvHandler (when all the necessary globals could be bound)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":32870,"byte_end":32961,"line_start":80,"line_end":80,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":33764,"byte_end":33769,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"ready","qualname":"<EnvHandler<H>>::ready","value":"pub fn ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the handler ready","sig":null,"attributes":[{"value":"/ Is the handler ready","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":33558,"byte_end":33582,"line_start":99,"line_end":99,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":33587,"byte_end":33590,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Returns true if all required globals have been created.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":33595,"byte_end":33654,"line_start":101,"line_end":101,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":33659,"byte_end":33662,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ If this method returns false, trying to access a global","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":33667,"byte_end":33726,"line_start":103,"line_end":103,"column_start":5,"column_end":64}},{"value":"/ field will panic.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":33731,"byte_end":33752,"line_start":104,"line_end":104,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":34053,"byte_end":34060,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"globals","qualname":"<EnvHandler<H>>::globals","value":"pub fn globals(&Self) -> &[(u32, String, u32)]","parent":null,"children":[],"decl_id":null,"docs":" List of advertised globals","sig":null,"attributes":[{"value":"/ List of advertised globals","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":33827,"byte_end":33857,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":33862,"byte_end":33865,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Returns a list of all globals that have been advertised by the server.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":33870,"byte_end":33944,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":33949,"byte_end":33952,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The type format of each tuple is: `(global_id, interface_name, global_version)`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":33957,"byte_end":34041,"line_start":113,"line_end":113,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":34312,"byte_end":34323,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<EnvHandler<H>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<H>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve an owned copy of the environment","sig":null,"attributes":[{"value":"/ Retrieve an owned copy of the environment","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":34128,"byte_end":34173,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":34178,"byte_end":34181,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This clones the inner env so that you can have access to the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":34186,"byte_end":34250,"line_start":120,"line_end":120,"column_start":5,"column_end":69}},{"value":"/ clobals without borrowing the event queue","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":34255,"byte_end":34300,"line_start":121,"line_end":121,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":211},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":36796,"byte_end":36805,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"EnvNotify","qualname":"::env::EnvNotify","value":"EnvNotify { new_global, del_global, ready }","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"decl_id":null,"docs":" An implementation to receive globals notifications for the EnvHandler","sig":null,"attributes":[{"value":"/ An implementation to receive globals notifications for the EnvHandler","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":36531,"byte_end":36604,"line_start":187,"line_end":187,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":36605,"byte_end":36608,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ You can provide this implementation to have the EnvHandler notify you","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":36609,"byte_end":36682,"line_start":189,"line_end":189,"column_start":1,"column_end":74}},{"value":"/ about new globals in addition to processing them.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":36683,"byte_end":36736,"line_start":190,"line_end":190,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":36737,"byte_end":36740,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ See `EnvHandler::init_with_notify(..)`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":36741,"byte_end":36784,"line_start":192,"line_end":192,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":213},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37172,"byte_end":37182,"line_start":204,"line_end":204,"column_start":9,"column_end":19},"name":"new_global","qualname":"::env::EnvNotify::new_global","value":"for<'r, 's, 't0, 't1> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_registry::WlRegistry, u32, &'t1 str, u32)","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" A new global was advertized by the server","sig":null,"attributes":[{"value":"/ A new global was advertized by the server","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":36816,"byte_end":36861,"line_start":194,"line_end":194,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":36866,"byte_end":36869,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Arguments are:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":36874,"byte_end":36892,"line_start":196,"line_end":196,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":36897,"byte_end":36900,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ - The `&mut EventQueueHandle`","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":36905,"byte_end":36938,"line_start":198,"line_end":198,"column_start":5,"column_end":38}},{"value":"/ - A mutable reference to the implementation data you provided","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":36943,"byte_end":37008,"line_start":199,"line_end":199,"column_start":5,"column_end":70}},{"value":"/ - A handle to the wayland registry","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37013,"byte_end":37051,"line_start":200,"line_end":200,"column_start":5,"column_end":43}},{"value":"/ - the id of this new global","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37056,"byte_end":37087,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ - the interface of this global","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37092,"byte_end":37126,"line_start":202,"line_end":202,"column_start":5,"column_end":39}},{"value":"/ - the version of this global","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37131,"byte_end":37163,"line_start":203,"line_end":203,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":214},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37613,"byte_end":37623,"line_start":220,"line_end":220,"column_start":9,"column_end":19},"name":"del_global","qualname":"::env::EnvNotify::del_global","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_registry::WlRegistry, u32)","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" A global was removed by the server","sig":null,"attributes":[{"value":"/ A global was removed by the server","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37337,"byte_end":37375,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37380,"byte_end":37383,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Arguments are:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37388,"byte_end":37406,"line_start":214,"line_end":214,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37411,"byte_end":37414,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ - The `&mut EventQueueHandle`","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37419,"byte_end":37452,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/ - A mutable reference to the implementation data you provided","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37457,"byte_end":37522,"line_start":217,"line_end":217,"column_start":5,"column_end":70}},{"value":"/ - A handle to the wayland registry","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37527,"byte_end":37565,"line_start":218,"line_end":218,"column_start":5,"column_end":43}},{"value":"/ - the id of the removed global","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37570,"byte_end":37604,"line_start":219,"line_end":219,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":215},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":38076,"byte_end":38081,"line_start":231,"line_end":231,"column_start":9,"column_end":14},"name":"ready","qualname":"::env::EnvNotify::ready","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_registry::WlRegistry)","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" The EnvHandler is ready","sig":null,"attributes":[{"value":"/ The EnvHandler is ready","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37710,"byte_end":37737,"line_start":221,"line_end":221,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37742,"byte_end":37745,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This is called once all necessary globals defined with the `wayland_env!()`","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37750,"byte_end":37829,"line_start":223,"line_end":223,"column_start":5,"column_end":84}},{"value":"/ macro were advertized and instanciated.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37834,"byte_end":37877,"line_start":224,"line_end":224,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37882,"byte_end":37885,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Arguments are:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37890,"byte_end":37908,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37913,"byte_end":37916,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ - The `&mut EventQueueHandle`","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37921,"byte_end":37954,"line_start":228,"line_end":228,"column_start":5,"column_end":38}},{"value":"/ - A mutable reference to the implementation data you provided","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":37959,"byte_end":38024,"line_start":229,"line_end":229,"column_start":5,"column_end":70}},{"value":"/ - A handle to the wayland registry","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":38029,"byte_end":38067,"line_start":230,"line_end":230,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":217},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"egl","qualname":"::egl","value":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":242}],"decl_id":null,"docs":" EGL utilities","sig":null,"attributes":[{"value":"cfg(feature = \"egl\")","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3065,"byte_end":3088,"line_start":95,"line_end":95,"column_start":1,"column_end":24}},{"value":"/ EGL utilities","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":42728,"byte_end":42745,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":42746,"byte_end":42749,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains bindings to the `libwayland-egl.so` library.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":42750,"byte_end":42819,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":42820,"byte_end":42823,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This library is used to interface with the OpenGL stack, and creating","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":42824,"byte_end":42897,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ EGL surfaces from a wayland surface.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":42898,"byte_end":42938,"line_start":6,"line_end":6,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":42939,"byte_end":42942,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See WlEglSurface documentation for details.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":42943,"byte_end":42990,"line_start":8,"line_end":8,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":231},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43304,"byte_end":43316,"line_start":20,"line_end":20,"column_start":8,"column_end":20},"name":"is_available","qualname":"::egl::is_available","value":"pub fn is_available() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the wayland-egl lib is available and can be used","sig":null,"attributes":[{"value":"/ Checks if the wayland-egl lib is available and can be used","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43127,"byte_end":43189,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43190,"byte_end":43193,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Trying to create an `WlEglSurface` while this function returns","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43194,"byte_end":43260,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ `false` will result in a panic.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43261,"byte_end":43296,"line_start":19,"line_end":19,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":234},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43841,"byte_end":43853,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"name":"WlEglSurface","qualname":"::egl::WlEglSurface","value":"WlEglSurface {  }","parent":null,"children":[{"krate":0,"index":235}],"decl_id":null,"docs":" EGL surface","sig":null,"attributes":[{"value":"/ EGL surface","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43430,"byte_end":43445,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43446,"byte_end":43449,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This object is a simple wrapper around a `WlSurface` to add the EGL","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43450,"byte_end":43521,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ capabilities. Just use the `ptr` method once this object is created","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43522,"byte_end":43593,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ to get the window pointer your OpenGL library is needing to initialize the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43594,"byte_end":43672,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ EGL context (you'll most likely need the display ptr as well, that you can","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43673,"byte_end":43751,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ get via the `ptr` method of the `Proxy` trait on the `WlDisplay` object).","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43752,"byte_end":43829,"line_start":33,"line_end":33,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43972,"byte_end":43975,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<WlEglSurface>::new","value":"pub fn new(&WlSurface, i32, i32) -> WlEglSurface","parent":null,"children":[],"decl_id":null,"docs":" Create an EGL surface from a wayland surface\n","sig":null,"attributes":[{"value":"/ Create an EGL surface from a wayland surface","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43912,"byte_end":43960,"line_start":39,"line_end":39,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":44304,"byte_end":44316,"line_start":47,"line_end":47,"column_start":19,"column_end":31},"name":"new_from_raw","qualname":"<WlEglSurface>::new_from_raw","value":"pub unsafe fn new_from_raw(*mut wl_proxy, i32, i32) -> WlEglSurface","parent":null,"children":[],"decl_id":null,"docs":" Create an EGL surface from a raw pointer to a wayland surface","sig":null,"attributes":[{"value":"/ Create an EGL surface from a raw pointer to a wayland surface","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":44127,"byte_end":44192,"line_start":44,"line_end":44,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":44197,"byte_end":44200,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because `surface` must be a valid wl_surface pointer","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":44205,"byte_end":44285,"line_start":46,"line_end":46,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":44651,"byte_end":44659,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"get_size","qualname":"<WlEglSurface>::get_size","value":"pub fn get_size(&Self) -> (i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Fetch current size of the EGL surface\n","sig":null,"attributes":[{"value":"/ Fetch current size of the EGL surface","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":44598,"byte_end":44639,"line_start":58,"line_end":58,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45326,"byte_end":45332,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"resize","qualname":"<WlEglSurface>::resize","value":"pub fn resize(&Self, i32, i32, i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Resize the EGL surface","sig":null,"attributes":[{"value":"/ Resize the EGL surface","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45012,"byte_end":45038,"line_start":74,"line_end":74,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45043,"byte_end":45046,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The two first arguments `(width, height)` are the new size of","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45051,"byte_end":45116,"line_start":76,"line_end":76,"column_start":5,"column_end":70}},{"value":"/ the surface, the two others `(dx, dy)` represent the displacement","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45121,"byte_end":45190,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ of the top-left corner of the surface. It allows you to control the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45195,"byte_end":45266,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ direction of the resizing if necessary.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45271,"byte_end":45314,"line_start":79,"line_end":79,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45805,"byte_end":45808,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"ptr","qualname":"<WlEglSurface>::ptr","value":"pub fn ptr(&Self) -> *const c_void","parent":null,"children":[],"decl_id":null,"docs":" Raw pointer to the EGL surface","sig":null,"attributes":[{"value":"/ Raw pointer to the EGL surface","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45650,"byte_end":45684,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45689,"byte_end":45692,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ You'll need this pointer to initialize the EGL context in your","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45697,"byte_end":45763,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"/ favourite OpenGL lib.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45768,"byte_end":45793,"line_start":97,"line_end":97,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":244},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cursor","qualname":"::cursor","value":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":298},{"krate":0,"index":302},{"krate":0,"index":304}],"decl_id":null,"docs":" Cursor utilities","sig":null,"attributes":[{"value":"cfg(feature = \"cursor\")","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3103,"byte_end":3129,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/ Cursor utilities","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46048,"byte_end":46068,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46069,"byte_end":46072,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains bindings to the `libwayland-cursor.so` library.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46073,"byte_end":46145,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46146,"byte_end":46149,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ These utilities allows you to laod cursor images in order to match","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46150,"byte_end":46220,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ your cursors to the ones of the system.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46221,"byte_end":46264,"line_start":6,"line_end":6,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46265,"byte_end":46268,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ First of all, the function `load_theme` will allow you to load a","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46269,"byte_end":46337,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ `CursorTheme`, which represents the full cursor theme.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46338,"byte_end":46396,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46397,"byte_end":46400,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ From this theme, you can load a specific `Cursor`, which can each","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46401,"byte_end":46470,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ contain several images if the cursor is animated. It provides you","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46471,"byte_end":46540,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ with the means of knowing which frame of the animation shoudl be","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46541,"byte_end":46609,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ displayed at which time, as well as handles to the buffers containing","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46610,"byte_end":46683,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ these frames, to attach them to a wayland surface.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46684,"byte_end":46738,"line_start":15,"line_end":15,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":274},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47144,"byte_end":47156,"line_start":32,"line_end":32,"column_start":8,"column_end":20},"name":"is_available","qualname":"::cursor::is_available","value":"pub fn is_available() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the wayland-cursor lib is available and can be used","sig":null,"attributes":[{"value":"/ Checks if the wayland-cursor lib is available and can be used","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":46966,"byte_end":47031,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47032,"byte_end":47035,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Trying to call any function of this module if the lib cannot","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47036,"byte_end":47100,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/ be used will result in a panic.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47101,"byte_end":47136,"line_start":31,"line_end":31,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":275},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47260,"byte_end":47271,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"CursorTheme","qualname":"::cursor::CursorTheme","value":"CursorTheme {  }","parent":null,"children":[{"krate":0,"index":276}],"decl_id":null,"docs":" Represents a cursor theme loaded from the system.\n","sig":null,"attributes":[{"value":"/ Represents a cursor theme loaded from the system.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47195,"byte_end":47248,"line_start":36,"line_end":36,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":278},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47870,"byte_end":47880,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"load_theme","qualname":"::cursor::load_theme","value":"pub fn load_theme(Option<&str>, u32, &WlShm) -> CursorTheme","parent":null,"children":[],"decl_id":null,"docs":" Attempts to load a cursor theme from given name.","sig":null,"attributes":[{"value":"/ Attempts to load a cursor theme from given name.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47347,"byte_end":47399,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47400,"byte_end":47403,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If no name is given or the requested theme is not found, will","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47404,"byte_end":47469,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/ load the default theme.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47470,"byte_end":47497,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47498,"byte_end":47501,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Other arguments are the requested size for the cursor images (ex: 16)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47502,"byte_end":47575,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/ and a handle to the global `WlShm` object.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47576,"byte_end":47622,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47623,"byte_end":47626,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Panics:","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47627,"byte_end":47638,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47639,"byte_end":47642,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ - If the `wayland-cursor` lib is not available (see `is_available()` function)","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47643,"byte_end":47725,"line_start":53,"line_end":53,"column_start":1,"column_end":83}},{"value":"/   in this module.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47726,"byte_end":47747,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/ - In case of memory allocation failure.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47748,"byte_end":47791,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/ - If the theme name provided as argument contains an interior null","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47792,"byte_end":47862,"line_start":56,"line_end":56,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":48906,"byte_end":48916,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"get_cursor","qualname":"<CursorTheme>::get_cursor","value":"pub fn get_cursor(&Self, &str) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a cursor from the theme.","sig":null,"attributes":[{"value":"/ Retrieve a cursor from the theme.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":48719,"byte_end":48756,"line_start":90,"line_end":90,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":48761,"byte_end":48764,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if this cursor is not provided by the theme.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":48769,"byte_end":48832,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":48837,"byte_end":48840,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Panics if the name contains an interior null.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":48845,"byte_end":48894,"line_start":94,"line_end":94,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":49706,"byte_end":49712,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"decl_id":null,"docs":" A cursor from a theme. Can contain several images if animated.\n","sig":null,"attributes":[{"value":"/ A cursor from a theme. Can contain several images if animated.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":49628,"byte_end":49694,"line_start":124,"line_end":124,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":49907,"byte_end":49911,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"name","qualname":"<Cursor>::name","value":"pub fn name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the name of this cursor.\n","sig":null,"attributes":[{"value":"/ Retrieve the name of this cursor.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":49858,"byte_end":49895,"line_start":133,"line_end":133,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50140,"byte_end":50151,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"image_count","qualname":"<Cursor>::image_count","value":"pub fn image_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the number of images contained in this\n animated cursor\n","sig":null,"attributes":[{"value":"/ Retrieve the number of images contained in this","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50053,"byte_end":50104,"line_start":139,"line_end":139,"column_start":5,"column_end":56}},{"value":"/ animated cursor","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50109,"byte_end":50128,"line_start":140,"line_end":140,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50508,"byte_end":50513,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"frame","qualname":"<Cursor>::frame","value":"pub fn frame(&Self, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the image number of cursor animation.","sig":null,"attributes":[{"value":"/ Retrieve the image number of cursor animation.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50263,"byte_end":50313,"line_start":146,"line_end":146,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50318,"byte_end":50321,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns the image number of the animation that should be displayed","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50326,"byte_end":50396,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ after a given amount of time since the beginning of the animation,","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50401,"byte_end":50471,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ in milliseconds.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50476,"byte_end":50496,"line_start":150,"line_end":150,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50972,"byte_end":50990,"line_start":167,"line_end":167,"column_start":12,"column_end":30},"name":"frame_and_duration","qualname":"<Cursor>::frame_and_duration","value":"pub fn frame_and_duration(&Self, u32) -> (usize, u32)","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the image number and its duration.","sig":null,"attributes":[{"value":"/ Retrieve the image number and its duration.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50788,"byte_end":50835,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50840,"byte_end":50843,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Same as `frame()`, but also returns the number of milliseconds this","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50848,"byte_end":50919,"line_start":165,"line_end":165,"column_start":5,"column_end":76}},{"value":"/ frame should still be displayed.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":50924,"byte_end":50960,"line_start":166,"line_end":166,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":51765,"byte_end":51777,"line_start":189,"line_end":189,"column_start":12,"column_end":24},"name":"frame_buffer","qualname":"<Cursor>::frame_buffer","value":"pub fn frame_buffer(&Self, usize) -> Option<CursorImageBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a `CursorImageBuffer` containing the given image of an animation.","sig":null,"attributes":[{"value":"/ Retrieve a `CursorImageBuffer` containing the given image of an animation.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":51385,"byte_end":51463,"line_start":181,"line_end":181,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":51468,"byte_end":51471,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ It can be used to be attached to a surface as a classic `WlBuffer`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":51476,"byte_end":51547,"line_start":183,"line_end":183,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":51552,"byte_end":51555,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the frame is out of bounds.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":51560,"byte_end":51609,"line_start":185,"line_end":185,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":51614,"byte_end":51617,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Note: destroying this buffer (using the `destroy` method) will corrupt","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":51622,"byte_end":51696,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ your theme data, so you might not want to do it.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":51701,"byte_end":51753,"line_start":188,"line_end":188,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":52922,"byte_end":52932,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"frame_info","qualname":"<Cursor>::frame_info","value":"pub fn frame_info(&Self, usize) -> Option<(u32, u32, u32, u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Retrive the metadate associated with given frame of the animation.","sig":null,"attributes":[{"value":"/ Retrive the metadate associated with given frame of the animation.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":52695,"byte_end":52765,"line_start":215,"line_end":215,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":52770,"byte_end":52773,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The tuple contains: `(width, height, hotspot_x, hotspot_y, delay)`","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":52778,"byte_end":52848,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":52853,"byte_end":52856,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the frame is out of bounds.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":52861,"byte_end":52910,"line_start":219,"line_end":219,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":298},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":53410,"byte_end":53427,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"CursorImageBuffer","qualname":"::cursor::CursorImageBuffer","value":"CursorImageBuffer {  }","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"decl_id":null,"docs":" A buffer containing a cursor image.\n","sig":null,"attributes":[{"value":"/ A buffer containing a cursor image.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":53359,"byte_end":53398,"line_start":236,"line_end":236,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":353},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3741,"byte_end":3746,"line_start":114,"line_end":114,"column_start":18,"column_end":23},"name":"Proxy","qualname":"::Proxy","value":"Proxy","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366}],"decl_id":null,"docs":" Common routines for wayland proxy objects.","sig":null,"attributes":[{"value":"/ Common routines for wayland proxy objects.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3416,"byte_end":3462,"line_start":106,"line_end":106,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3463,"byte_end":3466,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ All wayland objects automatically implement this trait","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3467,"byte_end":3525,"line_start":108,"line_end":108,"column_start":1,"column_end":59}},{"value":"/ as generated by the scanner.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3526,"byte_end":3558,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3559,"byte_end":3562,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ It is mostly used for internal use by the library, and you","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3563,"byte_end":3625,"line_start":111,"line_end":111,"column_start":1,"column_end":63}},{"value":"/ should only need these methods for interfacing with C library","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3626,"byte_end":3691,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"/ working on wayland objects.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3692,"byte_end":3723,"line_start":113,"line_end":113,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3811,"byte_end":3814,"line_start":116,"line_end":116,"column_start":8,"column_end":11},"name":"ptr","qualname":"::Proxy::ptr","value":"pub fn ptr(&Self) -> *mut wl_proxy","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Pointer to the underlying wayland proxy object\n","sig":null,"attributes":[{"value":"/ Pointer to the underlying wayland proxy object","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3753,"byte_end":3803,"line_start":115,"line_end":115,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4165,"byte_end":4177,"line_start":125,"line_end":125,"column_start":15,"column_end":27},"name":"from_ptr_new","qualname":"::Proxy::from_ptr_new","value":"pub unsafe fn from_ptr_new(*mut wl_proxy) -> Self","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Create an instance from a wayland pointer","sig":null,"attributes":[{"value":"/ Create an instance from a wayland pointer","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3844,"byte_end":3889,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3894,"byte_end":3897,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The pointer must refer to a valid wayland proxy","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3902,"byte_end":3953,"line_start":119,"line_end":119,"column_start":5,"column_end":56}},{"value":"/ of the appropriate interface, but that have not","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3958,"byte_end":4009,"line_start":120,"line_end":120,"column_start":5,"column_end":56}},{"value":"/ yet been seen by the library.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4014,"byte_end":4047,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4052,"byte_end":4055,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ The library will take control of the object (notably","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4060,"byte_end":4116,"line_start":123,"line_end":123,"column_start":5,"column_end":61}},{"value":"/ overwrite its user_data).","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4121,"byte_end":4150,"line_start":124,"line_end":124,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4560,"byte_end":4580,"line_start":133,"line_end":133,"column_start":15,"column_end":35},"name":"from_ptr_initialized","qualname":"::Proxy::from_ptr_initialized","value":"pub unsafe fn from_ptr_initialized(*mut wl_proxy) -> Self","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Create an instance from a wayland pointer","sig":null,"attributes":[{"value":"/ Create an instance from a wayland pointer","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4206,"byte_end":4251,"line_start":126,"line_end":126,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4256,"byte_end":4259,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The pointer must refer to a valid wayland proxy","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4264,"byte_end":4315,"line_start":128,"line_end":128,"column_start":5,"column_end":56}},{"value":"/ of the appropriate interface. The library will detect if the","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4320,"byte_end":4384,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ proxy is already managed by it or not. If it is not, this","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4389,"byte_end":4450,"line_start":130,"line_end":130,"column_start":5,"column_end":66}},{"value":"/ proxy will be considered as \"unmanaged\", and should then","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4455,"byte_end":4515,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ be handled with care.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4520,"byte_end":4545,"line_start":132,"line_end":132,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4660,"byte_end":4673,"line_start":135,"line_end":135,"column_start":8,"column_end":21},"name":"interface_ptr","qualname":"::Proxy::interface_ptr","value":"pub fn interface_ptr() -> *const wl_interface","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Pointer to the interface representation\n","sig":null,"attributes":[{"value":"/ Pointer to the interface representation","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4609,"byte_end":4652,"line_start":134,"line_end":134,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4755,"byte_end":4769,"line_start":137,"line_end":137,"column_start":8,"column_end":22},"name":"interface_name","qualname":"::Proxy::interface_name","value":"pub fn interface_name() -> &'static str","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Internal wayland name of this interface\n","sig":null,"attributes":[{"value":"/ Internal wayland name of this interface","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4704,"byte_end":4747,"line_start":136,"line_end":136,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4844,"byte_end":4861,"line_start":139,"line_end":139,"column_start":8,"column_end":25},"name":"supported_version","qualname":"::Proxy::supported_version","value":"pub fn supported_version() -> u32","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Max version of this interface supported\n","sig":null,"attributes":[{"value":"/ Max version of this interface supported","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4793,"byte_end":4836,"line_start":138,"line_end":138,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4952,"byte_end":4959,"line_start":141,"line_end":141,"column_start":8,"column_end":15},"name":"version","qualname":"::Proxy::version","value":"pub fn version(&Self) -> u32","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Current version of the interface this proxy is instantiated with\n","sig":null,"attributes":[{"value":"/ Current version of the interface this proxy is instantiated with","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4876,"byte_end":4944,"line_start":140,"line_end":140,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5052,"byte_end":5058,"line_start":143,"line_end":143,"column_start":8,"column_end":14},"name":"status","qualname":"::Proxy::status","value":"pub fn status(&Self) -> Liveness","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Check if the proxy behind this handle is actually still alive\n","sig":null,"attributes":[{"value":"/ Check if the proxy behind this handle is actually still alive","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":4979,"byte_end":5044,"line_start":142,"line_end":142,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5233,"byte_end":5239,"line_start":147,"line_end":147,"column_start":8,"column_end":14},"name":"equals","qualname":"::Proxy::equals","value":"pub fn equals(&Self, &Self) -> bool","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Check of two handles are actually the same wayland object","sig":null,"attributes":[{"value":"/ Check of two handles are actually the same wayland object","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5083,"byte_end":5144,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5149,"byte_end":5152,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if any of the objects has already been destroyed","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5157,"byte_end":5225,"line_start":146,"line_end":146,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5718,"byte_end":5731,"line_start":157,"line_end":157,"column_start":8,"column_end":21},"name":"set_user_data","qualname":"::Proxy::set_user_data","value":"pub fn set_user_data(&Self, *mut ())","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Set a pointer associated as user data on this proxy","sig":null,"attributes":[{"value":"/ Set a pointer associated as user data on this proxy","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5267,"byte_end":5322,"line_start":148,"line_end":148,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5327,"byte_end":5330,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ All proxies to the same wayland object share the same user data pointer.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5335,"byte_end":5411,"line_start":150,"line_end":150,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5416,"byte_end":5419,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The get/set operations are atomic, no more guarantee is given. If you need","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5424,"byte_end":5502,"line_start":152,"line_end":152,"column_start":5,"column_end":83}},{"value":"/ to synchronise access to this data, it is your responsibility to add a Mutex","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5507,"byte_end":5587,"line_start":153,"line_end":153,"column_start":5,"column_end":85}},{"value":"/ or any other similar mechanism.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5592,"byte_end":5627,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5632,"byte_end":5635,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ If this proxy is not managed by wayland-client, this does nothing.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5640,"byte_end":5710,"line_start":156,"line_end":156,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6072,"byte_end":6085,"line_start":165,"line_end":165,"column_start":8,"column_end":21},"name":"get_user_data","qualname":"::Proxy::get_user_data","value":"pub fn get_user_data(&Self) -> *mut ()","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Get the pointer associated as user data on this proxy","sig":null,"attributes":[{"value":"/ Get the pointer associated as user data on this proxy","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5758,"byte_end":5815,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5820,"byte_end":5823,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ All proxies to the same wayland object share the same user data pointer.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5828,"byte_end":5904,"line_start":160,"line_end":160,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5909,"byte_end":5912,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ See `set_user_data` for synchronisation guarantee.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5917,"byte_end":5971,"line_start":162,"line_end":162,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5976,"byte_end":5979,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ If this proxy is not managed by wayland-client, this returns a null pointer.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":5984,"byte_end":6064,"line_start":164,"line_end":164,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6246,"byte_end":6251,"line_start":170,"line_end":170,"column_start":8,"column_end":13},"name":"clone","qualname":"::Proxy::clone","value":"pub fn clone(&Self) -> Option<Self> where Self: Sized","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Clone this proxy handle","sig":null,"attributes":[{"value":"/ Clone this proxy handle","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6109,"byte_end":6136,"line_start":166,"line_end":166,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6141,"byte_end":6144,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Will only succeed if the proxy is managed by this library and","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6149,"byte_end":6214,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ is still alive.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6219,"byte_end":6238,"line_start":169,"line_end":169,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6715,"byte_end":6730,"line_start":185,"line_end":185,"column_start":15,"column_end":30},"name":"clone_unchecked","qualname":"::Proxy::clone_unchecked","value":"pub unsafe fn clone_unchecked(&Self) -> Self where Self: Sized","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Unsafely clone this proxy handle","sig":null,"attributes":[{"value":"/ Unsafely clone this proxy handle","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6464,"byte_end":6500,"line_start":180,"line_end":180,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6505,"byte_end":6508,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because if the proxy is unmanaged, the lib","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6513,"byte_end":6583,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ has no knowledge of its lifetime, and cannot ensure that the new handle","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6588,"byte_end":6663,"line_start":183,"line_end":183,"column_start":5,"column_end":80}},{"value":"/ will not outlive the object.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6668,"byte_end":6700,"line_start":184,"line_end":184,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":367},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6874,"byte_end":6887,"line_start":191,"line_end":191,"column_start":18,"column_end":31},"name":"Implementable","qualname":"::Implementable","value":"Implementable<ID: 'static>: Proxy","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370}],"decl_id":null,"docs":" Common trait for wayland objects that can be registered to an EventQueue\n","sig":null,"attributes":[{"value":"/ Common trait for wayland objects that can be registered to an EventQueue","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6780,"byte_end":6856,"line_start":190,"line_end":190,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":369},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6990,"byte_end":7004,"line_start":193,"line_end":193,"column_start":10,"column_end":24},"name":"Implementation","qualname":"::Implementable::Implementation","value":"type Implementation: PartialEq + Copy + 'static;","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" The type containing the implementation for the event callbacks\n","sig":null,"attributes":[{"value":"/ The type containing the implementation for the event callbacks","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6914,"byte_end":6980,"line_start":192,"line_end":192,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7067,"byte_end":7081,"line_start":195,"line_end":195,"column_start":15,"column_end":29},"name":"__dispatch_msg","qualname":"::Implementable::__dispatch_msg","value":"pub unsafe fn __dispatch_msg(&Self, u32, *const wl_argument) -> Result<(), ()>","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":418},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7317,"byte_end":7321,"line_start":202,"line_end":202,"column_start":5,"column_end":9},"name":"Sent","qualname":"::RequestResult::Sent","value":"RequestResult::Sent(T)","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" Message has been buffered and will be sent to server\n","sig":null,"attributes":[{"value":"/ Message has been buffered and will be sent to server","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7256,"byte_end":7312,"line_start":201,"line_end":201,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":421},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7396,"byte_end":7405,"line_start":204,"line_end":204,"column_start":5,"column_end":14},"name":"Destroyed","qualname":"::RequestResult::Destroyed","value":"RequestResult::Destroyed","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" This proxy is already destroyed, request has been ignored\n","sig":null,"attributes":[{"value":"/ This proxy is already destroyed, request has been ignored","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7330,"byte_end":7391,"line_start":203,"line_end":203,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":416},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7233,"byte_end":7246,"line_start":200,"line_end":200,"column_start":10,"column_end":23},"name":"RequestResult","qualname":"::RequestResult","value":"pub enum RequestResult<T> { Sent(T), Destroyed, }","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":421}],"decl_id":null,"docs":" Possible outcome of the call of a request on a proxy\n","sig":null,"attributes":[{"value":"/ Possible outcome of the call of a request on a proxy","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7150,"byte_end":7206,"line_start":198,"line_end":198,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7595,"byte_end":7601,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"expect","qualname":"<RequestResult<T>>::expect","value":"pub fn expect(Self, &str) -> T","parent":null,"children":[],"decl_id":null,"docs":" Assert that result is successfull and extract the value.","sig":null,"attributes":[{"value":"/ Assert that result is successfull and extract the value.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7441,"byte_end":7501,"line_start":208,"line_end":208,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7506,"byte_end":7509,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Panics with provided error message if the result was `Destroyed`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7514,"byte_end":7583,"line_start":210,"line_end":210,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":427},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7949,"byte_end":7954,"line_start":223,"line_end":223,"column_start":5,"column_end":10},"name":"Alive","qualname":"::Liveness::Alive","value":"Liveness::Alive","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" This object is alive and its requests can be called\n","sig":null,"attributes":[{"value":"/ This object is alive and its requests can be called","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7889,"byte_end":7944,"line_start":222,"line_end":222,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":429},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8056,"byte_end":8060,"line_start":226,"line_end":226,"column_start":5,"column_end":9},"name":"Dead","qualname":"::Liveness::Dead","value":"Liveness::Dead","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" This object is dead, calling its requests will do nothing and\n return and error.\n","sig":null,"attributes":[{"value":"/ This object is dead, calling its requests will do nothing and","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7960,"byte_end":8025,"line_start":224,"line_end":224,"column_start":5,"column_end":70}},{"value":"/ return and error.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8030,"byte_end":8051,"line_start":225,"line_end":225,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":431},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8213,"byte_end":8222,"line_start":229,"line_end":229,"column_start":5,"column_end":14},"name":"Unmanaged","qualname":"::Liveness::Unmanaged","value":"Liveness::Unmanaged","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" This object is not managed by `wayland-client`, you can call its methods\n but this might crash the program if it was actually dead.\n","sig":null,"attributes":[{"value":"/ This object is not managed by `wayland-client`, you can call its methods","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8066,"byte_end":8142,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ but this might crash the program if it was actually dead.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8147,"byte_end":8208,"line_start":228,"line_end":228,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":426},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7874,"byte_end":7882,"line_start":221,"line_end":221,"column_start":10,"column_end":18},"name":"Liveness","qualname":"::Liveness","value":"pub enum Liveness { Alive, Dead, Unmanaged, }","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":431}],"decl_id":null,"docs":" Represents the state of liveness of a wayland object\n","sig":null,"attributes":[{"value":"/ Represents the state of liveness of a wayland object","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7770,"byte_end":7826,"line_start":219,"line_end":219,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":375},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8434,"byte_end":8444,"line_start":237,"line_end":237,"column_start":13,"column_end":23},"name":"interfaces","qualname":"::generated::interfaces","value":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622}],"decl_id":null,"docs":" Interfaces for the core protocol","sig":null,"attributes":[{"value":"/ Interfaces for the core protocol","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8455,"byte_end":8491,"line_start":238,"line_end":238,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8500,"byte_end":8503,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ You might need them for the bindings generated for protocol extensions","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8512,"byte_end":8586,"line_start":240,"line_end":240,"column_start":9,"column_end":83}}]},{"kind":"Static","id":{"krate":0,"index":457},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13351637,"byte_end":13351656,"line_start":57,"line_end":57,"column_start":16,"column_end":35},"name":"wl_display_requests","qualname":"::generated::interfaces::wl_display_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":459},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13352068,"byte_end":13352085,"line_start":61,"line_end":61,"column_start":16,"column_end":33},"name":"wl_display_events","qualname":"::generated::interfaces::wl_display_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":461},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13352450,"byte_end":13352470,"line_start":66,"line_end":66,"column_start":16,"column_end":36},"name":"wl_display_interface","qualname":"::generated::interfaces::wl_display_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":462},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13352766,"byte_end":13352786,"line_start":77,"line_end":77,"column_start":16,"column_end":36},"name":"wl_registry_requests","qualname":"::generated::interfaces::wl_registry_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":464},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13352987,"byte_end":13353005,"line_start":80,"line_end":80,"column_start":16,"column_end":34},"name":"wl_registry_events","qualname":"::generated::interfaces::wl_registry_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":466},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13353375,"byte_end":13353396,"line_start":85,"line_end":85,"column_start":16,"column_end":37},"name":"wl_registry_interface","qualname":"::generated::interfaces::wl_registry_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":467},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13353695,"byte_end":13353713,"line_start":96,"line_end":96,"column_start":16,"column_end":34},"name":"wl_callback_events","qualname":"::generated::interfaces::wl_callback_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":469},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13353912,"byte_end":13353933,"line_start":100,"line_end":100,"column_start":16,"column_end":37},"name":"wl_callback_interface","qualname":"::generated::interfaces::wl_callback_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":474},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13354514,"byte_end":13354536,"line_start":117,"line_end":117,"column_start":16,"column_end":38},"name":"wl_compositor_requests","qualname":"::generated::interfaces::wl_compositor_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":476},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13354977,"byte_end":13355000,"line_start":122,"line_end":122,"column_start":16,"column_end":39},"name":"wl_compositor_interface","qualname":"::generated::interfaces::wl_compositor_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":479},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13355614,"byte_end":13355634,"line_start":141,"line_end":141,"column_start":16,"column_end":36},"name":"wl_shm_pool_requests","qualname":"::generated::interfaces::wl_shm_pool_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":481},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13356197,"byte_end":13356218,"line_start":147,"line_end":147,"column_start":16,"column_end":37},"name":"wl_shm_pool_interface","qualname":"::generated::interfaces::wl_shm_pool_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":484},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13356710,"byte_end":13356725,"line_start":163,"line_end":163,"column_start":16,"column_end":31},"name":"wl_shm_requests","qualname":"::generated::interfaces::wl_shm_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":486},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13356955,"byte_end":13356968,"line_start":166,"line_end":166,"column_start":16,"column_end":29},"name":"wl_shm_events","qualname":"::generated::interfaces::wl_shm_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":488},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13357169,"byte_end":13357185,"line_start":170,"line_end":170,"column_start":16,"column_end":32},"name":"wl_shm_interface","qualname":"::generated::interfaces::wl_shm_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":489},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13357467,"byte_end":13357485,"line_start":181,"line_end":181,"column_start":16,"column_end":34},"name":"wl_buffer_requests","qualname":"::generated::interfaces::wl_buffer_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":491},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13357685,"byte_end":13357701,"line_start":184,"line_end":184,"column_start":16,"column_end":32},"name":"wl_buffer_events","qualname":"::generated::interfaces::wl_buffer_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":493},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13357902,"byte_end":13357921,"line_start":188,"line_end":188,"column_start":16,"column_end":35},"name":"wl_buffer_interface","qualname":"::generated::interfaces::wl_buffer_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":494},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13358216,"byte_end":13358238,"line_start":199,"line_end":199,"column_start":16,"column_end":38},"name":"wl_data_offer_requests","qualname":"::generated::interfaces::wl_data_offer_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":496},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13359089,"byte_end":13359109,"line_start":206,"line_end":206,"column_start":16,"column_end":36},"name":"wl_data_offer_events","qualname":"::generated::interfaces::wl_data_offer_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":498},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13359639,"byte_end":13359662,"line_start":212,"line_end":212,"column_start":16,"column_end":39},"name":"wl_data_offer_interface","qualname":"::generated::interfaces::wl_data_offer_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":499},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13359970,"byte_end":13359993,"line_start":223,"line_end":223,"column_start":16,"column_end":39},"name":"wl_data_source_requests","qualname":"::generated::interfaces::wl_data_source_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":501},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13360518,"byte_end":13360539,"line_start":228,"line_end":228,"column_start":16,"column_end":37},"name":"wl_data_source_events","qualname":"::generated::interfaces::wl_data_source_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":503},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13361561,"byte_end":13361585,"line_start":237,"line_end":237,"column_start":16,"column_end":40},"name":"wl_data_source_interface","qualname":"::generated::interfaces::wl_data_source_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":508},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13362393,"byte_end":13362416,"line_start":258,"line_end":258,"column_start":16,"column_end":39},"name":"wl_data_device_requests","qualname":"::generated::interfaces::wl_data_device_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":516},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13363622,"byte_end":13363643,"line_start":276,"line_end":276,"column_start":16,"column_end":37},"name":"wl_data_device_events","qualname":"::generated::interfaces::wl_data_device_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":518},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13364731,"byte_end":13364755,"line_start":285,"line_end":285,"column_start":16,"column_end":40},"name":"wl_data_device_interface","qualname":"::generated::interfaces::wl_data_device_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":523},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13365461,"byte_end":13365492,"line_start":303,"line_end":303,"column_start":16,"column_end":47},"name":"wl_data_device_manager_requests","qualname":"::generated::interfaces::wl_data_device_manager_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":525},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13365964,"byte_end":13365996,"line_start":308,"line_end":308,"column_start":16,"column_end":48},"name":"wl_data_device_manager_interface","qualname":"::generated::interfaces::wl_data_device_manager_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":528},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13366514,"byte_end":13366531,"line_start":323,"line_end":323,"column_start":16,"column_end":33},"name":"wl_shell_requests","qualname":"::generated::interfaces::wl_shell_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":530},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13366775,"byte_end":13366793,"line_start":327,"line_end":327,"column_start":16,"column_end":34},"name":"wl_shell_interface","qualname":"::generated::interfaces::wl_shell_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":543},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13368446,"byte_end":13368471,"line_start":369,"line_end":369,"column_start":16,"column_end":41},"name":"wl_shell_surface_requests","qualname":"::generated::interfaces::wl_shell_surface_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":545},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13370350,"byte_end":13370373,"line_start":381,"line_end":381,"column_start":16,"column_end":39},"name":"wl_shell_surface_events","qualname":"::generated::interfaces::wl_shell_surface_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":547},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13370900,"byte_end":13370926,"line_start":387,"line_end":387,"column_start":16,"column_end":42},"name":"wl_shell_surface_interface","qualname":"::generated::interfaces::wl_shell_surface_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":556},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13371882,"byte_end":13371901,"line_start":412,"line_end":412,"column_start":16,"column_end":35},"name":"wl_surface_requests","qualname":"::generated::interfaces::wl_surface_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":562},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13373982,"byte_end":13373999,"line_start":430,"line_end":430,"column_start":16,"column_end":33},"name":"wl_surface_events","qualname":"::generated::interfaces::wl_surface_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":564},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13374396,"byte_end":13374416,"line_start":435,"line_end":435,"column_start":16,"column_end":36},"name":"wl_surface_interface","qualname":"::generated::interfaces::wl_surface_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":571},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13375127,"byte_end":13375143,"line_start":455,"line_end":455,"column_start":16,"column_end":32},"name":"wl_seat_requests","qualname":"::generated::interfaces::wl_seat_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":573},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13375909,"byte_end":13375923,"line_start":461,"line_end":461,"column_start":16,"column_end":30},"name":"wl_seat_events","qualname":"::generated::interfaces::wl_seat_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":575},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13376289,"byte_end":13376306,"line_start":466,"line_end":466,"column_start":16,"column_end":33},"name":"wl_seat_interface","qualname":"::generated::interfaces::wl_seat_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":578},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13376842,"byte_end":13376861,"line_start":483,"line_end":483,"column_start":16,"column_end":35},"name":"wl_pointer_requests","qualname":"::generated::interfaces::wl_pointer_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":584},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13377670,"byte_end":13377687,"line_start":497,"line_end":497,"column_start":16,"column_end":33},"name":"wl_pointer_events","qualname":"::generated::interfaces::wl_pointer_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":586},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13379232,"byte_end":13379252,"line_start":509,"line_end":509,"column_start":16,"column_end":36},"name":"wl_pointer_interface","qualname":"::generated::interfaces::wl_pointer_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":587},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13379548,"byte_end":13379568,"line_start":520,"line_end":520,"column_start":16,"column_end":36},"name":"wl_keyboard_requests","qualname":"::generated::interfaces::wl_keyboard_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":593},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13380149,"byte_end":13380167,"line_start":532,"line_end":532,"column_start":16,"column_end":34},"name":"wl_keyboard_events","qualname":"::generated::interfaces::wl_keyboard_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":595},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13381225,"byte_end":13381246,"line_start":541,"line_end":541,"column_start":16,"column_end":37},"name":"wl_keyboard_interface","qualname":"::generated::interfaces::wl_keyboard_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":596},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13381542,"byte_end":13381559,"line_start":552,"line_end":552,"column_start":16,"column_end":33},"name":"wl_touch_requests","qualname":"::generated::interfaces::wl_touch_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":600},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13382072,"byte_end":13382087,"line_start":563,"line_end":563,"column_start":16,"column_end":31},"name":"wl_touch_events","qualname":"::generated::interfaces::wl_touch_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":602},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13382945,"byte_end":13382963,"line_start":571,"line_end":571,"column_start":16,"column_end":34},"name":"wl_touch_interface","qualname":"::generated::interfaces::wl_touch_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":603},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13383251,"byte_end":13383269,"line_start":582,"line_end":582,"column_start":16,"column_end":34},"name":"wl_output_requests","qualname":"::generated::interfaces::wl_output_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":605},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13383470,"byte_end":13383486,"line_start":585,"line_end":585,"column_start":16,"column_end":32},"name":"wl_output_events","qualname":"::generated::interfaces::wl_output_events","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":607},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13384175,"byte_end":13384194,"line_start":592,"line_end":592,"column_start":16,"column_end":35},"name":"wl_output_interface","qualname":"::generated::interfaces::wl_output_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":608},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13384485,"byte_end":13384503,"line_start":603,"line_end":603,"column_start":16,"column_end":34},"name":"wl_region_requests","qualname":"::generated::interfaces::wl_region_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":610},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13385029,"byte_end":13385048,"line_start":609,"line_end":609,"column_start":16,"column_end":35},"name":"wl_region_interface","qualname":"::generated::interfaces::wl_region_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":613},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13385611,"byte_end":13385636,"line_start":625,"line_end":625,"column_start":16,"column_end":41},"name":"wl_subcompositor_requests","qualname":"::generated::interfaces::wl_subcompositor_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":615},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13386043,"byte_end":13386069,"line_start":630,"line_end":630,"column_start":16,"column_end":42},"name":"wl_subcompositor_interface","qualname":"::generated::interfaces::wl_subcompositor_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":620},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13386658,"byte_end":13386680,"line_start":647,"line_end":647,"column_start":16,"column_end":38},"name":"wl_subsurface_requests","qualname":"::generated::interfaces::wl_subsurface_requests","value":"[wl_message; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":622},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_interfaces.rs","byte_start":13387762,"byte_end":13387785,"line_start":656,"line_end":656,"column_start":16,"column_end":39},"name":"wl_subsurface_interface","qualname":"::generated::interfaces::wl_subsurface_interface","value":"wl_interface","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":376},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8676,"byte_end":8682,"line_start":244,"line_end":244,"column_start":13,"column_end":19},"name":"client","qualname":"::generated::client","value":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":623},{"krate":0,"index":702},{"krate":0,"index":793},{"krate":0,"index":880},{"krate":0,"index":956},{"krate":0,"index":1034},{"krate":0,"index":1129},{"krate":0,"index":1218},{"krate":0,"index":1323},{"krate":0,"index":1425},{"krate":0,"index":1526},{"krate":0,"index":1605},{"krate":0,"index":1682},{"krate":0,"index":1802},{"krate":0,"index":1913},{"krate":0,"index":2012},{"krate":0,"index":2123},{"krate":0,"index":2223},{"krate":0,"index":2316},{"krate":0,"index":2417},{"krate":0,"index":2495},{"krate":0,"index":2574}],"decl_id":null,"docs":" The wayland core protocol","sig":null,"attributes":[{"value":"/ The wayland core protocol","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8693,"byte_end":8722,"line_start":245,"line_end":245,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8731,"byte_end":8734,"line_start":246,"line_end":246,"column_start":9,"column_end":12}},{"value":"/ This module contains all objects of the core wayland protocol.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8743,"byte_end":8809,"line_start":247,"line_end":247,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8818,"byte_end":8821,"line_start":248,"line_end":248,"column_start":9,"column_end":12}},{"value":"/ It has been generated from the `wayland.xml` protocol file","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8830,"byte_end":8892,"line_start":249,"line_end":249,"column_start":9,"column_end":71}},{"value":"/ using `wayland_scanner`.","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":8901,"byte_end":8929,"line_start":250,"line_end":250,"column_start":9,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":623},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13389378,"byte_end":13389388,"line_start":32,"line_end":32,"column_start":9,"column_end":19},"name":"wl_display","qualname":"::generated::client::wl_display","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":2661},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"decl_id":null,"docs":" core global object","sig":null,"attributes":[{"value":"/ core global object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13389395,"byte_end":13389417,"line_start":33,"line_end":33,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13389422,"byte_end":13389425,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The core global object.  This is a special singleton object.  It","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13389430,"byte_end":13389498,"line_start":35,"line_end":35,"column_start":5,"column_end":73}},{"value":"/ is used for internal Wayland protocol features.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13389503,"byte_end":13389554,"line_start":36,"line_end":36,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13390116,"byte_end":13390125,"line_start":54,"line_end":54,"column_start":16,"column_end":25},"name":"WlDisplay","qualname":"::generated::client::wl_display::WlDisplay","value":"WlDisplay {  }","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2662},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393072,"byte_end":13393085,"line_start":135,"line_end":135,"column_start":9,"column_end":22},"name":"InvalidObject","qualname":"::generated::client::wl_display::Error::InvalidObject","value":"Error::InvalidObject","parent":{"krate":0,"index":2661},"children":[],"decl_id":null,"docs":" server couldn't find object\n","sig":null,"attributes":[{"value":"/ server couldn't find object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393032,"byte_end":13393063,"line_start":134,"line_end":134,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2665},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393159,"byte_end":13393172,"line_start":137,"line_end":137,"column_start":9,"column_end":22},"name":"InvalidMethod","qualname":"::generated::client::wl_display::Error::InvalidMethod","value":"Error::InvalidMethod","parent":{"krate":0,"index":2661},"children":[],"decl_id":null,"docs":" method doesn't exist on the specified interface\n","sig":null,"attributes":[{"value":"/ method doesn't exist on the specified interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393099,"byte_end":13393150,"line_start":136,"line_end":136,"column_start":9,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2668},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393222,"byte_end":13393230,"line_start":139,"line_end":139,"column_start":9,"column_end":17},"name":"NoMemory","qualname":"::generated::client::wl_display::Error::NoMemory","value":"Error::NoMemory","parent":{"krate":0,"index":2661},"children":[],"decl_id":null,"docs":" server is out of memory\n","sig":null,"attributes":[{"value":"/ server is out of memory","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393186,"byte_end":13393213,"line_start":138,"line_end":138,"column_start":9,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2661},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393016,"byte_end":13393021,"line_start":133,"line_end":133,"column_start":14,"column_end":19},"name":"Error","qualname":"::generated::client::wl_display::Error","value":"pub enum Error { InvalidObject = , InvalidMethod = , NoMemory = , }","parent":null,"children":[{"krate":0,"index":2662},{"krate":0,"index":2665},{"krate":0,"index":2668}],"decl_id":null,"docs":" global error values","sig":null,"attributes":[{"value":"/ global error values","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13392818,"byte_end":13392841,"line_start":127,"line_end":127,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13392846,"byte_end":13392849,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ These errors are global and can be emitted in response to any","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13392854,"byte_end":13392919,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/ server request.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13392924,"byte_end":13392943,"line_start":130,"line_end":130,"column_start":5,"column_end":24}},{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13392948,"byte_end":13392960,"line_start":131,"line_end":131,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393274,"byte_end":13393282,"line_start":142,"line_end":142,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393547,"byte_end":13393553,"line_start":150,"line_end":150,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394410,"byte_end":13394414,"line_start":170,"line_end":170,"column_start":16,"column_end":20},"name":"sync","qualname":"<WlDisplay>::sync","value":"pub fn sync(&Self) -> super::wl_callback::WlCallback","parent":null,"children":[],"decl_id":null,"docs":" asynchronous roundtrip","sig":null,"attributes":[{"value":"/ asynchronous roundtrip","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393720,"byte_end":13393746,"line_start":157,"line_end":157,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393755,"byte_end":13393758,"line_start":158,"line_end":158,"column_start":9,"column_end":12}},{"value":"/ The sync request asks the server to emit the 'done' event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393767,"byte_end":13393828,"line_start":159,"line_end":159,"column_start":9,"column_end":70}},{"value":"/ on the returned wl_callback object.  Since requests are","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393837,"byte_end":13393896,"line_start":160,"line_end":160,"column_start":9,"column_end":68}},{"value":"/ handled in-order and events are delivered in-order, this can","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393905,"byte_end":13393969,"line_start":161,"line_end":161,"column_start":9,"column_end":73}},{"value":"/ be used as a barrier to ensure all previous requests and the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393978,"byte_end":13394042,"line_start":162,"line_end":162,"column_start":9,"column_end":73}},{"value":"/ resulting events have been handled.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394051,"byte_end":13394090,"line_start":163,"line_end":163,"column_start":9,"column_end":48}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394099,"byte_end":13394103,"line_start":164,"line_end":164,"column_start":9,"column_end":13}},{"value":"/ The object returned by this request will be destroyed by the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394112,"byte_end":13394176,"line_start":165,"line_end":165,"column_start":9,"column_end":73}},{"value":"/ compositor after the callback is fired and as such the client must not","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394185,"byte_end":13394259,"line_start":166,"line_end":166,"column_start":9,"column_end":83}},{"value":"/ attempt to use it after that point.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394268,"byte_end":13394307,"line_start":167,"line_end":167,"column_start":9,"column_end":48}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394316,"byte_end":13394320,"line_start":168,"line_end":168,"column_start":9,"column_end":13}},{"value":"/ The callback_data passed in the callback is the event serial.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394329,"byte_end":13394394,"line_start":169,"line_end":169,"column_start":9,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394960,"byte_end":13394972,"line_start":180,"line_end":180,"column_start":16,"column_end":28},"name":"get_registry","qualname":"<WlDisplay>::get_registry","value":"pub fn get_registry(&Self) -> super::wl_registry::WlRegistry","parent":null,"children":[],"decl_id":null,"docs":" get global registry object","sig":null,"attributes":[{"value":"/ get global registry object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394737,"byte_end":13394767,"line_start":175,"line_end":175,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394776,"byte_end":13394779,"line_start":176,"line_end":176,"column_start":9,"column_end":12}},{"value":"/ This request creates a registry object that allows the client","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394788,"byte_end":13394853,"line_start":177,"line_end":177,"column_start":9,"column_end":74}},{"value":"/ to list and bind the global objects available from the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394862,"byte_end":13394920,"line_start":178,"line_end":178,"column_start":9,"column_end":67}},{"value":"/ compositor.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13394929,"byte_end":13394944,"line_start":179,"line_end":179,"column_start":9,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":702},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395311,"byte_end":13395322,"line_start":187,"line_end":187,"column_start":9,"column_end":20},"name":"wl_registry","qualname":"::generated::client::wl_registry","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":773},{"krate":0,"index":777},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":790}],"decl_id":null,"docs":" global registry object","sig":null,"attributes":[{"value":"/ global registry object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395329,"byte_end":13395355,"line_start":188,"line_end":188,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395360,"byte_end":13395363,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The global registry object.  The server has a number of global","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395368,"byte_end":13395434,"line_start":190,"line_end":190,"column_start":5,"column_end":71}},{"value":"/ objects that are available to all clients.  These objects","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395439,"byte_end":13395500,"line_start":191,"line_end":191,"column_start":5,"column_end":66}},{"value":"/ typically represent an actual object in the server (for example,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395505,"byte_end":13395573,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/ an input device) or they are singleton objects that provide","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395578,"byte_end":13395641,"line_start":193,"line_end":193,"column_start":5,"column_end":68}},{"value":"/ extension functionality.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395646,"byte_end":13395674,"line_start":194,"line_end":194,"column_start":5,"column_end":33}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395679,"byte_end":13395683,"line_start":195,"line_end":195,"column_start":5,"column_end":9}},{"value":"/ When a client creates a registry object, the registry object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395688,"byte_end":13395752,"line_start":196,"line_end":196,"column_start":5,"column_end":69}},{"value":"/ will emit a global event for each global currently in the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395757,"byte_end":13395818,"line_start":197,"line_end":197,"column_start":5,"column_end":66}},{"value":"/ registry.  Globals come and go as a result of device or","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395823,"byte_end":13395882,"line_start":198,"line_end":198,"column_start":5,"column_end":64}},{"value":"/ monitor hotplugs, reconfiguration or other events, and the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395887,"byte_end":13395949,"line_start":199,"line_end":199,"column_start":5,"column_end":67}},{"value":"/ registry will send out global and global_remove events to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13395954,"byte_end":13396015,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/ keep the client up to date with the changes.  To mark the end","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13396020,"byte_end":13396085,"line_start":201,"line_end":201,"column_start":5,"column_end":70}},{"value":"/ of the initial burst of events, the client can use the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13396090,"byte_end":13396148,"line_start":202,"line_end":202,"column_start":5,"column_end":63}},{"value":"/ wl_display.sync request immediately after calling","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13396153,"byte_end":13396206,"line_start":203,"line_end":203,"column_start":5,"column_end":58}},{"value":"/ wl_display.get_registry.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13396211,"byte_end":13396239,"line_start":204,"line_end":204,"column_start":5,"column_end":33}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13396244,"byte_end":13396248,"line_start":205,"line_end":205,"column_start":5,"column_end":9}},{"value":"/ A client can bind to a global object by using the bind","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13396253,"byte_end":13396311,"line_start":206,"line_end":206,"column_start":5,"column_end":63}},{"value":"/ request.  This creates a client-side handle that lets the object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13396316,"byte_end":13396384,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ emit events to the client and lets the client invoke requests on","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13396389,"byte_end":13396457,"line_start":208,"line_end":208,"column_start":5,"column_end":73}},{"value":"/ the object.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13396462,"byte_end":13396477,"line_start":209,"line_end":209,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":755},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13397039,"byte_end":13397049,"line_start":227,"line_end":227,"column_start":16,"column_end":26},"name":"WlRegistry","qualname":"::generated::client::wl_registry::WlRegistry","value":"WlRegistry {  }","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401177,"byte_end":13401191,"line_start":332,"line_end":332,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_registry::Implementation","value":"Implementation { global, global_remove }","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":779},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401617,"byte_end":13401623,"line_start":342,"line_end":342,"column_start":13,"column_end":19},"name":"global","qualname":"::generated::client::wl_registry::Implementation::global","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_registry::WlRegistry, u32, std::string::String, u32)","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" announce global object","sig":null,"attributes":[{"value":"/ announce global object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401206,"byte_end":13401232,"line_start":333,"line_end":333,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401241,"byte_end":13401244,"line_start":334,"line_end":334,"column_start":9,"column_end":12}},{"value":"/ Notify the client of global objects.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401253,"byte_end":13401293,"line_start":335,"line_end":335,"column_start":9,"column_end":49}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401302,"byte_end":13401306,"line_start":336,"line_end":336,"column_start":9,"column_end":13}},{"value":"/ The event notifies the client that a global object with","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401315,"byte_end":13401374,"line_start":337,"line_end":337,"column_start":9,"column_end":68}},{"value":"/ the given name is now available, and it implements the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401383,"byte_end":13401441,"line_start":338,"line_end":338,"column_start":9,"column_end":67}},{"value":"/ given version of the given interface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401450,"byte_end":13401491,"line_start":339,"line_end":339,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401500,"byte_end":13401503,"line_start":340,"line_end":340,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_registry, name, interface, version","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401512,"byte_end":13401604,"line_start":341,"line_end":341,"column_start":9,"column_end":101}}]},{"kind":"Field","id":{"krate":0,"index":780},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402447,"byte_end":13402460,"line_start":357,"line_end":357,"column_start":13,"column_end":26},"name":"global_remove","qualname":"::generated::client::wl_registry::Implementation::global_remove","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_registry::WlRegistry, u32)","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" announce removal of global object","sig":null,"attributes":[{"value":"/ announce removal of global object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401752,"byte_end":13401789,"line_start":343,"line_end":343,"column_start":9,"column_end":46}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401798,"byte_end":13401801,"line_start":344,"line_end":344,"column_start":9,"column_end":12}},{"value":"/ Notify the client of removed global objects.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401810,"byte_end":13401858,"line_start":345,"line_end":345,"column_start":9,"column_end":57}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401867,"byte_end":13401871,"line_start":346,"line_end":346,"column_start":9,"column_end":13}},{"value":"/ This event notifies the client that the global identified","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401880,"byte_end":13401941,"line_start":347,"line_end":347,"column_start":9,"column_end":70}},{"value":"/ by name is no longer available.  If the client bound to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13401950,"byte_end":13402009,"line_start":348,"line_end":348,"column_start":9,"column_end":68}},{"value":"/ the global using the bind request, the client should now","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402018,"byte_end":13402078,"line_start":349,"line_end":349,"column_start":9,"column_end":69}},{"value":"/ destroy that object.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402087,"byte_end":13402111,"line_start":350,"line_end":350,"column_start":9,"column_end":33}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402120,"byte_end":13402124,"line_start":351,"line_end":351,"column_start":9,"column_end":13}},{"value":"/ The object remains valid and requests to the object will be","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402133,"byte_end":13402196,"line_start":352,"line_end":352,"column_start":9,"column_end":72}},{"value":"/ ignored until the client destroys it, to avoid races between","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402205,"byte_end":13402269,"line_start":353,"line_end":353,"column_start":9,"column_end":73}},{"value":"/ the global going away and a client sending a request to it.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402278,"byte_end":13402341,"line_start":354,"line_end":354,"column_start":9,"column_end":72}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402350,"byte_end":13402353,"line_start":355,"line_end":355,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_registry, name","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402362,"byte_end":13402434,"line_start":356,"line_end":356,"column_start":9,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13403253,"byte_end":13403257,"line_start":382,"line_end":382,"column_start":16,"column_end":20},"name":"bind","qualname":"<WlRegistry>::bind","value":"pub fn bind<T: Proxy>(&Self, u32, u32) -> T","parent":null,"children":[],"decl_id":null,"docs":" bind an object to the display","sig":null,"attributes":[{"value":"/ bind an object to the display","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13403075,"byte_end":13403108,"line_start":378,"line_end":378,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13403117,"byte_end":13403120,"line_start":379,"line_end":379,"column_start":9,"column_end":12}},{"value":"/ Binds a new, client-created object to the server using the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13403129,"byte_end":13403191,"line_start":380,"line_end":380,"column_start":9,"column_end":71}},{"value":"/ specified name as the identifier.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13403200,"byte_end":13403237,"line_start":381,"line_end":381,"column_start":9,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":793},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13403932,"byte_end":13403943,"line_start":392,"line_end":392,"column_start":9,"column_end":20},"name":"wl_callback","qualname":"::generated::client::wl_callback","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":864},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879}],"decl_id":null,"docs":" callback object","sig":null,"attributes":[{"value":"/ callback object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13403950,"byte_end":13403969,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13403974,"byte_end":13403977,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Clients can handle the 'done' event to get notified when","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13403982,"byte_end":13404042,"line_start":395,"line_end":395,"column_start":5,"column_end":65}},{"value":"/ the related request is done.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13404047,"byte_end":13404079,"line_start":396,"line_end":396,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13404641,"byte_end":13404651,"line_start":414,"line_end":414,"column_start":16,"column_end":26},"name":"WlCallback","qualname":"::generated::client::wl_callback::WlCallback","value":"WlCallback {  }","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":868},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13408574,"byte_end":13408588,"line_start":517,"line_end":517,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_callback::Implementation","value":"Implementation { done }","parent":null,"children":[{"krate":0,"index":870}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":870},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13408922,"byte_end":13408926,"line_start":525,"line_end":525,"column_start":13,"column_end":17},"name":"done","qualname":"::generated::client::wl_callback::Implementation::done","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_callback::WlCallback, u32)","parent":{"krate":0,"index":868},"children":[],"decl_id":null,"docs":" done event","sig":null,"attributes":[{"value":"/ done event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13408603,"byte_end":13408617,"line_start":518,"line_end":518,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13408626,"byte_end":13408629,"line_start":519,"line_end":519,"column_start":9,"column_end":12}},{"value":"/ Notify the client when the related request is done.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13408638,"byte_end":13408693,"line_start":520,"line_end":520,"column_start":9,"column_end":64}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13408702,"byte_end":13408705,"line_start":521,"line_end":521,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_callback, callback_data","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13408714,"byte_end":13408795,"line_start":522,"line_end":522,"column_start":9,"column_end":90}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13408804,"byte_end":13408807,"line_start":523,"line_end":523,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13408816,"byte_end":13408909,"line_start":524,"line_end":524,"column_start":9,"column_end":102}}]},{"kind":"Mod","id":{"krate":0,"index":880},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409440,"byte_end":13409453,"line_start":546,"line_end":546,"column_start":9,"column_end":22},"name":"wl_compositor","qualname":"::generated::client::wl_compositor","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953}],"decl_id":null,"docs":" the compositor singleton","sig":null,"attributes":[{"value":"/ the compositor singleton","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409460,"byte_end":13409488,"line_start":547,"line_end":547,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409493,"byte_end":13409496,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ A compositor.  This object is a singleton global.  The","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409501,"byte_end":13409559,"line_start":549,"line_end":549,"column_start":5,"column_end":63}},{"value":"/ compositor is in charge of combining the contents of multiple","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409564,"byte_end":13409629,"line_start":550,"line_end":550,"column_start":5,"column_end":70}},{"value":"/ surfaces into one displayable output.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409634,"byte_end":13409675,"line_start":551,"line_end":551,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":933},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13410237,"byte_end":13410249,"line_start":569,"line_end":569,"column_start":16,"column_end":28},"name":"WlCompositor","qualname":"::generated::client::wl_compositor::WlCompositor","value":"WlCompositor {  }","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13413212,"byte_end":13413226,"line_start":648,"line_end":648,"column_start":16,"column_end":30},"name":"create_surface","qualname":"<WlCompositor>::create_surface","value":"pub fn create_surface(&Self) -> super::wl_surface::WlSurface","parent":null,"children":[],"decl_id":null,"docs":" create new surface","sig":null,"attributes":[{"value":"/ create new surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13413106,"byte_end":13413128,"line_start":645,"line_end":645,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13413137,"byte_end":13413140,"line_start":646,"line_end":646,"column_start":9,"column_end":12}},{"value":"/ Ask the compositor to create a new surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13413149,"byte_end":13413196,"line_start":647,"line_end":647,"column_start":9,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13413663,"byte_end":13413676,"line_start":656,"line_end":656,"column_start":16,"column_end":29},"name":"create_region","qualname":"<WlCompositor>::create_region","value":"pub fn create_region(&Self) -> super::wl_region::WlRegion","parent":null,"children":[],"decl_id":null,"docs":" create new region","sig":null,"attributes":[{"value":"/ create new region","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13413559,"byte_end":13413580,"line_start":653,"line_end":653,"column_start":9,"column_end":30}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13413589,"byte_end":13413592,"line_start":654,"line_end":654,"column_start":9,"column_end":12}},{"value":"/ Ask the compositor to create a new region.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13413601,"byte_end":13413647,"line_start":655,"line_end":655,"column_start":9,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":956},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13414013,"byte_end":13414024,"line_start":663,"line_end":663,"column_start":9,"column_end":20},"name":"wl_shm_pool","qualname":"::generated::client::wl_shm_pool","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030}],"decl_id":null,"docs":" a shared memory pool","sig":null,"attributes":[{"value":"/ a shared memory pool","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13414031,"byte_end":13414055,"line_start":664,"line_end":664,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13414060,"byte_end":13414063,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ The wl_shm_pool object encapsulates a piece of memory shared","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13414068,"byte_end":13414132,"line_start":666,"line_end":666,"column_start":5,"column_end":69}},{"value":"/ between the compositor and client.  Through the wl_shm_pool","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13414137,"byte_end":13414200,"line_start":667,"line_end":667,"column_start":5,"column_end":68}},{"value":"/ object, the client can allocate shared memory wl_buffer objects.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13414205,"byte_end":13414273,"line_start":668,"line_end":668,"column_start":5,"column_end":73}},{"value":"/ All objects created through the same pool share the same","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13414278,"byte_end":13414338,"line_start":669,"line_end":669,"column_start":5,"column_end":65}},{"value":"/ underlying mapped memory. Reusing the mapped memory avoids the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13414343,"byte_end":13414409,"line_start":670,"line_end":670,"column_start":5,"column_end":71}},{"value":"/ setup/teardown overhead and is useful when interactively resizing","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13414414,"byte_end":13414483,"line_start":671,"line_end":671,"column_start":5,"column_end":74}},{"value":"/ a surface or for many small buffers.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13414488,"byte_end":13414528,"line_start":672,"line_end":672,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13415090,"byte_end":13415099,"line_start":690,"line_end":690,"column_start":16,"column_end":25},"name":"WlShmPool","qualname":"::generated::client::wl_shm_pool::WlShmPool","value":"WlShmPool {  }","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13418637,"byte_end":13418650,"line_start":780,"line_end":780,"column_start":16,"column_end":29},"name":"create_buffer","qualname":"<WlShmPool>::create_buffer","value":"pub fn create_buffer(&Self, i32, i32, i32, i32, super::wl_shm::Format)\n-> RequestResult<super::wl_buffer::WlBuffer>","parent":null,"children":[],"decl_id":null,"docs":" create a buffer from the pool","sig":null,"attributes":[{"value":"/ create a buffer from the pool","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13417944,"byte_end":13417977,"line_start":767,"line_end":767,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13417986,"byte_end":13417989,"line_start":768,"line_end":768,"column_start":9,"column_end":12}},{"value":"/ Create a wl_buffer object from the pool.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13417998,"byte_end":13418042,"line_start":769,"line_end":769,"column_start":9,"column_end":53}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13418051,"byte_end":13418055,"line_start":770,"line_end":770,"column_start":9,"column_end":13}},{"value":"/ The buffer is created offset bytes into the pool and has","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13418064,"byte_end":13418124,"line_start":771,"line_end":771,"column_start":9,"column_end":69}},{"value":"/ width and height as specified.  The stride argument specifies","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13418133,"byte_end":13418198,"line_start":772,"line_end":772,"column_start":9,"column_end":74}},{"value":"/ the number of bytes from the beginning of one row to the beginning","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13418207,"byte_end":13418277,"line_start":773,"line_end":773,"column_start":9,"column_end":79}},{"value":"/ of the next.  The format is the pixel format of the buffer and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13418286,"byte_end":13418352,"line_start":774,"line_end":774,"column_start":9,"column_end":75}},{"value":"/ must be one of those advertised through the wl_shm.format event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13418361,"byte_end":13418429,"line_start":775,"line_end":775,"column_start":9,"column_end":77}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13418438,"byte_end":13418442,"line_start":776,"line_end":776,"column_start":9,"column_end":13}},{"value":"/ A buffer will keep a reference to the pool it was created from","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13418451,"byte_end":13418517,"line_start":777,"line_end":777,"column_start":9,"column_end":75}},{"value":"/ so it is valid to destroy the pool immediately after creating","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13418526,"byte_end":13418591,"line_start":778,"line_end":778,"column_start":9,"column_end":74}},{"value":"/ a buffer from it.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13418600,"byte_end":13418621,"line_start":779,"line_end":779,"column_start":9,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13419573,"byte_end":13419580,"line_start":795,"line_end":795,"column_start":16,"column_end":23},"name":"destroy","qualname":"<WlShmPool>::destroy","value":"pub fn destroy(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" destroy the pool","sig":null,"attributes":[{"value":"/ destroy the pool","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13419217,"byte_end":13419237,"line_start":786,"line_end":786,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13419246,"byte_end":13419249,"line_start":787,"line_end":787,"column_start":9,"column_end":12}},{"value":"/ Destroy the shared memory pool.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13419258,"byte_end":13419293,"line_start":788,"line_end":788,"column_start":9,"column_end":44}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13419302,"byte_end":13419306,"line_start":789,"line_end":789,"column_start":9,"column_end":13}},{"value":"/ The mmapped memory will be released when all","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13419315,"byte_end":13419363,"line_start":790,"line_end":790,"column_start":9,"column_end":57}},{"value":"/ buffers that have been created from this pool","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13419372,"byte_end":13419421,"line_start":791,"line_end":791,"column_start":9,"column_end":58}},{"value":"/ are gone.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13419430,"byte_end":13419443,"line_start":792,"line_end":792,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13419452,"byte_end":13419455,"line_start":793,"line_end":793,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13419464,"byte_end":13419557,"line_start":794,"line_end":794,"column_start":9,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13420630,"byte_end":13420636,"line_start":814,"line_end":814,"column_start":16,"column_end":22},"name":"resize","qualname":"<WlShmPool>::resize","value":"pub fn resize(&Self, i32) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" change the size of the pool mapping","sig":null,"attributes":[{"value":"/ change the size of the pool mapping","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13420300,"byte_end":13420339,"line_start":808,"line_end":808,"column_start":9,"column_end":48}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13420348,"byte_end":13420351,"line_start":809,"line_end":809,"column_start":9,"column_end":12}},{"value":"/ This request will cause the server to remap the backing memory","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13420360,"byte_end":13420426,"line_start":810,"line_end":810,"column_start":9,"column_end":75}},{"value":"/ for the pool from the file descriptor passed when the pool was","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13420435,"byte_end":13420501,"line_start":811,"line_end":811,"column_start":9,"column_end":75}},{"value":"/ created, but using the new size.  This request can only be","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13420510,"byte_end":13420572,"line_start":812,"line_end":812,"column_start":9,"column_end":71}},{"value":"/ used to make the pool bigger.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13420581,"byte_end":13420614,"line_start":813,"line_end":813,"column_start":9,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":1034},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13420939,"byte_end":13420945,"line_start":821,"line_end":821,"column_start":9,"column_end":15},"name":"wl_shm","qualname":"::generated::client::wl_shm","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1082},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1105},{"krate":0,"index":2679},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2692},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":1109},{"krate":0,"index":2697},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2875},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1127}],"decl_id":null,"docs":" shared memory support","sig":null,"attributes":[{"value":"/ shared memory support","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13420952,"byte_end":13420977,"line_start":822,"line_end":822,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13420982,"byte_end":13420985,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ A global singleton object that provides support for shared","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13420990,"byte_end":13421052,"line_start":824,"line_end":824,"column_start":5,"column_end":67}},{"value":"/ memory.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13421057,"byte_end":13421068,"line_start":825,"line_end":825,"column_start":5,"column_end":16}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13421073,"byte_end":13421077,"line_start":826,"line_end":826,"column_start":5,"column_end":9}},{"value":"/ Clients can create wl_shm_pool objects using the create_pool","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13421082,"byte_end":13421146,"line_start":827,"line_end":827,"column_start":5,"column_end":69}},{"value":"/ request.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13421151,"byte_end":13421163,"line_start":828,"line_end":828,"column_start":5,"column_end":17}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13421168,"byte_end":13421172,"line_start":829,"line_end":829,"column_start":5,"column_end":9}},{"value":"/ At connection setup time, the wl_shm object emits one or more","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13421177,"byte_end":13421242,"line_start":830,"line_end":830,"column_start":5,"column_end":70}},{"value":"/ format events to inform clients about the valid pixel formats","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13421247,"byte_end":13421312,"line_start":831,"line_end":831,"column_start":5,"column_end":70}},{"value":"/ that can be used for buffers.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13421317,"byte_end":13421350,"line_start":832,"line_end":832,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1087},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13421912,"byte_end":13421917,"line_start":850,"line_end":850,"column_start":16,"column_end":21},"name":"WlShm","qualname":"::generated::client::wl_shm::WlShm","value":"WlShm {  }","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2680},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13425853,"byte_end":13425866,"line_start":956,"line_end":956,"column_start":9,"column_end":22},"name":"InvalidFormat","qualname":"::generated::client::wl_shm::Error::InvalidFormat","value":"Error::InvalidFormat","parent":{"krate":0,"index":2679},"children":[],"decl_id":null,"docs":" buffer format is not known\n","sig":null,"attributes":[{"value":"/ buffer format is not known","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13425814,"byte_end":13425844,"line_start":955,"line_end":955,"column_start":9,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2683},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13425946,"byte_end":13425959,"line_start":958,"line_end":958,"column_start":9,"column_end":22},"name":"InvalidStride","qualname":"::generated::client::wl_shm::Error::InvalidStride","value":"Error::InvalidStride","parent":{"krate":0,"index":2679},"children":[],"decl_id":null,"docs":" invalid size or stride during pool or buffer creation\n","sig":null,"attributes":[{"value":"/ invalid size or stride during pool or buffer creation","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13425880,"byte_end":13425937,"line_start":957,"line_end":957,"column_start":9,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2686},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426021,"byte_end":13426030,"line_start":960,"line_end":960,"column_start":9,"column_end":18},"name":"InvalidFd","qualname":"::generated::client::wl_shm::Error::InvalidFd","value":"Error::InvalidFd","parent":{"krate":0,"index":2679},"children":[],"decl_id":null,"docs":" mmapping the file descriptor failed\n","sig":null,"attributes":[{"value":"/ mmapping the file descriptor failed","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13425973,"byte_end":13426012,"line_start":959,"line_end":959,"column_start":9,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":2679},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13425798,"byte_end":13425803,"line_start":954,"line_end":954,"column_start":14,"column_end":19},"name":"Error","qualname":"::generated::client::wl_shm::Error","value":"pub enum Error { InvalidFormat = , InvalidStride = , InvalidFd = , }","parent":null,"children":[{"krate":0,"index":2680},{"krate":0,"index":2683},{"krate":0,"index":2686}],"decl_id":null,"docs":" wl_shm error values","sig":null,"attributes":[{"value":"/ wl_shm error values","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13425626,"byte_end":13425649,"line_start":949,"line_end":949,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13425654,"byte_end":13425657,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ These errors can be emitted in response to wl_shm requests.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13425662,"byte_end":13425725,"line_start":951,"line_end":951,"column_start":5,"column_end":68}},{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13425730,"byte_end":13425742,"line_start":952,"line_end":952,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426074,"byte_end":13426082,"line_start":963,"line_end":963,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426348,"byte_end":13426354,"line_start":971,"line_end":971,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2698},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427021,"byte_end":13427029,"line_start":990,"line_end":990,"column_start":9,"column_end":17},"name":"Argb8888","qualname":"::generated::client::wl_shm::Format::Argb8888","value":"Format::Argb8888","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426952,"byte_end":13427012,"line_start":989,"line_end":989,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2701},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427111,"byte_end":13427119,"line_start":992,"line_end":992,"column_start":9,"column_end":17},"name":"Xrgb8888","qualname":"::generated::client::wl_shm::Format::Xrgb8888","value":"Format::Xrgb8888","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427043,"byte_end":13427102,"line_start":991,"line_end":991,"column_start":9,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2704},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427179,"byte_end":13427181,"line_start":994,"line_end":994,"column_start":9,"column_end":11},"name":"C8","qualname":"::generated::client::wl_shm::Format::C8","value":"Format::C8","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 8-bit color index format, [7:0] C\n","sig":null,"attributes":[{"value":"/ 8-bit color index format, [7:0] C","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427133,"byte_end":13427170,"line_start":993,"line_end":993,"column_start":9,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2707},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427252,"byte_end":13427258,"line_start":996,"line_end":996,"column_start":9,"column_end":15},"name":"Rgb332","qualname":"::generated::client::wl_shm::Format::Rgb332","value":"Format::Rgb332","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 8-bit RGB format, [7:0] R:G:B 3:3:2\n","sig":null,"attributes":[{"value":"/ 8-bit RGB format, [7:0] R:G:B 3:3:2","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427204,"byte_end":13427243,"line_start":995,"line_end":995,"column_start":9,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2710},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427329,"byte_end":13427335,"line_start":998,"line_end":998,"column_start":9,"column_end":15},"name":"Bgr233","qualname":"::generated::client::wl_shm::Format::Bgr233","value":"Format::Bgr233","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 8-bit BGR format, [7:0] B:G:R 2:3:3\n","sig":null,"attributes":[{"value":"/ 8-bit BGR format, [7:0] B:G:R 2:3:3","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427281,"byte_end":13427320,"line_start":997,"line_end":997,"column_start":9,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2713},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427427,"byte_end":13427435,"line_start":1000,"line_end":1000,"column_start":9,"column_end":17},"name":"Xrgb4444","qualname":"::generated::client::wl_shm::Format::Xrgb4444","value":"Format::Xrgb4444","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427358,"byte_end":13427418,"line_start":999,"line_end":999,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2716},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427527,"byte_end":13427535,"line_start":1002,"line_end":1002,"column_start":9,"column_end":17},"name":"Xbgr4444","qualname":"::generated::client::wl_shm::Format::Xbgr4444","value":"Format::Xbgr4444","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427458,"byte_end":13427518,"line_start":1001,"line_end":1001,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2719},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427627,"byte_end":13427635,"line_start":1004,"line_end":1004,"column_start":9,"column_end":17},"name":"Rgbx4444","qualname":"::generated::client::wl_shm::Format::Rgbx4444","value":"Format::Rgbx4444","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427558,"byte_end":13427618,"line_start":1003,"line_end":1003,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2722},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427727,"byte_end":13427735,"line_start":1006,"line_end":1006,"column_start":9,"column_end":17},"name":"Bgrx4444","qualname":"::generated::client::wl_shm::Format::Bgrx4444","value":"Format::Bgrx4444","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427658,"byte_end":13427718,"line_start":1005,"line_end":1005,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2725},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427827,"byte_end":13427835,"line_start":1008,"line_end":1008,"column_start":9,"column_end":17},"name":"Argb4444","qualname":"::generated::client::wl_shm::Format::Argb4444","value":"Format::Argb4444","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427758,"byte_end":13427818,"line_start":1007,"line_end":1007,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2728},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427927,"byte_end":13427935,"line_start":1010,"line_end":1010,"column_start":9,"column_end":17},"name":"Abgr4444","qualname":"::generated::client::wl_shm::Format::Abgr4444","value":"Format::Abgr4444","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427858,"byte_end":13427918,"line_start":1009,"line_end":1009,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2731},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428027,"byte_end":13428035,"line_start":1012,"line_end":1012,"column_start":9,"column_end":17},"name":"Rgba4444","qualname":"::generated::client::wl_shm::Format::Rgba4444","value":"Format::Rgba4444","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13427958,"byte_end":13428018,"line_start":1011,"line_end":1011,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2734},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428127,"byte_end":13428135,"line_start":1014,"line_end":1014,"column_start":9,"column_end":17},"name":"Bgra4444","qualname":"::generated::client::wl_shm::Format::Bgra4444","value":"Format::Bgra4444","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428058,"byte_end":13428118,"line_start":1013,"line_end":1013,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2737},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428227,"byte_end":13428235,"line_start":1016,"line_end":1016,"column_start":9,"column_end":17},"name":"Xrgb1555","qualname":"::generated::client::wl_shm::Format::Xrgb1555","value":"Format::Xrgb1555","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428158,"byte_end":13428218,"line_start":1015,"line_end":1015,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2740},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428332,"byte_end":13428340,"line_start":1018,"line_end":1018,"column_start":9,"column_end":17},"name":"Xbgr1555","qualname":"::generated::client::wl_shm::Format::Xbgr1555","value":"Format::Xbgr1555","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428258,"byte_end":13428323,"line_start":1017,"line_end":1017,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2743},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428437,"byte_end":13428445,"line_start":1020,"line_end":1020,"column_start":9,"column_end":17},"name":"Rgbx5551","qualname":"::generated::client::wl_shm::Format::Rgbx5551","value":"Format::Rgbx5551","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428363,"byte_end":13428428,"line_start":1019,"line_end":1019,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2746},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428542,"byte_end":13428550,"line_start":1022,"line_end":1022,"column_start":9,"column_end":17},"name":"Bgrx5551","qualname":"::generated::client::wl_shm::Format::Bgrx5551","value":"Format::Bgrx5551","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428468,"byte_end":13428533,"line_start":1021,"line_end":1021,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2749},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428647,"byte_end":13428655,"line_start":1024,"line_end":1024,"column_start":9,"column_end":17},"name":"Argb1555","qualname":"::generated::client::wl_shm::Format::Argb1555","value":"Format::Argb1555","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428573,"byte_end":13428638,"line_start":1023,"line_end":1023,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2752},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428752,"byte_end":13428760,"line_start":1026,"line_end":1026,"column_start":9,"column_end":17},"name":"Abgr1555","qualname":"::generated::client::wl_shm::Format::Abgr1555","value":"Format::Abgr1555","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428678,"byte_end":13428743,"line_start":1025,"line_end":1025,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2755},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428857,"byte_end":13428865,"line_start":1028,"line_end":1028,"column_start":9,"column_end":17},"name":"Rgba5551","qualname":"::generated::client::wl_shm::Format::Rgba5551","value":"Format::Rgba5551","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428783,"byte_end":13428848,"line_start":1027,"line_end":1027,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2758},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428962,"byte_end":13428970,"line_start":1030,"line_end":1030,"column_start":9,"column_end":17},"name":"Bgra5551","qualname":"::generated::client::wl_shm::Format::Bgra5551","value":"Format::Bgra5551","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428888,"byte_end":13428953,"line_start":1029,"line_end":1029,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2761},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429061,"byte_end":13429067,"line_start":1032,"line_end":1032,"column_start":9,"column_end":15},"name":"Rgb565","qualname":"::generated::client::wl_shm::Format::Rgb565","value":"Format::Rgb565","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13428993,"byte_end":13429052,"line_start":1031,"line_end":1031,"column_start":9,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2764},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429158,"byte_end":13429164,"line_start":1034,"line_end":1034,"column_start":9,"column_end":15},"name":"Bgr565","qualname":"::generated::client::wl_shm::Format::Bgr565","value":"Format::Bgr565","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian\n","sig":null,"attributes":[{"value":"/ 16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429090,"byte_end":13429149,"line_start":1033,"line_end":1033,"column_start":9,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2767},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429245,"byte_end":13429251,"line_start":1036,"line_end":1036,"column_start":9,"column_end":15},"name":"Rgb888","qualname":"::generated::client::wl_shm::Format::Rgb888","value":"Format::Rgb888","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 24-bit RGB format, [23:0] R:G:B little endian\n","sig":null,"attributes":[{"value":"/ 24-bit RGB format, [23:0] R:G:B little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429187,"byte_end":13429236,"line_start":1035,"line_end":1035,"column_start":9,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2770},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429332,"byte_end":13429338,"line_start":1038,"line_end":1038,"column_start":9,"column_end":15},"name":"Bgr888","qualname":"::generated::client::wl_shm::Format::Bgr888","value":"Format::Bgr888","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 24-bit BGR format, [23:0] B:G:R little endian\n","sig":null,"attributes":[{"value":"/ 24-bit BGR format, [23:0] B:G:R little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429274,"byte_end":13429323,"line_start":1037,"line_end":1037,"column_start":9,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2773},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429430,"byte_end":13429438,"line_start":1040,"line_end":1040,"column_start":9,"column_end":17},"name":"Xbgr8888","qualname":"::generated::client::wl_shm::Format::Xbgr8888","value":"Format::Xbgr8888","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429361,"byte_end":13429421,"line_start":1039,"line_end":1039,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2776},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429530,"byte_end":13429538,"line_start":1042,"line_end":1042,"column_start":9,"column_end":17},"name":"Rgbx8888","qualname":"::generated::client::wl_shm::Format::Rgbx8888","value":"Format::Rgbx8888","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429461,"byte_end":13429521,"line_start":1041,"line_end":1041,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2779},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429630,"byte_end":13429638,"line_start":1044,"line_end":1044,"column_start":9,"column_end":17},"name":"Bgrx8888","qualname":"::generated::client::wl_shm::Format::Bgrx8888","value":"Format::Bgrx8888","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429561,"byte_end":13429621,"line_start":1043,"line_end":1043,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2782},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429730,"byte_end":13429738,"line_start":1046,"line_end":1046,"column_start":9,"column_end":17},"name":"Abgr8888","qualname":"::generated::client::wl_shm::Format::Abgr8888","value":"Format::Abgr8888","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429661,"byte_end":13429721,"line_start":1045,"line_end":1045,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2785},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429830,"byte_end":13429838,"line_start":1048,"line_end":1048,"column_start":9,"column_end":17},"name":"Rgba8888","qualname":"::generated::client::wl_shm::Format::Rgba8888","value":"Format::Rgba8888","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429761,"byte_end":13429821,"line_start":1047,"line_end":1047,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2788},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429930,"byte_end":13429938,"line_start":1050,"line_end":1050,"column_start":9,"column_end":17},"name":"Bgra8888","qualname":"::generated::client::wl_shm::Format::Bgra8888","value":"Format::Bgra8888","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429861,"byte_end":13429921,"line_start":1049,"line_end":1049,"column_start":9,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2791},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430033,"byte_end":13430044,"line_start":1052,"line_end":1052,"column_start":9,"column_end":20},"name":"Xrgb2101010","qualname":"::generated::client::wl_shm::Format::Xrgb2101010","value":"Format::Xrgb2101010","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13429961,"byte_end":13430024,"line_start":1051,"line_end":1051,"column_start":9,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2794},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430139,"byte_end":13430150,"line_start":1054,"line_end":1054,"column_start":9,"column_end":20},"name":"Xbgr2101010","qualname":"::generated::client::wl_shm::Format::Xbgr2101010","value":"Format::Xbgr2101010","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430067,"byte_end":13430130,"line_start":1053,"line_end":1053,"column_start":9,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2797},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430245,"byte_end":13430256,"line_start":1056,"line_end":1056,"column_start":9,"column_end":20},"name":"Rgbx1010102","qualname":"::generated::client::wl_shm::Format::Rgbx1010102","value":"Format::Rgbx1010102","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430173,"byte_end":13430236,"line_start":1055,"line_end":1055,"column_start":9,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2800},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430351,"byte_end":13430362,"line_start":1058,"line_end":1058,"column_start":9,"column_end":20},"name":"Bgrx1010102","qualname":"::generated::client::wl_shm::Format::Bgrx1010102","value":"Format::Bgrx1010102","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430279,"byte_end":13430342,"line_start":1057,"line_end":1057,"column_start":9,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2803},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430457,"byte_end":13430468,"line_start":1060,"line_end":1060,"column_start":9,"column_end":20},"name":"Argb2101010","qualname":"::generated::client::wl_shm::Format::Argb2101010","value":"Format::Argb2101010","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430385,"byte_end":13430448,"line_start":1059,"line_end":1059,"column_start":9,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2806},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430563,"byte_end":13430574,"line_start":1062,"line_end":1062,"column_start":9,"column_end":20},"name":"Abgr2101010","qualname":"::generated::client::wl_shm::Format::Abgr2101010","value":"Format::Abgr2101010","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430491,"byte_end":13430554,"line_start":1061,"line_end":1061,"column_start":9,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2809},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430669,"byte_end":13430680,"line_start":1064,"line_end":1064,"column_start":9,"column_end":20},"name":"Rgba1010102","qualname":"::generated::client::wl_shm::Format::Rgba1010102","value":"Format::Rgba1010102","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430597,"byte_end":13430660,"line_start":1063,"line_end":1063,"column_start":9,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2812},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430775,"byte_end":13430786,"line_start":1066,"line_end":1066,"column_start":9,"column_end":20},"name":"Bgra1010102","qualname":"::generated::client::wl_shm::Format::Bgra1010102","value":"Format::Bgra1010102","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian\n","sig":null,"attributes":[{"value":"/ 32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430703,"byte_end":13430766,"line_start":1065,"line_end":1065,"column_start":9,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2815},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430885,"byte_end":13430889,"line_start":1068,"line_end":1068,"column_start":9,"column_end":13},"name":"Yuyv","qualname":"::generated::client::wl_shm::Format::Yuyv","value":"Format::Yuyv","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian\n","sig":null,"attributes":[{"value":"/ packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430809,"byte_end":13430876,"line_start":1067,"line_end":1067,"column_start":9,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2818},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430988,"byte_end":13430992,"line_start":1070,"line_end":1070,"column_start":9,"column_end":13},"name":"Yvyu","qualname":"::generated::client::wl_shm::Format::Yvyu","value":"Format::Yvyu","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian\n","sig":null,"attributes":[{"value":"/ packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13430912,"byte_end":13430979,"line_start":1069,"line_end":1069,"column_start":9,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2821},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431091,"byte_end":13431095,"line_start":1072,"line_end":1072,"column_start":9,"column_end":13},"name":"Uyvy","qualname":"::generated::client::wl_shm::Format::Uyvy","value":"Format::Uyvy","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian\n","sig":null,"attributes":[{"value":"/ packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431015,"byte_end":13431082,"line_start":1071,"line_end":1071,"column_start":9,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2824},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431194,"byte_end":13431198,"line_start":1074,"line_end":1074,"column_start":9,"column_end":13},"name":"Vyuy","qualname":"::generated::client::wl_shm::Format::Vyuy","value":"Format::Vyuy","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian\n","sig":null,"attributes":[{"value":"/ packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431118,"byte_end":13431185,"line_start":1073,"line_end":1073,"column_start":9,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2827},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431294,"byte_end":13431298,"line_start":1076,"line_end":1076,"column_start":9,"column_end":13},"name":"Ayuv","qualname":"::generated::client::wl_shm::Format::Ayuv","value":"Format::Ayuv","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian\n","sig":null,"attributes":[{"value":"/ packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431221,"byte_end":13431285,"line_start":1075,"line_end":1075,"column_start":9,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2830},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431388,"byte_end":13431392,"line_start":1078,"line_end":1078,"column_start":9,"column_end":13},"name":"Nv12","qualname":"::generated::client::wl_shm::Format::Nv12","value":"Format::Nv12","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane\n","sig":null,"attributes":[{"value":"/ 2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431321,"byte_end":13431379,"line_start":1077,"line_end":1077,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2833},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431482,"byte_end":13431486,"line_start":1080,"line_end":1080,"column_start":9,"column_end":13},"name":"Nv21","qualname":"::generated::client::wl_shm::Format::Nv21","value":"Format::Nv21","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane\n","sig":null,"attributes":[{"value":"/ 2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431415,"byte_end":13431473,"line_start":1079,"line_end":1079,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2836},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431576,"byte_end":13431580,"line_start":1082,"line_end":1082,"column_start":9,"column_end":13},"name":"Nv16","qualname":"::generated::client::wl_shm::Format::Nv16","value":"Format::Nv16","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane\n","sig":null,"attributes":[{"value":"/ 2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431509,"byte_end":13431567,"line_start":1081,"line_end":1081,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2839},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431670,"byte_end":13431674,"line_start":1084,"line_end":1084,"column_start":9,"column_end":13},"name":"Nv61","qualname":"::generated::client::wl_shm::Format::Nv61","value":"Format::Nv61","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane\n","sig":null,"attributes":[{"value":"/ 2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431603,"byte_end":13431661,"line_start":1083,"line_end":1083,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2842},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431771,"byte_end":13431777,"line_start":1086,"line_end":1086,"column_start":9,"column_end":15},"name":"Yuv410","qualname":"::generated::client::wl_shm::Format::Yuv410","value":"Format::Yuv410","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes\n","sig":null,"attributes":[{"value":"/ 3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431697,"byte_end":13431762,"line_start":1085,"line_end":1085,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2845},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431874,"byte_end":13431880,"line_start":1088,"line_end":1088,"column_start":9,"column_end":15},"name":"Yvu410","qualname":"::generated::client::wl_shm::Format::Yvu410","value":"Format::Yvu410","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes\n","sig":null,"attributes":[{"value":"/ 3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431800,"byte_end":13431865,"line_start":1087,"line_end":1087,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2848},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431977,"byte_end":13431983,"line_start":1090,"line_end":1090,"column_start":9,"column_end":15},"name":"Yuv411","qualname":"::generated::client::wl_shm::Format::Yuv411","value":"Format::Yuv411","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes\n","sig":null,"attributes":[{"value":"/ 3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13431903,"byte_end":13431968,"line_start":1089,"line_end":1089,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2851},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432080,"byte_end":13432086,"line_start":1092,"line_end":1092,"column_start":9,"column_end":15},"name":"Yvu411","qualname":"::generated::client::wl_shm::Format::Yvu411","value":"Format::Yvu411","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes\n","sig":null,"attributes":[{"value":"/ 3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432006,"byte_end":13432071,"line_start":1091,"line_end":1091,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2854},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432183,"byte_end":13432189,"line_start":1094,"line_end":1094,"column_start":9,"column_end":15},"name":"Yuv420","qualname":"::generated::client::wl_shm::Format::Yuv420","value":"Format::Yuv420","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes\n","sig":null,"attributes":[{"value":"/ 3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432109,"byte_end":13432174,"line_start":1093,"line_end":1093,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2857},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432286,"byte_end":13432292,"line_start":1096,"line_end":1096,"column_start":9,"column_end":15},"name":"Yvu420","qualname":"::generated::client::wl_shm::Format::Yvu420","value":"Format::Yvu420","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes\n","sig":null,"attributes":[{"value":"/ 3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432212,"byte_end":13432277,"line_start":1095,"line_end":1095,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2860},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432389,"byte_end":13432395,"line_start":1098,"line_end":1098,"column_start":9,"column_end":15},"name":"Yuv422","qualname":"::generated::client::wl_shm::Format::Yuv422","value":"Format::Yuv422","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes\n","sig":null,"attributes":[{"value":"/ 3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432315,"byte_end":13432380,"line_start":1097,"line_end":1097,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2863},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432492,"byte_end":13432498,"line_start":1100,"line_end":1100,"column_start":9,"column_end":15},"name":"Yvu422","qualname":"::generated::client::wl_shm::Format::Yvu422","value":"Format::Yvu422","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes\n","sig":null,"attributes":[{"value":"/ 3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432418,"byte_end":13432483,"line_start":1099,"line_end":1099,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2866},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432595,"byte_end":13432601,"line_start":1102,"line_end":1102,"column_start":9,"column_end":15},"name":"Yuv444","qualname":"::generated::client::wl_shm::Format::Yuv444","value":"Format::Yuv444","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes\n","sig":null,"attributes":[{"value":"/ 3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432521,"byte_end":13432586,"line_start":1101,"line_end":1101,"column_start":9,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2869},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432698,"byte_end":13432704,"line_start":1104,"line_end":1104,"column_start":9,"column_end":15},"name":"Yvu444","qualname":"::generated::client::wl_shm::Format::Yvu444","value":"Format::Yvu444","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":" 3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes\n","sig":null,"attributes":[{"value":"/ 3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432624,"byte_end":13432689,"line_start":1103,"line_end":1103,"column_start":9,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":2697},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426935,"byte_end":13426941,"line_start":988,"line_end":988,"column_start":14,"column_end":20},"name":"Format","qualname":"::generated::client::wl_shm::Format","value":"pub enum Format {\n    Argb8888 = ,\n    Xrgb8888 = ,\n    C8 = ,\n    Rgb332 = ,\n    Bgr233 = ,\n    Xrgb4444 = ,\n    Xbgr4444 = ,\n    Rgbx4444 = ,\n    Bgrx4444 = ,\n    Argb4444 = ,\n    Abgr4444 = ,\n    Rgba4444 = ,\n    Bgra4444 = ,\n    Xrgb1555 = ,\n    Xbgr1555 = ,\n    Rgbx5551 = ,\n    Bgrx5551 = ,\n    Argb1555 = ,\n    Abgr1555 = ,\n    Rgba5551 = ,\n    Bgra5551 = ,\n    Rgb565 = ,\n    Bgr565 = ,\n    Rgb888 = ,\n    Bgr888 = ,\n    Xbgr8888 = ,\n    Rgbx8888 = ,\n    Bgrx8888 = ,\n    Abgr8888 = ,\n    Rgba8888 = ,\n    Bgra8888 = ,\n    Xrgb2101010 = ,\n    Xbgr2101010 = ,\n    Rgbx1010102 = ,\n    Bgrx1010102 = ,\n    Argb2101010 = ,\n    Abgr2101010 = ,\n    Rgba1010102 = ,\n    Bgra1010102 = ,\n    Yuyv = ,\n    Yvyu = ,\n    Uyvy = ,\n    Vyuy = ,\n    Ayuv = ,\n    Nv12 = ,\n    Nv21 = ,\n    Nv16 = ,\n    Nv61 = ,\n    Yuv410 = ,\n    Yvu410 = ,\n    Yuv411 = ,\n    Yvu411 = ,\n    Yuv420 = ,\n    Yvu420 = ,\n    Yuv422 = ,\n    Yvu422 = ,\n    Yuv444 = ,\n    Yvu444 = ,\n}","parent":null,"children":[{"krate":0,"index":2698},{"krate":0,"index":2701},{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2710},{"krate":0,"index":2713},{"krate":0,"index":2716},{"krate":0,"index":2719},{"krate":0,"index":2722},{"krate":0,"index":2725},{"krate":0,"index":2728},{"krate":0,"index":2731},{"krate":0,"index":2734},{"krate":0,"index":2737},{"krate":0,"index":2740},{"krate":0,"index":2743},{"krate":0,"index":2746},{"krate":0,"index":2749},{"krate":0,"index":2752},{"krate":0,"index":2755},{"krate":0,"index":2758},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2767},{"krate":0,"index":2770},{"krate":0,"index":2773},{"krate":0,"index":2776},{"krate":0,"index":2779},{"krate":0,"index":2782},{"krate":0,"index":2785},{"krate":0,"index":2788},{"krate":0,"index":2791},{"krate":0,"index":2794},{"krate":0,"index":2797},{"krate":0,"index":2800},{"krate":0,"index":2803},{"krate":0,"index":2806},{"krate":0,"index":2809},{"krate":0,"index":2812},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2824},{"krate":0,"index":2827},{"krate":0,"index":2830},{"krate":0,"index":2833},{"krate":0,"index":2836},{"krate":0,"index":2839},{"krate":0,"index":2842},{"krate":0,"index":2845},{"krate":0,"index":2848},{"krate":0,"index":2851},{"krate":0,"index":2854},{"krate":0,"index":2857},{"krate":0,"index":2860},{"krate":0,"index":2863},{"krate":0,"index":2866},{"krate":0,"index":2869}],"decl_id":null,"docs":" pixel formats","sig":null,"attributes":[{"value":"/ pixel formats","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426416,"byte_end":13426433,"line_start":975,"line_end":975,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426438,"byte_end":13426441,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ This describes the memory layout of an individual pixel.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426446,"byte_end":13426506,"line_start":977,"line_end":977,"column_start":5,"column_end":65}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426511,"byte_end":13426515,"line_start":978,"line_end":978,"column_start":5,"column_end":9}},{"value":"/ All renderers should support argb8888 and xrgb8888 but any other","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426520,"byte_end":13426588,"line_start":979,"line_end":979,"column_start":5,"column_end":73}},{"value":"/ formats are optional and may not be supported by the particular","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426593,"byte_end":13426660,"line_start":980,"line_end":980,"column_start":5,"column_end":72}},{"value":"/ renderer in use.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426665,"byte_end":13426685,"line_start":981,"line_end":981,"column_start":5,"column_end":25}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426690,"byte_end":13426694,"line_start":982,"line_end":982,"column_start":5,"column_end":9}},{"value":"/ The drm format codes match the #defines in drm_fourcc.h.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426699,"byte_end":13426759,"line_start":983,"line_end":983,"column_start":5,"column_end":65}},{"value":"/ The formats actually supported by the compositor will be","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426764,"byte_end":13426824,"line_start":984,"line_end":984,"column_start":5,"column_end":65}},{"value":"/ reported by the format event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426829,"byte_end":13426862,"line_start":985,"line_end":985,"column_start":5,"column_end":38}},{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426867,"byte_end":13426879,"line_start":986,"line_end":986,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432758,"byte_end":13432766,"line_start":1107,"line_end":1107,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Format>::from_raw","value":"pub fn from_raw(u32) -> Option<Format>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13435954,"byte_end":13435960,"line_start":1170,"line_end":1170,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Format>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1115},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436033,"byte_end":13436047,"line_start":1174,"line_end":1174,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_shm::Implementation","value":"Implementation { format }","parent":null,"children":[{"krate":0,"index":1117}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1117},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436362,"byte_end":13436368,"line_start":1182,"line_end":1182,"column_start":13,"column_end":19},"name":"format","qualname":"::generated::client::wl_shm::Implementation::format","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_shm::WlShm, generated::client::wl_shm::Format)","parent":{"krate":0,"index":1115},"children":[],"decl_id":null,"docs":" pixel format description","sig":null,"attributes":[{"value":"/ pixel format description","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436062,"byte_end":13436090,"line_start":1175,"line_end":1175,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436099,"byte_end":13436102,"line_start":1176,"line_end":1176,"column_start":9,"column_end":12}},{"value":"/ Informs the client about a valid pixel format that","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436111,"byte_end":13436165,"line_start":1177,"line_end":1177,"column_start":9,"column_end":63}},{"value":"/ can be used for buffers. Known formats include","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436174,"byte_end":13436224,"line_start":1178,"line_end":1178,"column_start":9,"column_end":59}},{"value":"/ argb8888 and xrgb8888.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436233,"byte_end":13436259,"line_start":1179,"line_end":1179,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436268,"byte_end":13436271,"line_start":1180,"line_end":1180,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_shm, format","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436280,"byte_end":13436349,"line_start":1181,"line_end":1181,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13437211,"byte_end":13437222,"line_start":1209,"line_end":1209,"column_start":16,"column_end":27},"name":"create_pool","qualname":"<WlShm>::create_pool","value":"pub fn create_pool(&Self, ::std::os::unix::io::RawFd, i32)\n-> super::wl_shm_pool::WlShmPool","parent":null,"children":[],"decl_id":null,"docs":" create a shm pool","sig":null,"attributes":[{"value":"/ create a shm pool","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436898,"byte_end":13436919,"line_start":1202,"line_end":1202,"column_start":9,"column_end":30}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436928,"byte_end":13436931,"line_start":1203,"line_end":1203,"column_start":9,"column_end":12}},{"value":"/ Create a new wl_shm_pool object.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436940,"byte_end":13436976,"line_start":1204,"line_end":1204,"column_start":9,"column_end":45}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436985,"byte_end":13436989,"line_start":1205,"line_end":1205,"column_start":9,"column_end":13}},{"value":"/ The pool can be used to create shared memory based buffer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436998,"byte_end":13437059,"line_start":1206,"line_end":1206,"column_start":9,"column_end":70}},{"value":"/ objects.  The server will mmap size bytes of the passed file","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13437068,"byte_end":13437132,"line_start":1207,"line_end":1207,"column_start":9,"column_end":73}},{"value":"/ descriptor, to use as backing memory for the pool.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13437141,"byte_end":13437195,"line_start":1208,"line_end":1208,"column_start":9,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":1129},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13437608,"byte_end":13437617,"line_start":1216,"line_end":1216,"column_start":9,"column_end":18},"name":"wl_buffer","qualname":"::generated::client::wl_buffer","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1133},{"krate":0,"index":1136},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1143},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1200},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1216}],"decl_id":null,"docs":" content for a wl_surface","sig":null,"attributes":[{"value":"/ content for a wl_surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13437624,"byte_end":13437652,"line_start":1217,"line_end":1217,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13437657,"byte_end":13437660,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ A buffer provides the content for a wl_surface. Buffers are","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13437665,"byte_end":13437728,"line_start":1219,"line_end":1219,"column_start":5,"column_end":68}},{"value":"/ created through factory interfaces such as wl_drm, wl_shm or","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13437733,"byte_end":13437797,"line_start":1220,"line_end":1220,"column_start":5,"column_end":69}},{"value":"/ similar. It has a width and a height and can be attached to a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13437802,"byte_end":13437867,"line_start":1221,"line_end":1221,"column_start":5,"column_end":70}},{"value":"/ wl_surface, but the mechanism by which a client provides and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13437872,"byte_end":13437936,"line_start":1222,"line_end":1222,"column_start":5,"column_end":69}},{"value":"/ updates the contents is defined by the buffer factory interface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13437941,"byte_end":13438009,"line_start":1223,"line_end":1223,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1182},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13438571,"byte_end":13438579,"line_start":1241,"line_end":1241,"column_start":16,"column_end":24},"name":"WlBuffer","qualname":"::generated::client::wl_buffer::WlBuffer","value":"WlBuffer {  }","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1204},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442193,"byte_end":13442207,"line_start":1339,"line_end":1339,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_buffer::Implementation","value":"Implementation { release }","parent":null,"children":[{"krate":0,"index":1206}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443140,"byte_end":13443147,"line_start":1356,"line_end":1356,"column_start":13,"column_end":20},"name":"release","qualname":"::generated::client::wl_buffer::Implementation::release","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_buffer::WlBuffer)","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" compositor releases buffer","sig":null,"attributes":[{"value":"/ compositor releases buffer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442222,"byte_end":13442252,"line_start":1340,"line_end":1340,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442261,"byte_end":13442264,"line_start":1341,"line_end":1341,"column_start":9,"column_end":12}},{"value":"/ Sent when this wl_buffer is no longer used by the compositor.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442273,"byte_end":13442338,"line_start":1342,"line_end":1342,"column_start":9,"column_end":74}},{"value":"/ The client is now free to reuse or destroy this buffer and its","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442347,"byte_end":13442413,"line_start":1343,"line_end":1343,"column_start":9,"column_end":75}},{"value":"/ backing storage.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442422,"byte_end":13442442,"line_start":1344,"line_end":1344,"column_start":9,"column_end":29}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442451,"byte_end":13442455,"line_start":1345,"line_end":1345,"column_start":9,"column_end":13}},{"value":"/ If a client receives a release event before the frame callback","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442464,"byte_end":13442530,"line_start":1346,"line_end":1346,"column_start":9,"column_end":75}},{"value":"/ requested in the same wl_surface.commit that attaches this","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442539,"byte_end":13442601,"line_start":1347,"line_end":1347,"column_start":9,"column_end":71}},{"value":"/ wl_buffer to a surface, then the client is immediately free to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442610,"byte_end":13442676,"line_start":1348,"line_end":1348,"column_start":9,"column_end":75}},{"value":"/ reuse the buffer and its backing storage, and does not need a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442685,"byte_end":13442750,"line_start":1349,"line_end":1349,"column_start":9,"column_end":74}},{"value":"/ second buffer for the next surface content update. Typically","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442759,"byte_end":13442823,"line_start":1350,"line_end":1350,"column_start":9,"column_end":73}},{"value":"/ this is possible, when the compositor maintains a copy of the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442832,"byte_end":13442897,"line_start":1351,"line_end":1351,"column_start":9,"column_end":74}},{"value":"/ wl_surface contents, e.g. as a GL texture. This is an important","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442906,"byte_end":13442973,"line_start":1352,"line_end":1352,"column_start":9,"column_end":76}},{"value":"/ optimization for GL(ES) compositors with wl_shm clients.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13442982,"byte_end":13443042,"line_start":1353,"line_end":1353,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443051,"byte_end":13443054,"line_start":1354,"line_end":1354,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_buffer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443063,"byte_end":13443127,"line_start":1355,"line_end":1355,"column_start":9,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13444058,"byte_end":13444065,"line_start":1384,"line_end":1384,"column_start":16,"column_end":23},"name":"destroy","qualname":"<WlBuffer>::destroy","value":"pub fn destroy(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" destroy a buffer","sig":null,"attributes":[{"value":"/ destroy a buffer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443671,"byte_end":13443691,"line_start":1376,"line_end":1376,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443700,"byte_end":13443703,"line_start":1377,"line_end":1377,"column_start":9,"column_end":12}},{"value":"/ Destroy a buffer. If and how you need to release the backing","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443712,"byte_end":13443776,"line_start":1378,"line_end":1378,"column_start":9,"column_end":73}},{"value":"/ storage is defined by the buffer factory interface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443785,"byte_end":13443840,"line_start":1379,"line_end":1379,"column_start":9,"column_end":64}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443849,"byte_end":13443853,"line_start":1380,"line_end":1380,"column_start":9,"column_end":13}},{"value":"/ For possible side-effects to a surface, see wl_surface.attach.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443862,"byte_end":13443928,"line_start":1381,"line_end":1381,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443937,"byte_end":13443940,"line_start":1382,"line_end":1382,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443949,"byte_end":13444042,"line_start":1383,"line_end":1383,"column_start":9,"column_end":102}}]},{"kind":"Mod","id":{"krate":0,"index":1218},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13444791,"byte_end":13444804,"line_start":1399,"line_end":1399,"column_start":9,"column_end":22},"name":"wl_data_offer","qualname":"::generated::client::wl_data_offer","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1222},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1244},{"krate":0,"index":1247},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1289},{"krate":0,"index":2880},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2896},{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":1293},{"krate":0,"index":1296},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314}],"decl_id":null,"docs":" offer to transfer data","sig":null,"attributes":[{"value":"/ offer to transfer data","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13444811,"byte_end":13444837,"line_start":1400,"line_end":1400,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13444842,"byte_end":13444845,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ A wl_data_offer represents a piece of data offered for transfer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13444850,"byte_end":13444917,"line_start":1402,"line_end":1402,"column_start":5,"column_end":72}},{"value":"/ by another client (the source client).  It is used by the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13444922,"byte_end":13444983,"line_start":1403,"line_end":1403,"column_start":5,"column_end":66}},{"value":"/ copy-and-paste and drag-and-drop mechanisms.  The offer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13444988,"byte_end":13445047,"line_start":1404,"line_end":1404,"column_start":5,"column_end":64}},{"value":"/ describes the different mime types that the data can be","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13445052,"byte_end":13445111,"line_start":1405,"line_end":1405,"column_start":5,"column_end":64}},{"value":"/ converted to and provides the mechanism for transferring the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13445116,"byte_end":13445180,"line_start":1406,"line_end":1406,"column_start":5,"column_end":69}},{"value":"/ data directly from the source client.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13445185,"byte_end":13445226,"line_start":1407,"line_end":1407,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1271},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13445788,"byte_end":13445799,"line_start":1425,"line_end":1425,"column_start":16,"column_end":27},"name":"WlDataOffer","qualname":"::generated::client::wl_data_offer::WlDataOffer","value":"WlDataOffer {  }","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2881},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450123,"byte_end":13450136,"line_start":1536,"line_end":1536,"column_start":9,"column_end":22},"name":"InvalidFinish","qualname":"::generated::client::wl_data_offer::Error::InvalidFinish","value":"Error::InvalidFinish","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":" finish request was called untimely\n","sig":null,"attributes":[{"value":"/ finish request was called untimely","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450076,"byte_end":13450114,"line_start":1535,"line_end":1535,"column_start":9,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2884},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450198,"byte_end":13450215,"line_start":1538,"line_end":1538,"column_start":9,"column_end":26},"name":"InvalidActionMask","qualname":"::generated::client::wl_data_offer::Error::InvalidActionMask","value":"Error::InvalidActionMask","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":" action mask contains invalid values\n","sig":null,"attributes":[{"value":"/ action mask contains invalid values","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450150,"byte_end":13450189,"line_start":1537,"line_end":1537,"column_start":9,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2887},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450278,"byte_end":13450291,"line_start":1540,"line_end":1540,"column_start":9,"column_end":22},"name":"InvalidAction","qualname":"::generated::client::wl_data_offer::Error::InvalidAction","value":"Error::InvalidAction","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":" action argument has an invalid value\n","sig":null,"attributes":[{"value":"/ action argument has an invalid value","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450229,"byte_end":13450269,"line_start":1539,"line_end":1539,"column_start":9,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2890},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450351,"byte_end":13450363,"line_start":1542,"line_end":1542,"column_start":9,"column_end":21},"name":"InvalidOffer","qualname":"::generated::client::wl_data_offer::Error::InvalidOffer","value":"Error::InvalidOffer","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":" offer doesn't accept this request\n","sig":null,"attributes":[{"value":"/ offer doesn't accept this request","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450305,"byte_end":13450342,"line_start":1541,"line_end":1541,"column_start":9,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":2880},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450060,"byte_end":13450065,"line_start":1534,"line_end":1534,"column_start":14,"column_end":19},"name":"Error","qualname":"::generated::client::wl_data_offer::Error","value":"pub enum Error {\n    InvalidFinish = ,\n    InvalidActionMask = ,\n    InvalidAction = ,\n    InvalidOffer = ,\n}","parent":null,"children":[{"krate":0,"index":2881},{"krate":0,"index":2884},{"krate":0,"index":2887},{"krate":0,"index":2890}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13449992,"byte_end":13450004,"line_start":1532,"line_end":1532,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450407,"byte_end":13450415,"line_start":1545,"line_end":1545,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450737,"byte_end":13450743,"line_start":1554,"line_end":1554,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1296},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450816,"byte_end":13450830,"line_start":1558,"line_end":1558,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_data_offer::Implementation","value":"Implementation { offer, source_actions, action }","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1298},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451117,"byte_end":13451122,"line_start":1565,"line_end":1565,"column_start":13,"column_end":18},"name":"offer","qualname":"::generated::client::wl_data_offer::Implementation::offer","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_offer::WlDataOffer, std::string::String)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" advertise offered mime type","sig":null,"attributes":[{"value":"/ advertise offered mime type","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450845,"byte_end":13450876,"line_start":1559,"line_end":1559,"column_start":9,"column_end":40}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450885,"byte_end":13450888,"line_start":1560,"line_end":1560,"column_start":9,"column_end":12}},{"value":"/ Sent immediately after creating the wl_data_offer object.  One","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450897,"byte_end":13450963,"line_start":1561,"line_end":1561,"column_start":9,"column_end":75}},{"value":"/ event per offered mime type.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450972,"byte_end":13451004,"line_start":1562,"line_end":1562,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451013,"byte_end":13451016,"line_start":1563,"line_end":1563,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_offer, mime_type","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451025,"byte_end":13451104,"line_start":1564,"line_end":1564,"column_start":9,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":1299},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451723,"byte_end":13451737,"line_start":1575,"line_end":1575,"column_start":13,"column_end":27},"name":"source_actions","qualname":"::generated::client::wl_data_offer::Implementation::source_actions","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_offer::WlDataOffer, u32)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" notify the source-side available actions","sig":null,"attributes":[{"value":"/ notify the source-side available actions","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451229,"byte_end":13451273,"line_start":1566,"line_end":1566,"column_start":9,"column_end":53}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451282,"byte_end":13451285,"line_start":1567,"line_end":1567,"column_start":9,"column_end":12}},{"value":"/ This event indicates the actions offered by the data source. It","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451294,"byte_end":13451361,"line_start":1568,"line_end":1568,"column_start":9,"column_end":76}},{"value":"/ will be sent right after wl_data_device.enter, or anytime the source","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451370,"byte_end":13451442,"line_start":1569,"line_end":1569,"column_start":9,"column_end":81}},{"value":"/ side changes its offered actions through wl_data_source.set_actions.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451451,"byte_end":13451523,"line_start":1570,"line_end":1570,"column_start":9,"column_end":81}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451532,"byte_end":13451535,"line_start":1571,"line_end":1571,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_offer, source_actions","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451544,"byte_end":13451628,"line_start":1572,"line_end":1572,"column_start":9,"column_end":93}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451637,"byte_end":13451640,"line_start":1573,"line_end":1573,"column_start":9,"column_end":12}},{"value":"/ This request only exists since version 3 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451649,"byte_end":13451710,"line_start":1574,"line_end":1574,"column_start":9,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1300},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13454202,"byte_end":13454208,"line_start":1617,"line_end":1617,"column_start":13,"column_end":19},"name":"action","qualname":"::generated::client::wl_data_offer::Implementation::action","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_offer::WlDataOffer, u32)","parent":{"krate":0,"index":1296},"children":[],"decl_id":null,"docs":" notify the selected action","sig":null,"attributes":[{"value":"/ notify the selected action","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451846,"byte_end":13451876,"line_start":1576,"line_end":1576,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451885,"byte_end":13451888,"line_start":1577,"line_end":1577,"column_start":9,"column_end":12}},{"value":"/ This event indicates the action selected by the compositor after","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451897,"byte_end":13451965,"line_start":1578,"line_end":1578,"column_start":9,"column_end":77}},{"value":"/ matching the source/destination side actions. Only one action (or","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13451974,"byte_end":13452043,"line_start":1579,"line_end":1579,"column_start":9,"column_end":78}},{"value":"/ none) will be offered here.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452052,"byte_end":13452083,"line_start":1580,"line_end":1580,"column_start":9,"column_end":40}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452092,"byte_end":13452096,"line_start":1581,"line_end":1581,"column_start":9,"column_end":13}},{"value":"/ This event can be emitted multiple times during the drag-and-drop","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452105,"byte_end":13452174,"line_start":1582,"line_end":1582,"column_start":9,"column_end":78}},{"value":"/ operation in response to destination side action changes through","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452183,"byte_end":13452251,"line_start":1583,"line_end":1583,"column_start":9,"column_end":77}},{"value":"/ wl_data_offer.set_actions.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452260,"byte_end":13452290,"line_start":1584,"line_end":1584,"column_start":9,"column_end":39}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452299,"byte_end":13452303,"line_start":1585,"line_end":1585,"column_start":9,"column_end":13}},{"value":"/ This event will no longer be emitted after wl_data_device.drop","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452312,"byte_end":13452378,"line_start":1586,"line_end":1586,"column_start":9,"column_end":75}},{"value":"/ happened on the drag-and-drop destination, the client must","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452387,"byte_end":13452449,"line_start":1587,"line_end":1587,"column_start":9,"column_end":71}},{"value":"/ honor the last action received, or the last preferred one set","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452458,"byte_end":13452523,"line_start":1588,"line_end":1588,"column_start":9,"column_end":74}},{"value":"/ through wl_data_offer.set_actions when handling an \"ask\" action.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452532,"byte_end":13452600,"line_start":1589,"line_end":1589,"column_start":9,"column_end":77}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452609,"byte_end":13452613,"line_start":1590,"line_end":1590,"column_start":9,"column_end":13}},{"value":"/ Compositors may also change the selected action on the fly, mainly","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452622,"byte_end":13452692,"line_start":1591,"line_end":1591,"column_start":9,"column_end":79}},{"value":"/ in response to keyboard modifier changes during the drag-and-drop","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452701,"byte_end":13452770,"line_start":1592,"line_end":1592,"column_start":9,"column_end":78}},{"value":"/ operation.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452779,"byte_end":13452793,"line_start":1593,"line_end":1593,"column_start":9,"column_end":23}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452802,"byte_end":13452806,"line_start":1594,"line_end":1594,"column_start":9,"column_end":13}},{"value":"/ The most recent action received is always the valid one. Prior to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452815,"byte_end":13452884,"line_start":1595,"line_end":1595,"column_start":9,"column_end":78}},{"value":"/ receiving wl_data_device.drop, the chosen action may change (e.g.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452893,"byte_end":13452962,"line_start":1596,"line_end":1596,"column_start":9,"column_end":78}},{"value":"/ due to keyboard modifiers being pressed). At the time of receiving","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13452971,"byte_end":13453041,"line_start":1597,"line_end":1597,"column_start":9,"column_end":79}},{"value":"/ wl_data_device.drop the drag-and-drop destination must honor the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453050,"byte_end":13453118,"line_start":1598,"line_end":1598,"column_start":9,"column_end":77}},{"value":"/ last action received.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453127,"byte_end":13453152,"line_start":1599,"line_end":1599,"column_start":9,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453161,"byte_end":13453165,"line_start":1600,"line_end":1600,"column_start":9,"column_end":13}},{"value":"/ Action changes may still happen after wl_data_device.drop,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453174,"byte_end":13453236,"line_start":1601,"line_end":1601,"column_start":9,"column_end":71}},{"value":"/ especially on \"ask\" actions, where the drag-and-drop destination","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453245,"byte_end":13453313,"line_start":1602,"line_end":1602,"column_start":9,"column_end":77}},{"value":"/ may choose another action afterwards. Action changes happening","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453322,"byte_end":13453388,"line_start":1603,"line_end":1603,"column_start":9,"column_end":75}},{"value":"/ at this stage are always the result of inter-client negotiation, the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453397,"byte_end":13453469,"line_start":1604,"line_end":1604,"column_start":9,"column_end":81}},{"value":"/ compositor shall no longer be able to induce a different action.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453478,"byte_end":13453546,"line_start":1605,"line_end":1605,"column_start":9,"column_end":77}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453555,"byte_end":13453559,"line_start":1606,"line_end":1606,"column_start":9,"column_end":13}},{"value":"/ Upon \"ask\" actions, it is expected that the drag-and-drop destination","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453568,"byte_end":13453641,"line_start":1607,"line_end":1607,"column_start":9,"column_end":82}},{"value":"/ may potentially choose a different action and/or mime type,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453650,"byte_end":13453713,"line_start":1608,"line_end":1608,"column_start":9,"column_end":72}},{"value":"/ based on wl_data_offer.source_actions and finally chosen by the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453722,"byte_end":13453789,"line_start":1609,"line_end":1609,"column_start":9,"column_end":76}},{"value":"/ user (e.g. popping up a menu with the available options). The","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453798,"byte_end":13453863,"line_start":1610,"line_end":1610,"column_start":9,"column_end":74}},{"value":"/ final wl_data_offer.set_actions and wl_data_offer.accept requests","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453872,"byte_end":13453941,"line_start":1611,"line_end":1611,"column_start":9,"column_end":78}},{"value":"/ must happen before the call to wl_data_offer.finish.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13453950,"byte_end":13454006,"line_start":1612,"line_end":1612,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13454015,"byte_end":13454018,"line_start":1613,"line_end":1613,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_offer, dnd_action","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13454027,"byte_end":13454107,"line_start":1614,"line_end":1614,"column_start":9,"column_end":89}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13454116,"byte_end":13454119,"line_start":1615,"line_end":1615,"column_start":9,"column_end":12}},{"value":"/ This request only exists since version 3 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13454128,"byte_end":13454189,"line_start":1616,"line_end":1616,"column_start":9,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13456016,"byte_end":13456022,"line_start":1659,"line_end":1659,"column_start":16,"column_end":22},"name":"accept","qualname":"<WlDataOffer>::accept","value":"pub fn accept(&Self, u32, Option<String>) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" accept one of the offered mime types","sig":null,"attributes":[{"value":"/ accept one of the offered mime types","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455071,"byte_end":13455111,"line_start":1643,"line_end":1643,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455120,"byte_end":13455123,"line_start":1644,"line_end":1644,"column_start":9,"column_end":12}},{"value":"/ Indicate that the client can accept the given mime type, or","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455132,"byte_end":13455195,"line_start":1645,"line_end":1645,"column_start":9,"column_end":72}},{"value":"/ NULL for not accepted.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455204,"byte_end":13455230,"line_start":1646,"line_end":1646,"column_start":9,"column_end":35}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455239,"byte_end":13455243,"line_start":1647,"line_end":1647,"column_start":9,"column_end":13}},{"value":"/ For objects of version 2 or older, this request is used by the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455252,"byte_end":13455318,"line_start":1648,"line_end":1648,"column_start":9,"column_end":75}},{"value":"/ client to give feedback whether the client can receive the given","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455327,"byte_end":13455395,"line_start":1649,"line_end":1649,"column_start":9,"column_end":77}},{"value":"/ mime type, or NULL if none is accepted; the feedback does not","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455404,"byte_end":13455469,"line_start":1650,"line_end":1650,"column_start":9,"column_end":74}},{"value":"/ determine whether the drag-and-drop operation succeeds or not.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455478,"byte_end":13455544,"line_start":1651,"line_end":1651,"column_start":9,"column_end":75}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455553,"byte_end":13455557,"line_start":1652,"line_end":1652,"column_start":9,"column_end":13}},{"value":"/ For objects of version 3 or newer, this request determines the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455566,"byte_end":13455632,"line_start":1653,"line_end":1653,"column_start":9,"column_end":75}},{"value":"/ final result of the drag-and-drop operation. If the end result","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455641,"byte_end":13455707,"line_start":1654,"line_end":1654,"column_start":9,"column_end":75}},{"value":"/ is that no mime types were accepted, the drag-and-drop operation","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455716,"byte_end":13455784,"line_start":1655,"line_end":1655,"column_start":9,"column_end":77}},{"value":"/ will be cancelled and the corresponding drag source will receive","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455793,"byte_end":13455861,"line_start":1656,"line_end":1656,"column_start":9,"column_end":77}},{"value":"/ wl_data_source.cancelled. Clients may still use this event in","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455870,"byte_end":13455935,"line_start":1657,"line_end":1657,"column_start":9,"column_end":74}},{"value":"/ conjunction with wl_data_source.action for feedback.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455944,"byte_end":13456000,"line_start":1658,"line_end":1658,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13457506,"byte_end":13457513,"line_start":1682,"line_end":1682,"column_start":16,"column_end":23},"name":"receive","qualname":"<WlDataOffer>::receive","value":"pub fn receive(&Self, String, ::std::os::unix::io::RawFd) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" request that the data is transferred","sig":null,"attributes":[{"value":"/ request that the data is transferred","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13456573,"byte_end":13456613,"line_start":1665,"line_end":1665,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13456622,"byte_end":13456625,"line_start":1666,"line_end":1666,"column_start":9,"column_end":12}},{"value":"/ To transfer the offered data, the client issues this request","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13456634,"byte_end":13456698,"line_start":1667,"line_end":1667,"column_start":9,"column_end":73}},{"value":"/ and indicates the mime type it wants to receive.  The transfer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13456707,"byte_end":13456773,"line_start":1668,"line_end":1668,"column_start":9,"column_end":75}},{"value":"/ happens through the passed file descriptor (typically created","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13456782,"byte_end":13456847,"line_start":1669,"line_end":1669,"column_start":9,"column_end":74}},{"value":"/ with the pipe system call).  The source client writes the data","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13456856,"byte_end":13456922,"line_start":1670,"line_end":1670,"column_start":9,"column_end":75}},{"value":"/ in the mime type representation requested and then closes the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13456931,"byte_end":13456996,"line_start":1671,"line_end":1671,"column_start":9,"column_end":74}},{"value":"/ file descriptor.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13457005,"byte_end":13457025,"line_start":1672,"line_end":1672,"column_start":9,"column_end":29}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13457034,"byte_end":13457038,"line_start":1673,"line_end":1673,"column_start":9,"column_end":13}},{"value":"/ The receiving client reads from the read end of the pipe until","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13457047,"byte_end":13457113,"line_start":1674,"line_end":1674,"column_start":9,"column_end":75}},{"value":"/ EOF and then closes its end, at which point the transfer is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13457122,"byte_end":13457185,"line_start":1675,"line_end":1675,"column_start":9,"column_end":72}},{"value":"/ complete.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13457194,"byte_end":13457207,"line_start":1676,"line_end":1676,"column_start":9,"column_end":22}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13457216,"byte_end":13457220,"line_start":1677,"line_end":1677,"column_start":9,"column_end":13}},{"value":"/ This request may happen multiple times for different mime types,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13457229,"byte_end":13457297,"line_start":1678,"line_end":1678,"column_start":9,"column_end":77}},{"value":"/ both before and after wl_data_device.drop. Drag-and-drop destination","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13457306,"byte_end":13457378,"line_start":1679,"line_end":1679,"column_start":9,"column_end":81}},{"value":"/ clients may preemptively fetch data or examine it more closely to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13457387,"byte_end":13457456,"line_start":1680,"line_end":1680,"column_start":9,"column_end":78}},{"value":"/ determine acceptance.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13457465,"byte_end":13457490,"line_start":1681,"line_end":1681,"column_start":9,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13458219,"byte_end":13458226,"line_start":1693,"line_end":1693,"column_start":16,"column_end":23},"name":"destroy","qualname":"<WlDataOffer>::destroy","value":"pub fn destroy(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" destroy data offer","sig":null,"attributes":[{"value":"/ destroy data offer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13458019,"byte_end":13458041,"line_start":1688,"line_end":1688,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13458050,"byte_end":13458053,"line_start":1689,"line_end":1689,"column_start":9,"column_end":12}},{"value":"/ Destroy the data offer.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13458062,"byte_end":13458089,"line_start":1690,"line_end":1690,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13458098,"byte_end":13458101,"line_start":1691,"line_end":1691,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13458110,"byte_end":13458203,"line_start":1692,"line_end":1692,"column_start":9,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459694,"byte_end":13459700,"line_start":1721,"line_end":1721,"column_start":16,"column_end":22},"name":"finish","qualname":"<WlDataOffer>::finish","value":"pub fn finish(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" the offer will no longer be used","sig":null,"attributes":[{"value":"/ the offer will no longer be used","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13458948,"byte_end":13458984,"line_start":1706,"line_end":1706,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13458993,"byte_end":13458996,"line_start":1707,"line_end":1707,"column_start":9,"column_end":12}},{"value":"/ Notifies the compositor that the drag destination successfully","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459005,"byte_end":13459071,"line_start":1708,"line_end":1708,"column_start":9,"column_end":75}},{"value":"/ finished the drag-and-drop operation.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459080,"byte_end":13459121,"line_start":1709,"line_end":1709,"column_start":9,"column_end":50}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459130,"byte_end":13459134,"line_start":1710,"line_end":1710,"column_start":9,"column_end":13}},{"value":"/ Upon receiving this request, the compositor will emit","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459143,"byte_end":13459200,"line_start":1711,"line_end":1711,"column_start":9,"column_end":66}},{"value":"/ wl_data_source.dnd_finished on the drag source client.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459209,"byte_end":13459267,"line_start":1712,"line_end":1712,"column_start":9,"column_end":67}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459276,"byte_end":13459280,"line_start":1713,"line_end":1713,"column_start":9,"column_end":13}},{"value":"/ It is a client error to perform other requests than","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459289,"byte_end":13459344,"line_start":1714,"line_end":1714,"column_start":9,"column_end":64}},{"value":"/ wl_data_offer.destroy after this one. It is also an error to perform","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459353,"byte_end":13459425,"line_start":1715,"line_end":1715,"column_start":9,"column_end":81}},{"value":"/ this request after a NULL mime type has been set in","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459434,"byte_end":13459489,"line_start":1716,"line_end":1716,"column_start":9,"column_end":64}},{"value":"/ wl_data_offer.accept or no action was received through","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459498,"byte_end":13459556,"line_start":1717,"line_end":1717,"column_start":9,"column_end":67}},{"value":"/ wl_data_offer.action.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459565,"byte_end":13459590,"line_start":1718,"line_end":1718,"column_start":9,"column_end":34}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459599,"byte_end":13459602,"line_start":1719,"line_end":1719,"column_start":9,"column_end":12}},{"value":"/ This request is only available since version 3 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459611,"byte_end":13459678,"line_start":1720,"line_end":1720,"column_start":9,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13462010,"byte_end":13462021,"line_start":1761,"line_end":1761,"column_start":16,"column_end":27},"name":"set_actions","qualname":"<WlDataOffer>::set_actions","value":"pub fn set_actions(&Self, u32, u32) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" set the available/preferred drag-and-drop actions","sig":null,"attributes":[{"value":"/ set the available/preferred drag-and-drop actions","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13459980,"byte_end":13460033,"line_start":1726,"line_end":1726,"column_start":9,"column_end":62}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460042,"byte_end":13460045,"line_start":1727,"line_end":1727,"column_start":9,"column_end":12}},{"value":"/ Sets the actions that the destination side client supports for","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460054,"byte_end":13460120,"line_start":1728,"line_end":1728,"column_start":9,"column_end":75}},{"value":"/ this operation. This request may trigger the emission of","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460129,"byte_end":13460189,"line_start":1729,"line_end":1729,"column_start":9,"column_end":69}},{"value":"/ wl_data_source.action and wl_data_offer.action events if the compositor","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460198,"byte_end":13460273,"line_start":1730,"line_end":1730,"column_start":9,"column_end":84}},{"value":"/ needs to change the selected action.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460282,"byte_end":13460322,"line_start":1731,"line_end":1731,"column_start":9,"column_end":49}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460331,"byte_end":13460335,"line_start":1732,"line_end":1732,"column_start":9,"column_end":13}},{"value":"/ This request can be called multiple times throughout the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460344,"byte_end":13460404,"line_start":1733,"line_end":1733,"column_start":9,"column_end":69}},{"value":"/ drag-and-drop operation, typically in response to wl_data_device.enter","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460413,"byte_end":13460487,"line_start":1734,"line_end":1734,"column_start":9,"column_end":83}},{"value":"/ or wl_data_device.motion events.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460496,"byte_end":13460532,"line_start":1735,"line_end":1735,"column_start":9,"column_end":45}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460541,"byte_end":13460545,"line_start":1736,"line_end":1736,"column_start":9,"column_end":13}},{"value":"/ This request determines the final result of the drag-and-drop","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460554,"byte_end":13460619,"line_start":1737,"line_end":1737,"column_start":9,"column_end":74}},{"value":"/ operation. If the end result is that no action is accepted,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460628,"byte_end":13460691,"line_start":1738,"line_end":1738,"column_start":9,"column_end":72}},{"value":"/ the drag source will receive wl_drag_source.cancelled.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460700,"byte_end":13460758,"line_start":1739,"line_end":1739,"column_start":9,"column_end":67}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460767,"byte_end":13460771,"line_start":1740,"line_end":1740,"column_start":9,"column_end":13}},{"value":"/ The dnd_actions argument must contain only values expressed in the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460780,"byte_end":13460850,"line_start":1741,"line_end":1741,"column_start":9,"column_end":79}},{"value":"/ wl_data_device_manager.dnd_actions enum, and the preferred_action","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460859,"byte_end":13460928,"line_start":1742,"line_end":1742,"column_start":9,"column_end":78}},{"value":"/ argument must only contain one of those values set, otherwise it","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13460937,"byte_end":13461005,"line_start":1743,"line_end":1743,"column_start":9,"column_end":77}},{"value":"/ will result in a protocol error.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461014,"byte_end":13461050,"line_start":1744,"line_end":1744,"column_start":9,"column_end":45}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461059,"byte_end":13461063,"line_start":1745,"line_end":1745,"column_start":9,"column_end":13}},{"value":"/ While managing an \"ask\" action, the destination drag-and-drop client","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461072,"byte_end":13461144,"line_start":1746,"line_end":1746,"column_start":9,"column_end":81}},{"value":"/ may perform further wl_data_offer.receive requests, and is expected","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461153,"byte_end":13461224,"line_start":1747,"line_end":1747,"column_start":9,"column_end":80}},{"value":"/ to perform one last wl_data_offer.set_actions request with a preferred","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461233,"byte_end":13461307,"line_start":1748,"line_end":1748,"column_start":9,"column_end":83}},{"value":"/ action other than \"ask\" (and optionally wl_data_offer.accept) before","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461316,"byte_end":13461388,"line_start":1749,"line_end":1749,"column_start":9,"column_end":81}},{"value":"/ requesting wl_data_offer.finish, in order to convey the action selected","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461397,"byte_end":13461472,"line_start":1750,"line_end":1750,"column_start":9,"column_end":84}},{"value":"/ by the user. If the preferred action is not in the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461481,"byte_end":13461535,"line_start":1751,"line_end":1751,"column_start":9,"column_end":63}},{"value":"/ wl_data_offer.source_actions mask, an error will be raised.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461544,"byte_end":13461607,"line_start":1752,"line_end":1752,"column_start":9,"column_end":72}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461616,"byte_end":13461620,"line_start":1753,"line_end":1753,"column_start":9,"column_end":13}},{"value":"/ If the \"ask\" action is dismissed (e.g. user cancellation), the client","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461629,"byte_end":13461702,"line_start":1754,"line_end":1754,"column_start":9,"column_end":82}},{"value":"/ is expected to perform wl_data_offer.destroy right away.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461711,"byte_end":13461771,"line_start":1755,"line_end":1755,"column_start":9,"column_end":69}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461780,"byte_end":13461784,"line_start":1756,"line_end":1756,"column_start":9,"column_end":13}},{"value":"/ This request can only be made on drag-and-drop offers, a protocol error","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461793,"byte_end":13461868,"line_start":1757,"line_end":1757,"column_start":9,"column_end":84}},{"value":"/ will be raised otherwise.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461877,"byte_end":13461906,"line_start":1758,"line_end":1758,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461915,"byte_end":13461918,"line_start":1759,"line_end":1759,"column_start":9,"column_end":12}},{"value":"/ This request is only available since version 3 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13461927,"byte_end":13461994,"line_start":1760,"line_end":1760,"column_start":9,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1323},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13462386,"byte_end":13462400,"line_start":1768,"line_end":1768,"column_start":9,"column_end":23},"name":"wl_data_source","qualname":"::generated::client::wl_data_source","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1394},{"krate":0,"index":2902},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2912},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":1398},{"krate":0,"index":1401},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420}],"decl_id":null,"docs":" offer to transfer data","sig":null,"attributes":[{"value":"/ offer to transfer data","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13462407,"byte_end":13462433,"line_start":1769,"line_end":1769,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13462438,"byte_end":13462441,"line_start":1770,"line_end":1770,"column_start":5,"column_end":8}},{"value":"/ The wl_data_source object is the source side of a wl_data_offer.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13462446,"byte_end":13462514,"line_start":1771,"line_end":1771,"column_start":5,"column_end":73}},{"value":"/ It is created by the source client in a data transfer and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13462519,"byte_end":13462580,"line_start":1772,"line_end":1772,"column_start":5,"column_end":66}},{"value":"/ provides a way to describe the offered data and a way to respond","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13462585,"byte_end":13462653,"line_start":1773,"line_end":1773,"column_start":5,"column_end":73}},{"value":"/ to requests to transfer the data.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13462658,"byte_end":13462695,"line_start":1774,"line_end":1774,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1376},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13463257,"byte_end":13463269,"line_start":1792,"line_end":1792,"column_start":16,"column_end":28},"name":"WlDataSource","qualname":"::generated::client::wl_data_source::WlDataSource","value":"WlDataSource {  }","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2903},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468156,"byte_end":13468173,"line_start":1913,"line_end":1913,"column_start":9,"column_end":26},"name":"InvalidActionMask","qualname":"::generated::client::wl_data_source::Error::InvalidActionMask","value":"Error::InvalidActionMask","parent":{"krate":0,"index":2902},"children":[],"decl_id":null,"docs":" action mask contains invalid values\n","sig":null,"attributes":[{"value":"/ action mask contains invalid values","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468108,"byte_end":13468147,"line_start":1912,"line_end":1912,"column_start":9,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2906},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468234,"byte_end":13468247,"line_start":1915,"line_end":1915,"column_start":9,"column_end":22},"name":"InvalidSource","qualname":"::generated::client::wl_data_source::Error::InvalidSource","value":"Error::InvalidSource","parent":{"krate":0,"index":2902},"children":[],"decl_id":null,"docs":" source doesn't accept this request\n","sig":null,"attributes":[{"value":"/ source doesn't accept this request","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468187,"byte_end":13468225,"line_start":1914,"line_end":1914,"column_start":9,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":2902},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468092,"byte_end":13468097,"line_start":1911,"line_end":1911,"column_start":14,"column_end":19},"name":"Error","qualname":"::generated::client::wl_data_source::Error","value":"pub enum Error { InvalidActionMask = , InvalidSource = , }","parent":null,"children":[{"krate":0,"index":2903},{"krate":0,"index":2906}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468024,"byte_end":13468036,"line_start":1909,"line_end":1909,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468291,"byte_end":13468299,"line_start":1918,"line_end":1918,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468524,"byte_end":13468530,"line_start":1925,"line_end":1925,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1401},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468603,"byte_end":13468617,"line_start":1929,"line_end":1929,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_data_source::Implementation","value":"Implementation { target, send, cancelled, dnd_drop_performed, dnd_finished, action }","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1403},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469016,"byte_end":13469022,"line_start":1938,"line_end":1938,"column_start":13,"column_end":19},"name":"target","qualname":"::generated::client::wl_data_source::Implementation::target","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_source::WlDataSource, std::option::Option<std::string::String>)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" a target accepts an offered mime type","sig":null,"attributes":[{"value":"/ a target accepts an offered mime type","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468632,"byte_end":13468673,"line_start":1930,"line_end":1930,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468682,"byte_end":13468685,"line_start":1931,"line_end":1931,"column_start":9,"column_end":12}},{"value":"/ Sent when a target accepts pointer_focus or motion events.  If","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468694,"byte_end":13468760,"line_start":1932,"line_end":1932,"column_start":9,"column_end":75}},{"value":"/ a target does not accept any of the offered types, type is NULL.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468769,"byte_end":13468837,"line_start":1933,"line_end":1933,"column_start":9,"column_end":77}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468846,"byte_end":13468850,"line_start":1934,"line_end":1934,"column_start":9,"column_end":13}},{"value":"/ Used for feedback during drag-and-drop.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468859,"byte_end":13468902,"line_start":1935,"line_end":1935,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468911,"byte_end":13468914,"line_start":1936,"line_end":1936,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_source, mime_type","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468923,"byte_end":13469003,"line_start":1937,"line_end":1937,"column_start":9,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":1404},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469446,"byte_end":13469450,"line_start":1946,"line_end":1946,"column_start":13,"column_end":17},"name":"send","qualname":"::generated::client::wl_data_source::Implementation::send","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_source::WlDataSource, std::string::String, i32)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" send the data","sig":null,"attributes":[{"value":"/ send the data","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469139,"byte_end":13469156,"line_start":1939,"line_end":1939,"column_start":9,"column_end":26}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469165,"byte_end":13469168,"line_start":1940,"line_end":1940,"column_start":9,"column_end":12}},{"value":"/ Request for data from the client.  Send the data as the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469177,"byte_end":13469236,"line_start":1941,"line_end":1941,"column_start":9,"column_end":68}},{"value":"/ specified mime type over the passed file descriptor, then","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469245,"byte_end":13469306,"line_start":1942,"line_end":1942,"column_start":9,"column_end":70}},{"value":"/ close it.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469315,"byte_end":13469328,"line_start":1943,"line_end":1943,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469337,"byte_end":13469340,"line_start":1944,"line_end":1944,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_source, mime_type, fd","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469349,"byte_end":13469433,"line_start":1945,"line_end":1945,"column_start":9,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":1405},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470835,"byte_end":13470844,"line_start":1971,"line_end":1971,"column_start":13,"column_end":22},"name":"cancelled","qualname":"::generated::client::wl_data_source::Implementation::cancelled","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_source::WlDataSource)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" selection was cancelled","sig":null,"attributes":[{"value":"/ selection was cancelled","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469591,"byte_end":13469618,"line_start":1947,"line_end":1947,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469627,"byte_end":13469630,"line_start":1948,"line_end":1948,"column_start":9,"column_end":12}},{"value":"/ This data source is no longer valid. There are several reasons why","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469639,"byte_end":13469709,"line_start":1949,"line_end":1949,"column_start":9,"column_end":79}},{"value":"/ this could happen:","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469718,"byte_end":13469740,"line_start":1950,"line_end":1950,"column_start":9,"column_end":31}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469749,"byte_end":13469753,"line_start":1951,"line_end":1951,"column_start":9,"column_end":13}},{"value":"/ - The data source has been replaced by another data source.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469762,"byte_end":13469825,"line_start":1952,"line_end":1952,"column_start":9,"column_end":72}},{"value":"/ - The drag-and-drop operation was performed, but the drop destination","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469834,"byte_end":13469907,"line_start":1953,"line_end":1953,"column_start":9,"column_end":82}},{"value":"/ did not accept any of the mime types offered through","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469916,"byte_end":13469972,"line_start":1954,"line_end":1954,"column_start":9,"column_end":65}},{"value":"/ wl_data_source.target.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13469981,"byte_end":13470007,"line_start":1955,"line_end":1955,"column_start":9,"column_end":35}},{"value":"/ - The drag-and-drop operation was performed, but the drop destination","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470016,"byte_end":13470089,"line_start":1956,"line_end":1956,"column_start":9,"column_end":82}},{"value":"/ did not select any of the actions present in the mask offered through","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470098,"byte_end":13470171,"line_start":1957,"line_end":1957,"column_start":9,"column_end":82}},{"value":"/ wl_data_source.action.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470180,"byte_end":13470206,"line_start":1958,"line_end":1958,"column_start":9,"column_end":35}},{"value":"/ - The drag-and-drop operation was performed but didn't happen over a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470215,"byte_end":13470287,"line_start":1959,"line_end":1959,"column_start":9,"column_end":81}},{"value":"/ surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470296,"byte_end":13470308,"line_start":1960,"line_end":1960,"column_start":9,"column_end":21}},{"value":"/ - The compositor cancelled the drag-and-drop operation (e.g. compositor","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470317,"byte_end":13470392,"line_start":1961,"line_end":1961,"column_start":9,"column_end":84}},{"value":"/ dependent timeouts to avoid stale drag-and-drop transfers).","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470401,"byte_end":13470464,"line_start":1962,"line_end":1962,"column_start":9,"column_end":72}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470473,"byte_end":13470477,"line_start":1963,"line_end":1963,"column_start":9,"column_end":13}},{"value":"/ The client should clean up and destroy this data source.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470486,"byte_end":13470546,"line_start":1964,"line_end":1964,"column_start":9,"column_end":69}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470555,"byte_end":13470559,"line_start":1965,"line_end":1965,"column_start":9,"column_end":13}},{"value":"/ For objects of version 2 or older, wl_data_source.cancelled will","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470568,"byte_end":13470636,"line_start":1966,"line_end":1966,"column_start":9,"column_end":77}},{"value":"/ only be emitted if the data source was replaced by another data","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470645,"byte_end":13470712,"line_start":1967,"line_end":1967,"column_start":9,"column_end":76}},{"value":"/ source.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470721,"byte_end":13470732,"line_start":1968,"line_end":1968,"column_start":9,"column_end":20}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470741,"byte_end":13470744,"line_start":1969,"line_end":1969,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_source","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470753,"byte_end":13470822,"line_start":1970,"line_end":1970,"column_start":9,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1406},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471711,"byte_end":13471729,"line_start":1987,"line_end":1987,"column_start":13,"column_end":31},"name":"dnd_drop_performed","qualname":"::generated::client::wl_data_source::Implementation::dnd_drop_performed","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_source::WlDataSource)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" the drag-and-drop operation physically finished","sig":null,"attributes":[{"value":"/ the drag-and-drop operation physically finished","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470934,"byte_end":13470985,"line_start":1972,"line_end":1972,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13470994,"byte_end":13470997,"line_start":1973,"line_end":1973,"column_start":9,"column_end":12}},{"value":"/ The user performed the drop action. This event does not indicate","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471006,"byte_end":13471074,"line_start":1974,"line_end":1974,"column_start":9,"column_end":77}},{"value":"/ acceptance, wl_data_source.cancelled may still be emitted afterwards","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471083,"byte_end":13471155,"line_start":1975,"line_end":1975,"column_start":9,"column_end":81}},{"value":"/ if the drop destination does not accept any mime type.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471164,"byte_end":13471222,"line_start":1976,"line_end":1976,"column_start":9,"column_end":67}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471231,"byte_end":13471235,"line_start":1977,"line_end":1977,"column_start":9,"column_end":13}},{"value":"/ However, this event might however not be received if the compositor","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471244,"byte_end":13471315,"line_start":1978,"line_end":1978,"column_start":9,"column_end":80}},{"value":"/ cancelled the drag-and-drop operation before this event could happen.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471324,"byte_end":13471397,"line_start":1979,"line_end":1979,"column_start":9,"column_end":82}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471406,"byte_end":13471410,"line_start":1980,"line_end":1980,"column_start":9,"column_end":13}},{"value":"/ Note that the data_source may still be used in the future and should","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471419,"byte_end":13471491,"line_start":1981,"line_end":1981,"column_start":9,"column_end":81}},{"value":"/ not be destroyed here.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471500,"byte_end":13471526,"line_start":1982,"line_end":1982,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471535,"byte_end":13471538,"line_start":1983,"line_end":1983,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_source","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471547,"byte_end":13471616,"line_start":1984,"line_end":1984,"column_start":9,"column_end":78}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471625,"byte_end":13471628,"line_start":1985,"line_end":1985,"column_start":9,"column_end":12}},{"value":"/ This request only exists since version 3 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471637,"byte_end":13471698,"line_start":1986,"line_end":1986,"column_start":9,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1407},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472386,"byte_end":13472398,"line_start":2000,"line_end":2000,"column_start":13,"column_end":25},"name":"dnd_finished","qualname":"::generated::client::wl_data_source::Implementation::dnd_finished","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_source::WlDataSource)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" the drag-and-drop operation concluded","sig":null,"attributes":[{"value":"/ the drag-and-drop operation concluded","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471819,"byte_end":13471860,"line_start":1988,"line_end":1988,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471869,"byte_end":13471872,"line_start":1989,"line_end":1989,"column_start":9,"column_end":12}},{"value":"/ The drop destination finished interoperating with this data","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471881,"byte_end":13471944,"line_start":1990,"line_end":1990,"column_start":9,"column_end":72}},{"value":"/ source, so the client is now free to destroy this data source and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13471953,"byte_end":13472022,"line_start":1991,"line_end":1991,"column_start":9,"column_end":78}},{"value":"/ free all associated data.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472031,"byte_end":13472060,"line_start":1992,"line_end":1992,"column_start":9,"column_end":38}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472069,"byte_end":13472073,"line_start":1993,"line_end":1993,"column_start":9,"column_end":13}},{"value":"/ If the action used to perform the operation was \"move\", the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472082,"byte_end":13472145,"line_start":1994,"line_end":1994,"column_start":9,"column_end":72}},{"value":"/ source can now delete the transferred data.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472154,"byte_end":13472201,"line_start":1995,"line_end":1995,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472210,"byte_end":13472213,"line_start":1996,"line_end":1996,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_source","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472222,"byte_end":13472291,"line_start":1997,"line_end":1997,"column_start":9,"column_end":78}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472300,"byte_end":13472303,"line_start":1998,"line_end":1998,"column_start":9,"column_end":12}},{"value":"/ This request only exists since version 3 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472312,"byte_end":13472373,"line_start":1999,"line_end":1999,"column_start":9,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1408},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13474142,"byte_end":13474148,"line_start":2032,"line_end":2032,"column_start":13,"column_end":19},"name":"action","qualname":"::generated::client::wl_data_source::Implementation::action","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_source::WlDataSource, u32)","parent":{"krate":0,"index":1401},"children":[],"decl_id":null,"docs":" notify the selected action","sig":null,"attributes":[{"value":"/ notify the selected action","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472488,"byte_end":13472518,"line_start":2001,"line_end":2001,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472527,"byte_end":13472530,"line_start":2002,"line_end":2002,"column_start":9,"column_end":12}},{"value":"/ This event indicates the action selected by the compositor after","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472539,"byte_end":13472607,"line_start":2003,"line_end":2003,"column_start":9,"column_end":77}},{"value":"/ matching the source/destination side actions. Only one action (or","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472616,"byte_end":13472685,"line_start":2004,"line_end":2004,"column_start":9,"column_end":78}},{"value":"/ none) will be offered here.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472694,"byte_end":13472725,"line_start":2005,"line_end":2005,"column_start":9,"column_end":40}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472734,"byte_end":13472738,"line_start":2006,"line_end":2006,"column_start":9,"column_end":13}},{"value":"/ This event can be emitted multiple times during the drag-and-drop","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472747,"byte_end":13472816,"line_start":2007,"line_end":2007,"column_start":9,"column_end":78}},{"value":"/ operation, mainly in response to destination side changes through","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472825,"byte_end":13472894,"line_start":2008,"line_end":2008,"column_start":9,"column_end":78}},{"value":"/ wl_data_offer.set_actions, and as the data device enters/leaves","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472903,"byte_end":13472970,"line_start":2009,"line_end":2009,"column_start":9,"column_end":76}},{"value":"/ surfaces.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13472979,"byte_end":13472992,"line_start":2010,"line_end":2010,"column_start":9,"column_end":22}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473001,"byte_end":13473005,"line_start":2011,"line_end":2011,"column_start":9,"column_end":13}},{"value":"/ It is only possible to receive this event after","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473014,"byte_end":13473065,"line_start":2012,"line_end":2012,"column_start":9,"column_end":60}},{"value":"/ wl_data_source.dnd_drop_performed if the drag-and-drop operation","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473074,"byte_end":13473142,"line_start":2013,"line_end":2013,"column_start":9,"column_end":77}},{"value":"/ ended in an \"ask\" action, in which case the final wl_data_source.action","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473151,"byte_end":13473226,"line_start":2014,"line_end":2014,"column_start":9,"column_end":84}},{"value":"/ event will happen immediately before wl_data_source.dnd_finished.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473235,"byte_end":13473304,"line_start":2015,"line_end":2015,"column_start":9,"column_end":78}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473313,"byte_end":13473317,"line_start":2016,"line_end":2016,"column_start":9,"column_end":13}},{"value":"/ Compositors may also change the selected action on the fly, mainly","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473326,"byte_end":13473396,"line_start":2017,"line_end":2017,"column_start":9,"column_end":79}},{"value":"/ in response to keyboard modifier changes during the drag-and-drop","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473405,"byte_end":13473474,"line_start":2018,"line_end":2018,"column_start":9,"column_end":78}},{"value":"/ operation.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473483,"byte_end":13473497,"line_start":2019,"line_end":2019,"column_start":9,"column_end":23}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473506,"byte_end":13473510,"line_start":2020,"line_end":2020,"column_start":9,"column_end":13}},{"value":"/ The most recent action received is always the valid one. The chosen","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473519,"byte_end":13473590,"line_start":2021,"line_end":2021,"column_start":9,"column_end":80}},{"value":"/ action may change alongside negotiation (e.g. an \"ask\" action can turn","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473599,"byte_end":13473673,"line_start":2022,"line_end":2022,"column_start":9,"column_end":83}},{"value":"/ into a \"move\" operation), so the effects of the final action must","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473682,"byte_end":13473751,"line_start":2023,"line_end":2023,"column_start":9,"column_end":78}},{"value":"/ always be applied in wl_data_offer.dnd_finished.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473760,"byte_end":13473812,"line_start":2024,"line_end":2024,"column_start":9,"column_end":61}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473821,"byte_end":13473825,"line_start":2025,"line_end":2025,"column_start":9,"column_end":13}},{"value":"/ Clients can trigger cursor surface changes from this point, so","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473834,"byte_end":13473900,"line_start":2026,"line_end":2026,"column_start":9,"column_end":75}},{"value":"/ they reflect the current action.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473909,"byte_end":13473945,"line_start":2027,"line_end":2027,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473954,"byte_end":13473957,"line_start":2028,"line_end":2028,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_source, dnd_action","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13473966,"byte_end":13474047,"line_start":2029,"line_end":2029,"column_start":9,"column_end":90}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13474056,"byte_end":13474059,"line_start":2030,"line_end":2030,"column_start":9,"column_end":12}},{"value":"/ This request only exists since version 3 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13474068,"byte_end":13474129,"line_start":2031,"line_end":2031,"column_start":9,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13475370,"byte_end":13475375,"line_start":2064,"line_end":2064,"column_start":16,"column_end":21},"name":"offer","qualname":"<WlDataSource>::offer","value":"pub fn offer(&Self, String) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" add an offered mime type","sig":null,"attributes":[{"value":"/ add an offered mime type","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13475146,"byte_end":13475174,"line_start":2059,"line_end":2059,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13475183,"byte_end":13475186,"line_start":2060,"line_end":2060,"column_start":9,"column_end":12}},{"value":"/ This request adds a mime type to the set of mime types","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13475195,"byte_end":13475253,"line_start":2061,"line_end":2061,"column_start":9,"column_end":67}},{"value":"/ advertised to targets.  Can be called several times to offer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13475262,"byte_end":13475326,"line_start":2062,"line_end":2062,"column_start":9,"column_end":73}},{"value":"/ multiple types.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13475335,"byte_end":13475354,"line_start":2063,"line_end":2063,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13476049,"byte_end":13476056,"line_start":2075,"line_end":2075,"column_start":16,"column_end":23},"name":"destroy","qualname":"<WlDataSource>::destroy","value":"pub fn destroy(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" destroy the data source","sig":null,"attributes":[{"value":"/ destroy the data source","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13475843,"byte_end":13475870,"line_start":2070,"line_end":2070,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13475879,"byte_end":13475882,"line_start":2071,"line_end":2071,"column_start":9,"column_end":12}},{"value":"/ Destroy the data source.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13475891,"byte_end":13475919,"line_start":2072,"line_end":2072,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13475928,"byte_end":13475931,"line_start":2073,"line_end":2073,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13475940,"byte_end":13476033,"line_start":2074,"line_end":2074,"column_start":9,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13477695,"byte_end":13477706,"line_start":2105,"line_end":2105,"column_start":16,"column_end":27},"name":"set_actions","qualname":"<WlDataSource>::set_actions","value":"pub fn set_actions(&Self, u32) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" set the available drag-and-drop actions","sig":null,"attributes":[{"value":"/ set the available drag-and-drop actions","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13476779,"byte_end":13476822,"line_start":2088,"line_end":2088,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13476831,"byte_end":13476834,"line_start":2089,"line_end":2089,"column_start":9,"column_end":12}},{"value":"/ Sets the actions that the source side client supports for this","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13476843,"byte_end":13476909,"line_start":2090,"line_end":2090,"column_start":9,"column_end":75}},{"value":"/ operation. This request may trigger wl_data_source.action and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13476918,"byte_end":13476983,"line_start":2091,"line_end":2091,"column_start":9,"column_end":74}},{"value":"/ wl_data_offer.action events if the compositor needs to change the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13476992,"byte_end":13477061,"line_start":2092,"line_end":2092,"column_start":9,"column_end":78}},{"value":"/ selected action.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13477070,"byte_end":13477090,"line_start":2093,"line_end":2093,"column_start":9,"column_end":29}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13477099,"byte_end":13477103,"line_start":2094,"line_end":2094,"column_start":9,"column_end":13}},{"value":"/ The dnd_actions argument must contain only values expressed in the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13477112,"byte_end":13477182,"line_start":2095,"line_end":2095,"column_start":9,"column_end":79}},{"value":"/ wl_data_device_manager.dnd_actions enum, otherwise it will result","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13477191,"byte_end":13477260,"line_start":2096,"line_end":2096,"column_start":9,"column_end":78}},{"value":"/ in a protocol error.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13477269,"byte_end":13477293,"line_start":2097,"line_end":2097,"column_start":9,"column_end":33}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13477302,"byte_end":13477306,"line_start":2098,"line_end":2098,"column_start":9,"column_end":13}},{"value":"/ This request must be made once only, and can only be made on sources","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13477315,"byte_end":13477387,"line_start":2099,"line_end":2099,"column_start":9,"column_end":81}},{"value":"/ used in drag-and-drop, so it must be performed before","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13477396,"byte_end":13477453,"line_start":2100,"line_end":2100,"column_start":9,"column_end":66}},{"value":"/ wl_data_device.start_drag. Attempting to use the source other than","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13477462,"byte_end":13477532,"line_start":2101,"line_end":2101,"column_start":9,"column_end":79}},{"value":"/ for drag-and-drop will raise a protocol error.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13477541,"byte_end":13477591,"line_start":2102,"line_end":2102,"column_start":9,"column_end":59}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13477600,"byte_end":13477603,"line_start":2103,"line_end":2103,"column_start":9,"column_end":12}},{"value":"/ This request is only available since version 3 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13477612,"byte_end":13477679,"line_start":2104,"line_end":2104,"column_start":9,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1425},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13478031,"byte_end":13478045,"line_start":2112,"line_end":2112,"column_start":9,"column_end":23},"name":"wl_data_device","qualname":"::generated::client::wl_data_device","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1439},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1460},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1470},{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1496},{"krate":0,"index":2917},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2924},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522}],"decl_id":null,"docs":" data transfer device","sig":null,"attributes":[{"value":"/ data transfer device","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13478052,"byte_end":13478076,"line_start":2113,"line_end":2113,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13478081,"byte_end":13478084,"line_start":2114,"line_end":2114,"column_start":5,"column_end":8}},{"value":"/ There is one wl_data_device per seat which can be obtained","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13478089,"byte_end":13478151,"line_start":2115,"line_end":2115,"column_start":5,"column_end":67}},{"value":"/ from the global wl_data_device_manager singleton.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13478156,"byte_end":13478209,"line_start":2116,"line_end":2116,"column_start":5,"column_end":58}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13478214,"byte_end":13478218,"line_start":2117,"line_end":2117,"column_start":5,"column_end":9}},{"value":"/ A wl_data_device provides access to inter-client data transfer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13478223,"byte_end":13478289,"line_start":2118,"line_end":2118,"column_start":5,"column_end":71}},{"value":"/ mechanisms such as copy-and-paste and drag-and-drop.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13478294,"byte_end":13478350,"line_start":2119,"line_end":2119,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1478},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13478912,"byte_end":13478924,"line_start":2137,"line_end":2137,"column_start":16,"column_end":28},"name":"WlDataDevice","qualname":"::generated::client::wl_data_device::WlDataDevice","value":"WlDataDevice {  }","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":1480}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2918},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484368,"byte_end":13484372,"line_start":2264,"line_end":2264,"column_start":9,"column_end":13},"name":"Role","qualname":"::generated::client::wl_data_device::Error::Role","value":"Error::Role","parent":{"krate":0,"index":2917},"children":[],"decl_id":null,"docs":" given wl_surface has another role\n","sig":null,"attributes":[{"value":"/ given wl_surface has another role","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484322,"byte_end":13484359,"line_start":2263,"line_end":2263,"column_start":9,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":2917},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484306,"byte_end":13484311,"line_start":2262,"line_end":2262,"column_start":14,"column_end":19},"name":"Error","qualname":"::generated::client::wl_data_device::Error","value":"pub enum Error { Role = , }","parent":null,"children":[{"krate":0,"index":2918}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484238,"byte_end":13484250,"line_start":2260,"line_end":2260,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484416,"byte_end":13484424,"line_start":2267,"line_end":2267,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484587,"byte_end":13484593,"line_start":2273,"line_end":2273,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1503},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484666,"byte_end":13484680,"line_start":2277,"line_end":2277,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_data_device::Implementation","value":"Implementation { data_offer, enter, leave, motion, drop, selection }","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1505},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485293,"byte_end":13485303,"line_start":2289,"line_end":2289,"column_start":13,"column_end":23},"name":"data_offer","qualname":"::generated::client::wl_data_device::Implementation::data_offer","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_device::WlDataDevice, generated::client::wl_data_offer::WlDataOffer)","parent":{"krate":0,"index":1503},"children":[],"decl_id":null,"docs":" introduce a new wl_data_offer","sig":null,"attributes":[{"value":"/ introduce a new wl_data_offer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484695,"byte_end":13484728,"line_start":2278,"line_end":2278,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484737,"byte_end":13484740,"line_start":2279,"line_end":2279,"column_start":9,"column_end":12}},{"value":"/ The data_offer event introduces a new wl_data_offer object,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484749,"byte_end":13484812,"line_start":2280,"line_end":2280,"column_start":9,"column_end":72}},{"value":"/ which will subsequently be used in either the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484821,"byte_end":13484870,"line_start":2281,"line_end":2281,"column_start":9,"column_end":58}},{"value":"/ data_device.enter event (for drag-and-drop) or the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484879,"byte_end":13484933,"line_start":2282,"line_end":2282,"column_start":9,"column_end":63}},{"value":"/ data_device.selection event (for selections).  Immediately","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484942,"byte_end":13485004,"line_start":2283,"line_end":2283,"column_start":9,"column_end":71}},{"value":"/ following the data_device_data_offer event, the new data_offer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485013,"byte_end":13485079,"line_start":2284,"line_end":2284,"column_start":9,"column_end":75}},{"value":"/ object will send out data_offer.offer events to describe the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485088,"byte_end":13485152,"line_start":2285,"line_end":2285,"column_start":9,"column_end":73}},{"value":"/ mime types it offers.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485161,"byte_end":13485186,"line_start":2286,"line_end":2286,"column_start":9,"column_end":34}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485195,"byte_end":13485198,"line_start":2287,"line_end":2287,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_device, id","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485207,"byte_end":13485280,"line_start":2288,"line_end":2288,"column_start":9,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1506},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485861,"byte_end":13485866,"line_start":2298,"line_end":2298,"column_start":13,"column_end":18},"name":"enter","qualname":"::generated::client::wl_data_device::Implementation::enter","value":"for<'r, 's, 't0, 't1, 't2> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_device::WlDataDevice, u32, &'t1 generated::client::wl_surface::WlSurface, f64, f64, std::option::Option<&'t2 generated::client::wl_data_offer::WlDataOffer>)","parent":{"krate":0,"index":1503},"children":[],"decl_id":null,"docs":" initiate drag-and-drop session","sig":null,"attributes":[{"value":"/ initiate drag-and-drop session","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485432,"byte_end":13485466,"line_start":2290,"line_end":2290,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485475,"byte_end":13485478,"line_start":2291,"line_end":2291,"column_start":9,"column_end":12}},{"value":"/ This event is sent when an active drag-and-drop pointer enters","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485487,"byte_end":13485553,"line_start":2292,"line_end":2292,"column_start":9,"column_end":75}},{"value":"/ a surface owned by the client.  The position of the pointer at","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485562,"byte_end":13485628,"line_start":2293,"line_end":2293,"column_start":9,"column_end":75}},{"value":"/ enter time is provided by the x and y arguments, in surface-local","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485637,"byte_end":13485706,"line_start":2294,"line_end":2294,"column_start":9,"column_end":78}},{"value":"/ coordinates.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485715,"byte_end":13485731,"line_start":2295,"line_end":2295,"column_start":9,"column_end":25}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485740,"byte_end":13485743,"line_start":2296,"line_end":2296,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_device, serial, surface, x, y, id","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13485752,"byte_end":13485848,"line_start":2297,"line_end":2297,"column_start":9,"column_end":105}}]},{"kind":"Field","id":{"krate":0,"index":1507},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486427,"byte_end":13486432,"line_start":2306,"line_end":2306,"column_start":13,"column_end":18},"name":"leave","qualname":"::generated::client::wl_data_device::Implementation::leave","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_device::WlDataDevice)","parent":{"krate":0,"index":1503},"children":[],"decl_id":null,"docs":" end drag-and-drop session","sig":null,"attributes":[{"value":"/ end drag-and-drop session","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486073,"byte_end":13486102,"line_start":2299,"line_end":2299,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486111,"byte_end":13486114,"line_start":2300,"line_end":2300,"column_start":9,"column_end":12}},{"value":"/ This event is sent when the drag-and-drop pointer leaves the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486123,"byte_end":13486187,"line_start":2301,"line_end":2301,"column_start":9,"column_end":73}},{"value":"/ surface and the session ends.  The client must destroy the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486196,"byte_end":13486258,"line_start":2302,"line_end":2302,"column_start":9,"column_end":71}},{"value":"/ wl_data_offer introduced at enter time at this point.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486267,"byte_end":13486324,"line_start":2303,"line_end":2303,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486333,"byte_end":13486336,"line_start":2304,"line_end":2304,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_device","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486345,"byte_end":13486414,"line_start":2305,"line_end":2305,"column_start":9,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1508},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486923,"byte_end":13486929,"line_start":2315,"line_end":2315,"column_start":13,"column_end":19},"name":"motion","qualname":"::generated::client::wl_data_device::Implementation::motion","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_device::WlDataDevice, u32, f64, f64)","parent":{"krate":0,"index":1503},"children":[],"decl_id":null,"docs":" drag-and-drop session motion","sig":null,"attributes":[{"value":"/ drag-and-drop session motion","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486522,"byte_end":13486554,"line_start":2307,"line_end":2307,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486563,"byte_end":13486566,"line_start":2308,"line_end":2308,"column_start":9,"column_end":12}},{"value":"/ This event is sent when the drag-and-drop pointer moves within","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486575,"byte_end":13486641,"line_start":2309,"line_end":2309,"column_start":9,"column_end":75}},{"value":"/ the currently focused surface. The new position of the pointer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486650,"byte_end":13486716,"line_start":2310,"line_end":2310,"column_start":9,"column_end":75}},{"value":"/ is provided by the x and y arguments, in surface-local","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486725,"byte_end":13486783,"line_start":2311,"line_end":2311,"column_start":9,"column_end":67}},{"value":"/ coordinates.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486792,"byte_end":13486808,"line_start":2312,"line_end":2312,"column_start":9,"column_end":25}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486817,"byte_end":13486820,"line_start":2313,"line_end":2313,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_device, time, x, y","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13486829,"byte_end":13486910,"line_start":2314,"line_end":2314,"column_start":9,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":1509},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487979,"byte_end":13487983,"line_start":2333,"line_end":2333,"column_start":13,"column_end":17},"name":"drop","qualname":"::generated::client::wl_data_device::Implementation::drop","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_device::WlDataDevice)","parent":{"krate":0,"index":1503},"children":[],"decl_id":null,"docs":" end drag-and-drop session successfully","sig":null,"attributes":[{"value":"/ end drag-and-drop session successfully","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487046,"byte_end":13487088,"line_start":2316,"line_end":2316,"column_start":9,"column_end":51}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487097,"byte_end":13487100,"line_start":2317,"line_end":2317,"column_start":9,"column_end":12}},{"value":"/ The event is sent when a drag-and-drop operation is ended","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487109,"byte_end":13487170,"line_start":2318,"line_end":2318,"column_start":9,"column_end":70}},{"value":"/ because the implicit grab is removed.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487179,"byte_end":13487220,"line_start":2319,"line_end":2319,"column_start":9,"column_end":50}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487229,"byte_end":13487233,"line_start":2320,"line_end":2320,"column_start":9,"column_end":13}},{"value":"/ The drag-and-drop destination is expected to honor the last action","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487242,"byte_end":13487312,"line_start":2321,"line_end":2321,"column_start":9,"column_end":79}},{"value":"/ received through wl_data_offer.action, if the resulting action is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487321,"byte_end":13487390,"line_start":2322,"line_end":2322,"column_start":9,"column_end":78}},{"value":"/ \"copy\" or \"move\", the destination can still perform","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487399,"byte_end":13487454,"line_start":2323,"line_end":2323,"column_start":9,"column_end":64}},{"value":"/ wl_data_offer.receive requests, and is expected to end all","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487463,"byte_end":13487525,"line_start":2324,"line_end":2324,"column_start":9,"column_end":71}},{"value":"/ transfers with a wl_data_offer.finish request.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487534,"byte_end":13487584,"line_start":2325,"line_end":2325,"column_start":9,"column_end":59}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487593,"byte_end":13487597,"line_start":2326,"line_end":2326,"column_start":9,"column_end":13}},{"value":"/ If the resulting action is \"ask\", the action will not be considered","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487606,"byte_end":13487677,"line_start":2327,"line_end":2327,"column_start":9,"column_end":80}},{"value":"/ final. The drag-and-drop destination is expected to perform one last","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487686,"byte_end":13487758,"line_start":2328,"line_end":2328,"column_start":9,"column_end":81}},{"value":"/ wl_data_offer.set_actions request, or wl_data_offer.destroy in order","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487767,"byte_end":13487839,"line_start":2329,"line_end":2329,"column_start":9,"column_end":81}},{"value":"/ to cancel the operation.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487848,"byte_end":13487876,"line_start":2330,"line_end":2330,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487885,"byte_end":13487888,"line_start":2331,"line_end":2331,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_device","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13487897,"byte_end":13487966,"line_start":2332,"line_end":2332,"column_start":9,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1510},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488960,"byte_end":13488969,"line_start":2349,"line_end":2349,"column_start":13,"column_end":22},"name":"selection","qualname":"::generated::client::wl_data_device::Implementation::selection","value":"for<'r, 's, 't0, 't1> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_data_device::WlDataDevice, std::option::Option<&'t1 generated::client::wl_data_offer::WlDataOffer>)","parent":{"krate":0,"index":1503},"children":[],"decl_id":null,"docs":" advertise new selection","sig":null,"attributes":[{"value":"/ advertise new selection","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488073,"byte_end":13488100,"line_start":2334,"line_end":2334,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488109,"byte_end":13488112,"line_start":2335,"line_end":2335,"column_start":9,"column_end":12}},{"value":"/ The selection event is sent out to notify the client of a new","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488121,"byte_end":13488186,"line_start":2336,"line_end":2336,"column_start":9,"column_end":74}},{"value":"/ wl_data_offer for the selection for this device.  The","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488195,"byte_end":13488252,"line_start":2337,"line_end":2337,"column_start":9,"column_end":66}},{"value":"/ data_device.data_offer and the data_offer.offer events are","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488261,"byte_end":13488323,"line_start":2338,"line_end":2338,"column_start":9,"column_end":71}},{"value":"/ sent out immediately before this event to introduce the data","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488332,"byte_end":13488396,"line_start":2339,"line_end":2339,"column_start":9,"column_end":73}},{"value":"/ offer object.  The selection event is sent to a client","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488405,"byte_end":13488463,"line_start":2340,"line_end":2340,"column_start":9,"column_end":67}},{"value":"/ immediately before receiving keyboard focus and when a new","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488472,"byte_end":13488534,"line_start":2341,"line_end":2341,"column_start":9,"column_end":71}},{"value":"/ selection is set while the client has keyboard focus.  The","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488543,"byte_end":13488605,"line_start":2342,"line_end":2342,"column_start":9,"column_end":71}},{"value":"/ data_offer is valid until a new data_offer or NULL is received","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488614,"byte_end":13488680,"line_start":2343,"line_end":2343,"column_start":9,"column_end":75}},{"value":"/ or until the client loses keyboard focus.  The client must","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488689,"byte_end":13488751,"line_start":2344,"line_end":2344,"column_start":9,"column_end":71}},{"value":"/ destroy the previous selection data_offer, if any, upon receiving","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488760,"byte_end":13488829,"line_start":2345,"line_end":2345,"column_start":9,"column_end":78}},{"value":"/ this event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488838,"byte_end":13488853,"line_start":2346,"line_end":2346,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488862,"byte_end":13488865,"line_start":2347,"line_end":2347,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_data_device, id","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13488874,"byte_end":13488947,"line_start":2348,"line_end":2348,"column_start":9,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13491617,"byte_end":13491627,"line_start":2405,"line_end":2405,"column_start":16,"column_end":26},"name":"start_drag","qualname":"<WlDataDevice>::start_drag","value":"pub fn start_drag(&Self, Option<&super::wl_data_source::WlDataSource>,\n                  &super::wl_surface::WlSurface,\n                  Option<&super::wl_surface::WlSurface>, u32)\n-> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" start drag-and-drop operation","sig":null,"attributes":[{"value":"/ start drag-and-drop operation","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13489973,"byte_end":13490006,"line_start":2376,"line_end":2376,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490015,"byte_end":13490018,"line_start":2377,"line_end":2377,"column_start":9,"column_end":12}},{"value":"/ This request asks the compositor to start a drag-and-drop","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490027,"byte_end":13490088,"line_start":2378,"line_end":2378,"column_start":9,"column_end":70}},{"value":"/ operation on behalf of the client.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490097,"byte_end":13490135,"line_start":2379,"line_end":2379,"column_start":9,"column_end":47}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490144,"byte_end":13490148,"line_start":2380,"line_end":2380,"column_start":9,"column_end":13}},{"value":"/ The source argument is the data source that provides the data","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490157,"byte_end":13490222,"line_start":2381,"line_end":2381,"column_start":9,"column_end":74}},{"value":"/ for the eventual data transfer. If source is NULL, enter, leave","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490231,"byte_end":13490298,"line_start":2382,"line_end":2382,"column_start":9,"column_end":76}},{"value":"/ and motion events are sent only to the client that initiated the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490307,"byte_end":13490375,"line_start":2383,"line_end":2383,"column_start":9,"column_end":77}},{"value":"/ drag and the client is expected to handle the data passing","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490384,"byte_end":13490446,"line_start":2384,"line_end":2384,"column_start":9,"column_end":71}},{"value":"/ internally.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490455,"byte_end":13490470,"line_start":2385,"line_end":2385,"column_start":9,"column_end":24}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490479,"byte_end":13490483,"line_start":2386,"line_end":2386,"column_start":9,"column_end":13}},{"value":"/ The origin surface is the surface where the drag originates and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490492,"byte_end":13490559,"line_start":2387,"line_end":2387,"column_start":9,"column_end":76}},{"value":"/ the client must have an active implicit grab that matches the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490568,"byte_end":13490633,"line_start":2388,"line_end":2388,"column_start":9,"column_end":74}},{"value":"/ serial.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490642,"byte_end":13490653,"line_start":2389,"line_end":2389,"column_start":9,"column_end":20}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490662,"byte_end":13490666,"line_start":2390,"line_end":2390,"column_start":9,"column_end":13}},{"value":"/ The icon surface is an optional (can be NULL) surface that","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490675,"byte_end":13490737,"line_start":2391,"line_end":2391,"column_start":9,"column_end":71}},{"value":"/ provides an icon to be moved around with the cursor.  Initially,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490746,"byte_end":13490814,"line_start":2392,"line_end":2392,"column_start":9,"column_end":77}},{"value":"/ the top-left corner of the icon surface is placed at the cursor","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490823,"byte_end":13490890,"line_start":2393,"line_end":2393,"column_start":9,"column_end":76}},{"value":"/ hotspot, but subsequent wl_surface.attach request can move the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490899,"byte_end":13490965,"line_start":2394,"line_end":2394,"column_start":9,"column_end":75}},{"value":"/ relative position. Attach requests must be confirmed with","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13490974,"byte_end":13491035,"line_start":2395,"line_end":2395,"column_start":9,"column_end":70}},{"value":"/ wl_surface.commit as usual. The icon surface is given the role of","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13491044,"byte_end":13491113,"line_start":2396,"line_end":2396,"column_start":9,"column_end":78}},{"value":"/ a drag-and-drop icon. If the icon surface already has another role,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13491122,"byte_end":13491193,"line_start":2397,"line_end":2397,"column_start":9,"column_end":80}},{"value":"/ it raises a protocol error.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13491202,"byte_end":13491233,"line_start":2398,"line_end":2398,"column_start":9,"column_end":40}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13491242,"byte_end":13491246,"line_start":2399,"line_end":2399,"column_start":9,"column_end":13}},{"value":"/ The current and pending input regions of the icon wl_surface are","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13491255,"byte_end":13491323,"line_start":2400,"line_end":2400,"column_start":9,"column_end":77}},{"value":"/ cleared, and wl_surface.set_input_region is ignored until the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13491332,"byte_end":13491397,"line_start":2401,"line_end":2401,"column_start":9,"column_end":74}},{"value":"/ wl_surface is no longer used as the icon surface. When the use","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13491406,"byte_end":13491472,"line_start":2402,"line_end":2402,"column_start":9,"column_end":75}},{"value":"/ as an icon ends, the current and pending input regions become","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13491481,"byte_end":13491546,"line_start":2403,"line_end":2403,"column_start":9,"column_end":74}},{"value":"/ undefined, and the wl_surface is unmapped.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13491555,"byte_end":13491601,"line_start":2404,"line_end":2404,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13492447,"byte_end":13492460,"line_start":2416,"line_end":2416,"column_start":16,"column_end":29},"name":"set_selection","qualname":"<WlDataDevice>::set_selection","value":"pub fn set_selection(&Self, Option<&super::wl_data_source::WlDataSource>, u32)\n-> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" copy data to the selection","sig":null,"attributes":[{"value":"/ copy data to the selection","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13492185,"byte_end":13492215,"line_start":2410,"line_end":2410,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13492224,"byte_end":13492227,"line_start":2411,"line_end":2411,"column_start":9,"column_end":12}},{"value":"/ This request asks the compositor to set the selection","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13492236,"byte_end":13492293,"line_start":2412,"line_end":2412,"column_start":9,"column_end":66}},{"value":"/ to the data from the source on behalf of the client.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13492302,"byte_end":13492358,"line_start":2413,"line_end":2413,"column_start":9,"column_end":65}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13492367,"byte_end":13492371,"line_start":2414,"line_end":2414,"column_start":9,"column_end":13}},{"value":"/ To unset the selection, set the source to NULL.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13492380,"byte_end":13492431,"line_start":2415,"line_end":2415,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13493178,"byte_end":13493185,"line_start":2428,"line_end":2428,"column_start":16,"column_end":23},"name":"release","qualname":"<WlDataDevice>::release","value":"pub fn release(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" destroy data device","sig":null,"attributes":[{"value":"/ destroy data device","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13492874,"byte_end":13492897,"line_start":2421,"line_end":2421,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13492906,"byte_end":13492909,"line_start":2422,"line_end":2422,"column_start":9,"column_end":12}},{"value":"/ This request destroys the data device.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13492918,"byte_end":13492960,"line_start":2423,"line_end":2423,"column_start":9,"column_end":51}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13492969,"byte_end":13492972,"line_start":2424,"line_end":2424,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13492981,"byte_end":13493074,"line_start":2425,"line_end":2425,"column_start":9,"column_end":102}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13493083,"byte_end":13493086,"line_start":2426,"line_end":2426,"column_start":9,"column_end":12}},{"value":"/ This request is only available since version 2 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13493095,"byte_end":13493162,"line_start":2427,"line_end":2427,"column_start":9,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1526},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13493916,"byte_end":13493938,"line_start":2443,"line_end":2443,"column_start":9,"column_end":31},"name":"wl_data_device_manager","qualname":"::generated::client::wl_data_device_manager","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1530},{"krate":0,"index":1533},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":1558},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1568},{"krate":0,"index":1571},{"krate":0,"index":1574},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":2929},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2939},{"krate":0,"index":2941},{"krate":0,"index":2943},{"krate":0,"index":2945},{"krate":0,"index":2948},{"krate":0,"index":2956},{"krate":0,"index":2958},{"krate":0,"index":2960},{"krate":0,"index":2962},{"krate":0,"index":2964},{"krate":0,"index":2988},{"krate":0,"index":2991},{"krate":0,"index":2993},{"krate":0,"index":2996},{"krate":0,"index":2998},{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3006},{"krate":0,"index":3008},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":1597},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602}],"decl_id":null,"docs":" data transfer interface","sig":null,"attributes":[{"value":"/ data transfer interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13493945,"byte_end":13493972,"line_start":2444,"line_end":2444,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13493977,"byte_end":13493980,"line_start":2445,"line_end":2445,"column_start":5,"column_end":8}},{"value":"/ The wl_data_device_manager is a singleton global object that","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13493985,"byte_end":13494049,"line_start":2446,"line_end":2446,"column_start":5,"column_end":69}},{"value":"/ provides access to inter-client data transfer mechanisms such as","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13494054,"byte_end":13494122,"line_start":2447,"line_end":2447,"column_start":5,"column_end":73}},{"value":"/ copy-and-paste and drag-and-drop.  These mechanisms are tied to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13494127,"byte_end":13494194,"line_start":2448,"line_end":2448,"column_start":5,"column_end":72}},{"value":"/ a wl_seat and this interface lets a client get a wl_data_device","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13494199,"byte_end":13494266,"line_start":2449,"line_end":2449,"column_start":5,"column_end":72}},{"value":"/ corresponding to a wl_seat.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13494271,"byte_end":13494302,"line_start":2450,"line_end":2450,"column_start":5,"column_end":36}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13494307,"byte_end":13494311,"line_start":2451,"line_end":2451,"column_start":5,"column_end":9}},{"value":"/ Depending on the version bound, the objects created from the bound","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13494316,"byte_end":13494386,"line_start":2452,"line_end":2452,"column_start":5,"column_end":75}},{"value":"/ wl_data_device_manager object will have different requirements for","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13494391,"byte_end":13494461,"line_start":2453,"line_end":2453,"column_start":5,"column_end":75}},{"value":"/ functioning properly. See wl_data_source.set_actions,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13494466,"byte_end":13494523,"line_start":2454,"line_end":2454,"column_start":5,"column_end":62}},{"value":"/ wl_data_offer.accept and wl_data_offer.finish for details.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13494528,"byte_end":13494590,"line_start":2455,"line_end":2455,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1579},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13495152,"byte_end":13495171,"line_start":2473,"line_end":2473,"column_start":16,"column_end":35},"name":"WlDataDeviceManager","qualname":"::generated::client::wl_data_device_manager::WlDataDeviceManager","value":"WlDataDeviceManager {  }","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1581}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2929},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13499355,"byte_end":13499364,"line_start":2572,"line_end":2572,"column_start":20,"column_end":29},"name":"DndAction","qualname":"::generated::client::wl_data_device_manager::DndAction","value":"DndAction {  }","parent":null,"children":[{"krate":0,"index":2930}],"decl_id":null,"docs":" drag and drop actions","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2965},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13499416,"byte_end":13499420,"line_start":2574,"line_end":2574,"column_start":19,"column_end":23},"name":"None","qualname":"::generated::client::wl_data_device_manager::DndAction::None","value":"Self","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" no action\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2966},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13499472,"byte_end":13499476,"line_start":2576,"line_end":2576,"column_start":19,"column_end":23},"name":"Copy","qualname":"::generated::client::wl_data_device_manager::DndAction::Copy","value":"Self","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" copy action\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2967},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13499528,"byte_end":13499532,"line_start":2578,"line_end":2578,"column_start":19,"column_end":23},"name":"Move","qualname":"::generated::client::wl_data_device_manager::DndAction::Move","value":"Self","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" move action\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2968},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13499583,"byte_end":13499586,"line_start":2580,"line_end":2580,"column_start":19,"column_end":22},"name":"Ask","qualname":"::generated::client::wl_data_device_manager::DndAction::Ask","value":"Self","parent":{"krate":0,"index":2964},"children":[],"decl_id":null,"docs":" ask action\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13499644,"byte_end":13499652,"line_start":2584,"line_end":2584,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<DndAction>::from_raw","value":"pub fn from_raw(u32) -> Option<DndAction>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13499760,"byte_end":13499766,"line_start":2587,"line_end":2587,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<DndAction>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13500077,"byte_end":13500095,"line_start":2597,"line_end":2597,"column_start":16,"column_end":34},"name":"create_data_source","qualname":"<WlDataDeviceManager>::create_data_source","value":"pub fn create_data_source(&Self) -> super::wl_data_source::WlDataSource","parent":null,"children":[],"decl_id":null,"docs":" create a new data source","sig":null,"attributes":[{"value":"/ create a new data source","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13499983,"byte_end":13500011,"line_start":2594,"line_end":2594,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13500020,"byte_end":13500023,"line_start":2595,"line_end":2595,"column_start":9,"column_end":12}},{"value":"/ Create a new data source.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13500032,"byte_end":13500061,"line_start":2596,"line_end":2596,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13500563,"byte_end":13500578,"line_start":2605,"line_end":2605,"column_start":16,"column_end":31},"name":"get_data_device","qualname":"<WlDataDeviceManager>::get_data_device","value":"pub fn get_data_device(&Self, &super::wl_seat::WlSeat)\n-> super::wl_data_device::WlDataDevice","parent":null,"children":[],"decl_id":null,"docs":" create a new data device","sig":null,"attributes":[{"value":"/ create a new data device","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13500452,"byte_end":13500480,"line_start":2602,"line_end":2602,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13500489,"byte_end":13500492,"line_start":2603,"line_end":2603,"column_start":9,"column_end":12}},{"value":"/ Create a new data device for a given seat.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13500501,"byte_end":13500547,"line_start":2604,"line_end":2604,"column_start":9,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":1605},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13500983,"byte_end":13500991,"line_start":2612,"line_end":2612,"column_start":9,"column_end":17},"name":"wl_shell","qualname":"::generated::client::wl_shell","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1609},{"krate":0,"index":1612},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1631},{"krate":0,"index":1634},{"krate":0,"index":1637},{"krate":0,"index":1640},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1647},{"krate":0,"index":1650},{"krate":0,"index":1653},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":3031},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3038},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":1676},{"krate":0,"index":1679},{"krate":0,"index":1680}],"decl_id":null,"docs":" create desktop-style surfaces","sig":null,"attributes":[{"value":"/ create desktop-style surfaces","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13500998,"byte_end":13501031,"line_start":2613,"line_end":2613,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13501036,"byte_end":13501039,"line_start":2614,"line_end":2614,"column_start":5,"column_end":8}},{"value":"/ This interface is implemented by servers that provide","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13501044,"byte_end":13501101,"line_start":2615,"line_end":2615,"column_start":5,"column_end":62}},{"value":"/ desktop-style user interfaces.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13501106,"byte_end":13501140,"line_start":2616,"line_end":2616,"column_start":5,"column_end":39}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13501145,"byte_end":13501149,"line_start":2617,"line_end":2617,"column_start":5,"column_end":9}},{"value":"/ It allows clients to associate a wl_shell_surface with","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13501154,"byte_end":13501212,"line_start":2618,"line_end":2618,"column_start":5,"column_end":63}},{"value":"/ a basic surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13501217,"byte_end":13501237,"line_start":2619,"line_end":2619,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1658},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13501799,"byte_end":13501806,"line_start":2637,"line_end":2637,"column_start":16,"column_end":23},"name":"WlShell","qualname":"::generated::client::wl_shell::WlShell","value":"WlShell {  }","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1660}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3032},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13504603,"byte_end":13504607,"line_start":2714,"line_end":2714,"column_start":9,"column_end":13},"name":"Role","qualname":"::generated::client::wl_shell::Error::Role","value":"Error::Role","parent":{"krate":0,"index":3031},"children":[],"decl_id":null,"docs":" given wl_surface has another role\n","sig":null,"attributes":[{"value":"/ given wl_surface has another role","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13504557,"byte_end":13504594,"line_start":2713,"line_end":2713,"column_start":9,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":3031},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13504541,"byte_end":13504546,"line_start":2712,"line_end":2712,"column_start":14,"column_end":19},"name":"Error","qualname":"::generated::client::wl_shell::Error","value":"pub enum Error { Role = , }","parent":null,"children":[{"krate":0,"index":3032}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13504473,"byte_end":13504485,"line_start":2710,"line_end":2710,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13504651,"byte_end":13504659,"line_start":2717,"line_end":2717,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13504822,"byte_end":13504828,"line_start":2723,"line_end":2723,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505328,"byte_end":13505345,"line_start":2736,"line_end":2736,"column_start":16,"column_end":33},"name":"get_shell_surface","qualname":"<WlShell>::get_shell_surface","value":"pub fn get_shell_surface(&Self, &super::wl_surface::WlSurface)\n-> super::wl_shell_surface::WlShellSurface","parent":null,"children":[],"decl_id":null,"docs":" create a shell surface from a surface","sig":null,"attributes":[{"value":"/ create a shell surface from a surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13504960,"byte_end":13505001,"line_start":2729,"line_end":2729,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505010,"byte_end":13505013,"line_start":2730,"line_end":2730,"column_start":9,"column_end":12}},{"value":"/ Create a shell surface for an existing surface. This gives","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505022,"byte_end":13505084,"line_start":2731,"line_end":2731,"column_start":9,"column_end":71}},{"value":"/ the wl_surface the role of a shell surface. If the wl_surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505093,"byte_end":13505158,"line_start":2732,"line_end":2732,"column_start":9,"column_end":74}},{"value":"/ already has another role, it raises a protocol error.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505167,"byte_end":13505224,"line_start":2733,"line_end":2733,"column_start":9,"column_end":66}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505233,"byte_end":13505237,"line_start":2734,"line_end":2734,"column_start":9,"column_end":13}},{"value":"/ Only one shell surface can be associated with a given surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505246,"byte_end":13505312,"line_start":2735,"line_end":2735,"column_start":9,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":1682},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505756,"byte_end":13505772,"line_start":2743,"line_end":2743,"column_start":9,"column_end":25},"name":"wl_shell_surface","qualname":"::generated::client::wl_shell_surface","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1708},{"krate":0,"index":1711},{"krate":0,"index":1714},{"krate":0,"index":1717},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1724},{"krate":0,"index":1727},{"krate":0,"index":1730},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1753},{"krate":0,"index":3043},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3053},{"krate":0,"index":3055},{"krate":0,"index":3057},{"krate":0,"index":3059},{"krate":0,"index":3062},{"krate":0,"index":3075},{"krate":0,"index":3077},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3112},{"krate":0,"index":3115},{"krate":0,"index":3117},{"krate":0,"index":3120},{"krate":0,"index":3122},{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3130},{"krate":0,"index":3132},{"krate":0,"index":3135},{"krate":0,"index":3138},{"krate":0,"index":1757},{"krate":0,"index":3170},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3180},{"krate":0,"index":3182},{"krate":0,"index":3184},{"krate":0,"index":3186},{"krate":0,"index":3189},{"krate":0,"index":3194},{"krate":0,"index":3196},{"krate":0,"index":3198},{"krate":0,"index":3200},{"krate":0,"index":3202},{"krate":0,"index":3223},{"krate":0,"index":3226},{"krate":0,"index":3228},{"krate":0,"index":3231},{"krate":0,"index":3233},{"krate":0,"index":3236},{"krate":0,"index":3238},{"krate":0,"index":3241},{"krate":0,"index":3243},{"krate":0,"index":3246},{"krate":0,"index":3249},{"krate":0,"index":1760},{"krate":0,"index":3257},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3273},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1771},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789}],"decl_id":null,"docs":" desktop-style metadata interface","sig":null,"attributes":[{"value":"/ desktop-style metadata interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505779,"byte_end":13505815,"line_start":2744,"line_end":2744,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505820,"byte_end":13505823,"line_start":2745,"line_end":2745,"column_start":5,"column_end":8}},{"value":"/ An interface that may be implemented by a wl_surface, for","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505828,"byte_end":13505889,"line_start":2746,"line_end":2746,"column_start":5,"column_end":66}},{"value":"/ implementations that provide a desktop-style user interface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505894,"byte_end":13505958,"line_start":2747,"line_end":2747,"column_start":5,"column_end":69}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505963,"byte_end":13505967,"line_start":2748,"line_end":2748,"column_start":5,"column_end":9}},{"value":"/ It provides requests to treat surfaces like toplevel, fullscreen","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13505972,"byte_end":13506040,"line_start":2749,"line_end":2749,"column_start":5,"column_end":73}},{"value":"/ or popup windows, move, resize or maximize them, associate","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13506045,"byte_end":13506107,"line_start":2750,"line_end":2750,"column_start":5,"column_end":67}},{"value":"/ metadata like title and class, etc.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13506112,"byte_end":13506151,"line_start":2751,"line_end":2751,"column_start":5,"column_end":44}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13506156,"byte_end":13506160,"line_start":2752,"line_end":2752,"column_start":5,"column_end":9}},{"value":"/ On the server side the object is automatically destroyed when","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13506165,"byte_end":13506230,"line_start":2753,"line_end":2753,"column_start":5,"column_end":70}},{"value":"/ the related wl_surface is destroyed. On the client side,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13506235,"byte_end":13506295,"line_start":2754,"line_end":2754,"column_start":5,"column_end":65}},{"value":"/ wl_shell_surface_destroy() must be called before destroying","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13506300,"byte_end":13506363,"line_start":2755,"line_end":2755,"column_start":5,"column_end":68}},{"value":"/ the wl_surface object.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13506368,"byte_end":13506394,"line_start":2756,"line_end":2756,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1735},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13506956,"byte_end":13506970,"line_start":2774,"line_end":2774,"column_start":16,"column_end":30},"name":"WlShellSurface","qualname":"::generated::client::wl_shell_surface::WlShellSurface","value":"WlShellSurface {  }","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3043},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13511574,"byte_end":13511580,"line_start":2889,"line_end":2889,"column_start":20,"column_end":26},"name":"Resize","qualname":"::generated::client::wl_shell_surface::Resize","value":"Resize {  }","parent":null,"children":[{"krate":0,"index":3044}],"decl_id":null,"docs":" edge values for resizing","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3084},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13511630,"byte_end":13511634,"line_start":2891,"line_end":2891,"column_start":19,"column_end":23},"name":"None","qualname":"::generated::client::wl_shell_surface::Resize::None","value":"Self","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" no edge\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3085},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13511683,"byte_end":13511686,"line_start":2893,"line_end":2893,"column_start":19,"column_end":22},"name":"Top","qualname":"::generated::client::wl_shell_surface::Resize::Top","value":"Self","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" top edge\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3086},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13511738,"byte_end":13511744,"line_start":2895,"line_end":2895,"column_start":19,"column_end":25},"name":"Bottom","qualname":"::generated::client::wl_shell_surface::Resize::Bottom","value":"Self","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" bottom edge\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3087},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13511794,"byte_end":13511798,"line_start":2897,"line_end":2897,"column_start":19,"column_end":23},"name":"Left","qualname":"::generated::client::wl_shell_surface::Resize::Left","value":"Self","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" left edge\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3088},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13511857,"byte_end":13511864,"line_start":2899,"line_end":2899,"column_start":19,"column_end":26},"name":"TopLeft","qualname":"::generated::client::wl_shell_surface::Resize::TopLeft","value":"Self","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" top and left edges\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3089},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13511926,"byte_end":13511936,"line_start":2901,"line_end":2901,"column_start":19,"column_end":29},"name":"BottomLeft","qualname":"::generated::client::wl_shell_surface::Resize::BottomLeft","value":"Self","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" bottom and left edges\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3090},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13511987,"byte_end":13511992,"line_start":2903,"line_end":2903,"column_start":19,"column_end":24},"name":"Right","qualname":"::generated::client::wl_shell_surface::Resize::Right","value":"Self","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" right edge\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3091},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512052,"byte_end":13512060,"line_start":2905,"line_end":2905,"column_start":19,"column_end":27},"name":"TopRight","qualname":"::generated::client::wl_shell_surface::Resize::TopRight","value":"Self","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" top and right edges\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3092},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512123,"byte_end":13512134,"line_start":2907,"line_end":2907,"column_start":19,"column_end":30},"name":"BottomRight","qualname":"::generated::client::wl_shell_surface::Resize::BottomRight","value":"Self","parent":{"krate":0,"index":3083},"children":[],"decl_id":null,"docs":" bottom and right edges\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512190,"byte_end":13512198,"line_start":2911,"line_end":2911,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Resize>::from_raw","value":"pub fn from_raw(u32) -> Option<Resize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512300,"byte_end":13512306,"line_start":2914,"line_end":2914,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Resize>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3170},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512589,"byte_end":13512598,"line_start":2923,"line_end":2923,"column_start":20,"column_end":29},"name":"Transient","qualname":"::generated::client::wl_shell_surface::Transient","value":"Transient {  }","parent":null,"children":[{"krate":0,"index":3171}],"decl_id":null,"docs":" details of transient behaviour","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3203},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512666,"byte_end":13512674,"line_start":2925,"line_end":2925,"column_start":19,"column_end":27},"name":"Inactive","qualname":"::generated::client::wl_shell_surface::Transient::Inactive","value":"Self","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":" do not set keyboard focus\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512734,"byte_end":13512742,"line_start":2929,"line_end":2929,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Transient>::from_raw","value":"pub fn from_raw(u32) -> Option<Transient>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512850,"byte_end":13512856,"line_start":2932,"line_end":2932,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Transient>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3258},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513332,"byte_end":13513339,"line_start":2945,"line_end":2945,"column_start":9,"column_end":16},"name":"Default","qualname":"::generated::client::wl_shell_surface::FullscreenMethod::Default","value":"FullscreenMethod::Default","parent":{"krate":0,"index":3257},"children":[],"decl_id":null,"docs":" no preference, apply default policy\n","sig":null,"attributes":[{"value":"/ no preference, apply default policy","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513284,"byte_end":13513323,"line_start":2944,"line_end":2944,"column_start":9,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3261},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513429,"byte_end":13513434,"line_start":2947,"line_end":2947,"column_start":9,"column_end":14},"name":"Scale","qualname":"::generated::client::wl_shell_surface::FullscreenMethod::Scale","value":"FullscreenMethod::Scale","parent":{"krate":0,"index":3257},"children":[],"decl_id":null,"docs":" scale, preserve the surface's aspect ratio and center on output\n","sig":null,"attributes":[{"value":"/ scale, preserve the surface's aspect ratio and center on output","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513353,"byte_end":13513420,"line_start":2946,"line_end":2946,"column_start":9,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3264},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513572,"byte_end":13513578,"line_start":2949,"line_end":2949,"column_start":9,"column_end":15},"name":"Driver","qualname":"::generated::client::wl_shell_surface::FullscreenMethod::Driver","value":"FullscreenMethod::Driver","parent":{"krate":0,"index":3257},"children":[],"decl_id":null,"docs":" switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch\n","sig":null,"attributes":[{"value":"/ switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513448,"byte_end":13513563,"line_start":2948,"line_end":2948,"column_start":9,"column_end":124}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3267},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513685,"byte_end":13513689,"line_start":2951,"line_end":2951,"column_start":9,"column_end":13},"name":"Fill","qualname":"::generated::client::wl_shell_surface::FullscreenMethod::Fill","value":"FullscreenMethod::Fill","parent":{"krate":0,"index":3257},"children":[],"decl_id":null,"docs":" no upscaling, center on output and add black borders to compensate size mismatch\n","sig":null,"attributes":[{"value":"/ no upscaling, center on output and add black borders to compensate size mismatch","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513592,"byte_end":13513676,"line_start":2950,"line_end":2950,"column_start":9,"column_end":93}}]},{"kind":"Enum","id":{"krate":0,"index":3257},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513257,"byte_end":13513273,"line_start":2943,"line_end":2943,"column_start":14,"column_end":30},"name":"FullscreenMethod","qualname":"::generated::client::wl_shell_surface::FullscreenMethod","value":"pub enum FullscreenMethod { Default = , Scale = , Driver = , Fill = , }","parent":null,"children":[{"krate":0,"index":3258},{"krate":0,"index":3261},{"krate":0,"index":3264},{"krate":0,"index":3267}],"decl_id":null,"docs":" different method to set the surface fullscreen","sig":null,"attributes":[{"value":"/ different method to set the surface fullscreen","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512917,"byte_end":13512967,"line_start":2936,"line_end":2936,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512972,"byte_end":13512975,"line_start":2937,"line_end":2937,"column_start":5,"column_end":8}},{"value":"/ Hints to indicate to the compositor how to deal with a conflict","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512980,"byte_end":13513047,"line_start":2938,"line_end":2938,"column_start":5,"column_end":72}},{"value":"/ between the dimensions of the surface and the dimensions of the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513052,"byte_end":13513119,"line_start":2939,"line_end":2939,"column_start":5,"column_end":72}},{"value":"/ output. The compositor is free to ignore this parameter.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513124,"byte_end":13513184,"line_start":2940,"line_end":2940,"column_start":5,"column_end":65}},{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513189,"byte_end":13513201,"line_start":2941,"line_end":2941,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513744,"byte_end":13513752,"line_start":2954,"line_end":2954,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<FullscreenMethod>::from_raw","value":"pub fn from_raw(u32) -> Option<FullscreenMethod>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514096,"byte_end":13514102,"line_start":2963,"line_end":2963,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<FullscreenMethod>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1766},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514175,"byte_end":13514189,"line_start":2967,"line_end":2967,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_shell_surface::Implementation","value":"Implementation { ping, configure, popup_done }","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1768},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514490,"byte_end":13514494,"line_start":2974,"line_end":2974,"column_start":13,"column_end":17},"name":"ping","qualname":"::generated::client::wl_shell_surface::Implementation::ping","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_shell_surface::WlShellSurface, u32)","parent":{"krate":0,"index":1766},"children":[],"decl_id":null,"docs":" ping client","sig":null,"attributes":[{"value":"/ ping client","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514204,"byte_end":13514219,"line_start":2968,"line_end":2968,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514228,"byte_end":13514231,"line_start":2969,"line_end":2969,"column_start":9,"column_end":12}},{"value":"/ Ping a client to check if it is receiving events and sending","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514240,"byte_end":13514304,"line_start":2970,"line_end":2970,"column_start":9,"column_end":73}},{"value":"/ requests. A client is expected to reply with a pong request.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514313,"byte_end":13514377,"line_start":2971,"line_end":2971,"column_start":9,"column_end":73}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514386,"byte_end":13514389,"line_start":2972,"line_end":2972,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_shell_surface, serial","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514398,"byte_end":13514477,"line_start":2973,"line_end":2973,"column_start":9,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":1769},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515621,"byte_end":13515630,"line_start":2996,"line_end":2996,"column_start":13,"column_end":22},"name":"configure","qualname":"::generated::client::wl_shell_surface::Implementation::configure","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_shell_surface::WlShellSurface, generated::client::wl_shell_surface::Resize, i32, i32)","parent":{"krate":0,"index":1766},"children":[],"decl_id":null,"docs":" suggest resize","sig":null,"attributes":[{"value":"/ suggest resize","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514601,"byte_end":13514619,"line_start":2975,"line_end":2975,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514628,"byte_end":13514631,"line_start":2976,"line_end":2976,"column_start":9,"column_end":12}},{"value":"/ The configure event asks the client to resize its surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514640,"byte_end":13514702,"line_start":2977,"line_end":2977,"column_start":9,"column_end":71}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514711,"byte_end":13514715,"line_start":2978,"line_end":2978,"column_start":9,"column_end":13}},{"value":"/ The size is a hint, in the sense that the client is free to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514724,"byte_end":13514787,"line_start":2979,"line_end":2979,"column_start":9,"column_end":72}},{"value":"/ ignore it if it doesn't resize, pick a smaller size (to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514796,"byte_end":13514855,"line_start":2980,"line_end":2980,"column_start":9,"column_end":68}},{"value":"/ satisfy aspect ratio or resize in steps of NxM pixels).","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514864,"byte_end":13514923,"line_start":2981,"line_end":2981,"column_start":9,"column_end":68}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514932,"byte_end":13514936,"line_start":2982,"line_end":2982,"column_start":9,"column_end":13}},{"value":"/ The edges parameter provides a hint about how the surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13514945,"byte_end":13515006,"line_start":2983,"line_end":2983,"column_start":9,"column_end":70}},{"value":"/ was resized. The client may use this information to decide","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515015,"byte_end":13515077,"line_start":2984,"line_end":2984,"column_start":9,"column_end":71}},{"value":"/ how to adjust its content to the new size (e.g. a scrolling","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515086,"byte_end":13515149,"line_start":2985,"line_end":2985,"column_start":9,"column_end":72}},{"value":"/ area might adjust its content position to leave the viewable","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515158,"byte_end":13515222,"line_start":2986,"line_end":2986,"column_start":9,"column_end":73}},{"value":"/ content unmoved).","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515231,"byte_end":13515252,"line_start":2987,"line_end":2987,"column_start":9,"column_end":30}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515261,"byte_end":13515265,"line_start":2988,"line_end":2988,"column_start":9,"column_end":13}},{"value":"/ The client is free to dismiss all but the last configure","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515274,"byte_end":13515334,"line_start":2989,"line_end":2989,"column_start":9,"column_end":69}},{"value":"/ event it received.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515343,"byte_end":13515365,"line_start":2990,"line_end":2990,"column_start":9,"column_end":31}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515374,"byte_end":13515378,"line_start":2991,"line_end":2991,"column_start":9,"column_end":13}},{"value":"/ The width and height arguments specify the size of the window","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515387,"byte_end":13515452,"line_start":2992,"line_end":2992,"column_start":9,"column_end":74}},{"value":"/ in surface-local coordinates.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515461,"byte_end":13515494,"line_start":2993,"line_end":2993,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515503,"byte_end":13515506,"line_start":2994,"line_end":2994,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_shell_surface, edges, width, height","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515515,"byte_end":13515608,"line_start":2995,"line_end":2995,"column_start":9,"column_end":102}}]},{"kind":"Field","id":{"krate":0,"index":1770},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13516108,"byte_end":13516118,"line_start":3004,"line_end":3004,"column_start":13,"column_end":23},"name":"popup_done","qualname":"::generated::client::wl_shell_surface::Implementation::popup_done","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_shell_surface::WlShellSurface)","parent":{"krate":0,"index":1766},"children":[],"decl_id":null,"docs":" popup interaction is done","sig":null,"attributes":[{"value":"/ popup interaction is done","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515764,"byte_end":13515793,"line_start":2997,"line_end":2997,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515802,"byte_end":13515805,"line_start":2998,"line_end":2998,"column_start":9,"column_end":12}},{"value":"/ The popup_done event is sent out when a popup grab is broken,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515814,"byte_end":13515879,"line_start":2999,"line_end":2999,"column_start":9,"column_end":74}},{"value":"/ that is, when the user clicks a surface that doesn't belong","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515888,"byte_end":13515951,"line_start":3000,"line_end":3000,"column_start":9,"column_end":72}},{"value":"/ to the client owning the popup surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13515960,"byte_end":13516003,"line_start":3001,"line_end":3001,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13516012,"byte_end":13516015,"line_start":3002,"line_end":3002,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_shell_surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13516024,"byte_end":13516095,"line_start":3003,"line_end":3003,"column_start":9,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517409,"byte_end":13517413,"line_start":3039,"line_end":3039,"column_start":16,"column_end":20},"name":"pong","qualname":"<WlShellSurface>::pong","value":"pub fn pong(&Self, u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" respond to a ping event","sig":null,"attributes":[{"value":"/ respond to a ping event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517230,"byte_end":13517257,"line_start":3035,"line_end":3035,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517266,"byte_end":13517269,"line_start":3036,"line_end":3036,"column_start":9,"column_end":12}},{"value":"/ A client must respond to a ping event with a pong request or","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517278,"byte_end":13517342,"line_start":3037,"line_end":3037,"column_start":9,"column_end":73}},{"value":"/ the client may be deemed unresponsive.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517351,"byte_end":13517393,"line_start":3038,"line_end":3038,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517912,"byte_end":13517917,"line_start":3049,"line_end":3049,"column_start":16,"column_end":21},"name":"_move","qualname":"<WlShellSurface>::_move","value":"pub fn _move(&Self, &super::wl_seat::WlSeat, u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" start an interactive move","sig":null,"attributes":[{"value":"/ start an interactive move","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517581,"byte_end":13517610,"line_start":3042,"line_end":3042,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517619,"byte_end":13517622,"line_start":3043,"line_end":3043,"column_start":9,"column_end":12}},{"value":"/ Start a pointer-driven move of the surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517631,"byte_end":13517678,"line_start":3044,"line_end":3044,"column_start":9,"column_end":56}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517687,"byte_end":13517691,"line_start":3045,"line_end":3045,"column_start":9,"column_end":13}},{"value":"/ This request must be used in response to a button press event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517700,"byte_end":13517766,"line_start":3046,"line_end":3046,"column_start":9,"column_end":75}},{"value":"/ The server may ignore move requests depending on the state of","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517775,"byte_end":13517840,"line_start":3047,"line_end":3047,"column_start":9,"column_end":74}},{"value":"/ the surface (e.g. fullscreen or maximized).","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517849,"byte_end":13517896,"line_start":3048,"line_end":3048,"column_start":9,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518467,"byte_end":13518473,"line_start":3059,"line_end":3059,"column_start":16,"column_end":22},"name":"resize","qualname":"<WlShellSurface>::resize","value":"pub fn resize(&Self, &super::wl_seat::WlSeat, u32, Resize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" start an interactive resize","sig":null,"attributes":[{"value":"/ start an interactive resize","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518128,"byte_end":13518159,"line_start":3052,"line_end":3052,"column_start":9,"column_end":40}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518168,"byte_end":13518171,"line_start":3053,"line_end":3053,"column_start":9,"column_end":12}},{"value":"/ Start a pointer-driven resizing of the surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518180,"byte_end":13518231,"line_start":3054,"line_end":3054,"column_start":9,"column_end":60}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518240,"byte_end":13518244,"line_start":3055,"line_end":3055,"column_start":9,"column_end":13}},{"value":"/ This request must be used in response to a button press event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518253,"byte_end":13518319,"line_start":3056,"line_end":3056,"column_start":9,"column_end":75}},{"value":"/ The server may ignore resize requests depending on the state of","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518328,"byte_end":13518395,"line_start":3057,"line_end":3057,"column_start":9,"column_end":76}},{"value":"/ the surface (e.g. fullscreen or maximized).","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518404,"byte_end":13518451,"line_start":3058,"line_end":3058,"column_start":9,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518913,"byte_end":13518925,"line_start":3067,"line_end":3067,"column_start":16,"column_end":28},"name":"set_toplevel","qualname":"<WlShellSurface>::set_toplevel","value":"pub fn set_toplevel(&Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" make the surface a toplevel surface","sig":null,"attributes":[{"value":"/ make the surface a toplevel surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518708,"byte_end":13518747,"line_start":3062,"line_end":3062,"column_start":9,"column_end":48}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518756,"byte_end":13518759,"line_start":3063,"line_end":3063,"column_start":9,"column_end":12}},{"value":"/ Map the surface as a toplevel surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518768,"byte_end":13518810,"line_start":3064,"line_end":3064,"column_start":9,"column_end":51}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518819,"byte_end":13518823,"line_start":3065,"line_end":3065,"column_start":9,"column_end":13}},{"value":"/ A toplevel surface is not fullscreen, maximized or transient.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13518832,"byte_end":13518897,"line_start":3066,"line_end":3066,"column_start":9,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519517,"byte_end":13519530,"line_start":3079,"line_end":3079,"column_start":16,"column_end":29},"name":"set_transient","qualname":"<WlShellSurface>::set_transient","value":"pub fn set_transient(&Self, &super::wl_surface::WlSurface, i32, i32,\n                     Transient) -> ()","parent":null,"children":[],"decl_id":null,"docs":" make the surface a transient surface","sig":null,"attributes":[{"value":"/ make the surface a transient surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519080,"byte_end":13519120,"line_start":3070,"line_end":3070,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519129,"byte_end":13519132,"line_start":3071,"line_end":3071,"column_start":9,"column_end":12}},{"value":"/ Map the surface relative to an existing surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519141,"byte_end":13519193,"line_start":3072,"line_end":3072,"column_start":9,"column_end":61}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519202,"byte_end":13519206,"line_start":3073,"line_end":3073,"column_start":9,"column_end":13}},{"value":"/ The x and y arguments specify the location of the upper left","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519215,"byte_end":13519279,"line_start":3074,"line_end":3074,"column_start":9,"column_end":73}},{"value":"/ corner of the surface relative to the upper left corner of the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519288,"byte_end":13519354,"line_start":3075,"line_end":3075,"column_start":9,"column_end":75}},{"value":"/ parent surface, in surface-local coordinates.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519363,"byte_end":13519412,"line_start":3076,"line_end":3076,"column_start":9,"column_end":58}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519421,"byte_end":13519425,"line_start":3077,"line_end":3077,"column_start":9,"column_end":13}},{"value":"/ The flags argument controls details of the transient behaviour.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519434,"byte_end":13519501,"line_start":3078,"line_end":3078,"column_start":9,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13521758,"byte_end":13521772,"line_start":3117,"line_end":3117,"column_start":16,"column_end":30},"name":"set_fullscreen","qualname":"<WlShellSurface>::set_fullscreen","value":"pub fn set_fullscreen(&Self, FullscreenMethod, u32,\n                      Option<&super::wl_output::WlOutput>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" make the surface a fullscreen surface","sig":null,"attributes":[{"value":"/ make the surface a fullscreen surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519786,"byte_end":13519827,"line_start":3082,"line_end":3082,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519836,"byte_end":13519839,"line_start":3083,"line_end":3083,"column_start":9,"column_end":12}},{"value":"/ Map the surface as a fullscreen surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519848,"byte_end":13519892,"line_start":3084,"line_end":3084,"column_start":9,"column_end":53}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519901,"byte_end":13519905,"line_start":3085,"line_end":3085,"column_start":9,"column_end":13}},{"value":"/ If an output parameter is given then the surface will be made","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519914,"byte_end":13519979,"line_start":3086,"line_end":3086,"column_start":9,"column_end":74}},{"value":"/ fullscreen on that output. If the client does not specify the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13519988,"byte_end":13520053,"line_start":3087,"line_end":3087,"column_start":9,"column_end":74}},{"value":"/ output then the compositor will apply its policy - usually","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520062,"byte_end":13520124,"line_start":3088,"line_end":3088,"column_start":9,"column_end":71}},{"value":"/ choosing the output on which the surface has the biggest surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520133,"byte_end":13520201,"line_start":3089,"line_end":3089,"column_start":9,"column_end":77}},{"value":"/ area.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520210,"byte_end":13520219,"line_start":3090,"line_end":3090,"column_start":9,"column_end":18}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520228,"byte_end":13520232,"line_start":3091,"line_end":3091,"column_start":9,"column_end":13}},{"value":"/ The client may specify a method to resolve a size conflict","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520241,"byte_end":13520303,"line_start":3092,"line_end":3092,"column_start":9,"column_end":71}},{"value":"/ between the output size and the surface size - this is provided","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520312,"byte_end":13520379,"line_start":3093,"line_end":3093,"column_start":9,"column_end":76}},{"value":"/ through the method parameter.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520388,"byte_end":13520421,"line_start":3094,"line_end":3094,"column_start":9,"column_end":42}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520430,"byte_end":13520434,"line_start":3095,"line_end":3095,"column_start":9,"column_end":13}},{"value":"/ The framerate parameter is used only when the method is set","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520443,"byte_end":13520506,"line_start":3096,"line_end":3096,"column_start":9,"column_end":72}},{"value":"/ to \"driver\", to indicate the preferred framerate. A value of 0","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520515,"byte_end":13520581,"line_start":3097,"line_end":3097,"column_start":9,"column_end":75}},{"value":"/ indicates that the client does not care about framerate.  The","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520590,"byte_end":13520655,"line_start":3098,"line_end":3098,"column_start":9,"column_end":74}},{"value":"/ framerate is specified in mHz, that is framerate of 60000 is 60Hz.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520664,"byte_end":13520734,"line_start":3099,"line_end":3099,"column_start":9,"column_end":79}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520743,"byte_end":13520747,"line_start":3100,"line_end":3100,"column_start":9,"column_end":13}},{"value":"/ A method of \"scale\" or \"driver\" implies a scaling operation of","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520756,"byte_end":13520822,"line_start":3101,"line_end":3101,"column_start":9,"column_end":75}},{"value":"/ the surface, either via a direct scaling operation or a change of","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520831,"byte_end":13520900,"line_start":3102,"line_end":3102,"column_start":9,"column_end":78}},{"value":"/ the output mode. This will override any kind of output scaling, so","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520909,"byte_end":13520979,"line_start":3103,"line_end":3103,"column_start":9,"column_end":79}},{"value":"/ that mapping a surface with a buffer size equal to the mode can","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13520988,"byte_end":13521055,"line_start":3104,"line_end":3104,"column_start":9,"column_end":76}},{"value":"/ fill the screen independent of buffer_scale.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13521064,"byte_end":13521112,"line_start":3105,"line_end":3105,"column_start":9,"column_end":57}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13521121,"byte_end":13521125,"line_start":3106,"line_end":3106,"column_start":9,"column_end":13}},{"value":"/ A method of \"fill\" means we don't scale up the buffer, however","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13521134,"byte_end":13521200,"line_start":3107,"line_end":3107,"column_start":9,"column_end":75}},{"value":"/ any output scale is applied. This means that you may run into","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13521209,"byte_end":13521274,"line_start":3108,"line_end":3108,"column_start":9,"column_end":74}},{"value":"/ an edge case where the application maps a buffer with the same","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13521283,"byte_end":13521349,"line_start":3109,"line_end":3109,"column_start":9,"column_end":75}},{"value":"/ size of the output mode but buffer_scale 1 (thus making a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13521358,"byte_end":13521419,"line_start":3110,"line_end":3110,"column_start":9,"column_end":70}},{"value":"/ surface larger than the output). In this case it is allowed to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13521428,"byte_end":13521494,"line_start":3111,"line_end":3111,"column_start":9,"column_end":75}},{"value":"/ downscale the results to fit the screen.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13521503,"byte_end":13521547,"line_start":3112,"line_end":3112,"column_start":9,"column_end":53}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13521556,"byte_end":13521560,"line_start":3113,"line_end":3113,"column_start":9,"column_end":13}},{"value":"/ The compositor must reply to this request with a configure event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13521569,"byte_end":13521637,"line_start":3114,"line_end":3114,"column_start":9,"column_end":77}},{"value":"/ with the dimensions for the output on which the surface will","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13521646,"byte_end":13521710,"line_start":3115,"line_end":3115,"column_start":9,"column_end":73}},{"value":"/ be made fullscreen.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13521719,"byte_end":13521742,"line_start":3116,"line_end":3116,"column_start":9,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523112,"byte_end":13523121,"line_start":3141,"line_end":3141,"column_start":16,"column_end":25},"name":"set_popup","qualname":"<WlShellSurface>::set_popup","value":"pub fn set_popup(&Self, &super::wl_seat::WlSeat, u32,\n                 &super::wl_surface::WlSurface, i32, i32, Transient) -> ()","parent":null,"children":[],"decl_id":null,"docs":" make the surface a popup surface","sig":null,"attributes":[{"value":"/ make the surface a popup surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522086,"byte_end":13522122,"line_start":3120,"line_end":3120,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522131,"byte_end":13522134,"line_start":3121,"line_end":3121,"column_start":9,"column_end":12}},{"value":"/ Map the surface as a popup.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522143,"byte_end":13522174,"line_start":3122,"line_end":3122,"column_start":9,"column_end":40}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522183,"byte_end":13522187,"line_start":3123,"line_end":3123,"column_start":9,"column_end":13}},{"value":"/ A popup surface is a transient surface with an added pointer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522196,"byte_end":13522260,"line_start":3124,"line_end":3124,"column_start":9,"column_end":73}},{"value":"/ grab.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522269,"byte_end":13522278,"line_start":3125,"line_end":3125,"column_start":9,"column_end":18}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522287,"byte_end":13522291,"line_start":3126,"line_end":3126,"column_start":9,"column_end":13}},{"value":"/ An existing implicit grab will be changed to owner-events mode,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522300,"byte_end":13522367,"line_start":3127,"line_end":3127,"column_start":9,"column_end":76}},{"value":"/ and the popup grab will continue after the implicit grab ends","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522376,"byte_end":13522441,"line_start":3128,"line_end":3128,"column_start":9,"column_end":74}},{"value":"/ (i.e. releasing the mouse button does not cause the popup to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522450,"byte_end":13522514,"line_start":3129,"line_end":3129,"column_start":9,"column_end":73}},{"value":"/ be unmapped).","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522523,"byte_end":13522540,"line_start":3130,"line_end":3130,"column_start":9,"column_end":26}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522549,"byte_end":13522553,"line_start":3131,"line_end":3131,"column_start":9,"column_end":13}},{"value":"/ The popup grab continues until the window is destroyed or a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522562,"byte_end":13522625,"line_start":3132,"line_end":3132,"column_start":9,"column_end":72}},{"value":"/ mouse button is pressed in any other client's window. A click","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522634,"byte_end":13522699,"line_start":3133,"line_end":3133,"column_start":9,"column_end":74}},{"value":"/ in any of the client's surfaces is reported as normal, however,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522708,"byte_end":13522775,"line_start":3134,"line_end":3134,"column_start":9,"column_end":76}},{"value":"/ clicks in other clients' surfaces will be discarded and trigger","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522784,"byte_end":13522851,"line_start":3135,"line_end":3135,"column_start":9,"column_end":76}},{"value":"/ the callback.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522860,"byte_end":13522877,"line_start":3136,"line_end":3136,"column_start":9,"column_end":26}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522886,"byte_end":13522890,"line_start":3137,"line_end":3137,"column_start":9,"column_end":13}},{"value":"/ The x and y arguments specify the location of the upper left","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522899,"byte_end":13522963,"line_start":3138,"line_end":3138,"column_start":9,"column_end":73}},{"value":"/ corner of the surface relative to the upper left corner of the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13522972,"byte_end":13523038,"line_start":3139,"line_end":3139,"column_start":9,"column_end":75}},{"value":"/ parent surface, in surface-local coordinates.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523047,"byte_end":13523096,"line_start":3140,"line_end":3140,"column_start":9,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524432,"byte_end":13524445,"line_start":3164,"line_end":3164,"column_start":16,"column_end":29},"name":"set_maximized","qualname":"<WlShellSurface>::set_maximized","value":"pub fn set_maximized(&Self, Option<&super::wl_output::WlOutput>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" make the surface a maximized surface","sig":null,"attributes":[{"value":"/ make the surface a maximized surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523437,"byte_end":13523477,"line_start":3144,"line_end":3144,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523486,"byte_end":13523489,"line_start":3145,"line_end":3145,"column_start":9,"column_end":12}},{"value":"/ Map the surface as a maximized surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523498,"byte_end":13523541,"line_start":3146,"line_end":3146,"column_start":9,"column_end":52}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523550,"byte_end":13523554,"line_start":3147,"line_end":3147,"column_start":9,"column_end":13}},{"value":"/ If an output parameter is given then the surface will be","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523563,"byte_end":13523623,"line_start":3148,"line_end":3148,"column_start":9,"column_end":69}},{"value":"/ maximized on that output. If the client does not specify the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523632,"byte_end":13523696,"line_start":3149,"line_end":3149,"column_start":9,"column_end":73}},{"value":"/ output then the compositor will apply its policy - usually","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523705,"byte_end":13523767,"line_start":3150,"line_end":3150,"column_start":9,"column_end":71}},{"value":"/ choosing the output on which the surface has the biggest surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523776,"byte_end":13523844,"line_start":3151,"line_end":3151,"column_start":9,"column_end":77}},{"value":"/ area.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523853,"byte_end":13523862,"line_start":3152,"line_end":3152,"column_start":9,"column_end":18}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523871,"byte_end":13523875,"line_start":3153,"line_end":3153,"column_start":9,"column_end":13}},{"value":"/ The compositor will reply with a configure event telling","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523884,"byte_end":13523944,"line_start":3154,"line_end":3154,"column_start":9,"column_end":69}},{"value":"/ the expected new surface size. The operation is completed","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13523953,"byte_end":13524014,"line_start":3155,"line_end":3155,"column_start":9,"column_end":70}},{"value":"/ on the next buffer attach to this surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524023,"byte_end":13524069,"line_start":3156,"line_end":3156,"column_start":9,"column_end":55}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524078,"byte_end":13524082,"line_start":3157,"line_end":3157,"column_start":9,"column_end":13}},{"value":"/ A maximized surface typically fills the entire output it is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524091,"byte_end":13524154,"line_start":3158,"line_end":3158,"column_start":9,"column_end":72}},{"value":"/ bound to, except for desktop elements such as panels. This is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524163,"byte_end":13524228,"line_start":3159,"line_end":3159,"column_start":9,"column_end":74}},{"value":"/ the main difference between a maximized shell surface and a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524237,"byte_end":13524300,"line_start":3160,"line_end":3160,"column_start":9,"column_end":72}},{"value":"/ fullscreen shell surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524309,"byte_end":13524338,"line_start":3161,"line_end":3161,"column_start":9,"column_end":38}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524347,"byte_end":13524351,"line_start":3162,"line_end":3162,"column_start":9,"column_end":13}},{"value":"/ The details depend on the compositor implementation.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524360,"byte_end":13524416,"line_start":3163,"line_end":3163,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13525041,"byte_end":13525050,"line_start":3176,"line_end":3176,"column_start":16,"column_end":25},"name":"set_title","qualname":"<WlShellSurface>::set_title","value":"pub fn set_title(&Self, String) -> ()","parent":null,"children":[],"decl_id":null,"docs":" set surface title","sig":null,"attributes":[{"value":"/ set surface title","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524697,"byte_end":13524718,"line_start":3167,"line_end":3167,"column_start":9,"column_end":30}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524727,"byte_end":13524730,"line_start":3168,"line_end":3168,"column_start":9,"column_end":12}},{"value":"/ Set a short title for the surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524739,"byte_end":13524777,"line_start":3169,"line_end":3169,"column_start":9,"column_end":47}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524786,"byte_end":13524790,"line_start":3170,"line_end":3170,"column_start":9,"column_end":13}},{"value":"/ This string may be used to identify the surface in a task bar,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524799,"byte_end":13524865,"line_start":3171,"line_end":3171,"column_start":9,"column_end":75}},{"value":"/ window list, or other user interface elements provided by the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524874,"byte_end":13524939,"line_start":3172,"line_end":3172,"column_start":9,"column_end":74}},{"value":"/ compositor.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524948,"byte_end":13524963,"line_start":3173,"line_end":3173,"column_start":9,"column_end":24}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524972,"byte_end":13524976,"line_start":3174,"line_end":3174,"column_start":9,"column_end":13}},{"value":"/ The string must be encoded in UTF-8.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13524985,"byte_end":13525025,"line_start":3175,"line_end":3175,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13525765,"byte_end":13525774,"line_start":3188,"line_end":3188,"column_start":16,"column_end":25},"name":"set_class","qualname":"<WlShellSurface>::set_class","value":"pub fn set_class(&Self, String) -> ()","parent":null,"children":[],"decl_id":null,"docs":" set surface class","sig":null,"attributes":[{"value":"/ set surface class","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13525376,"byte_end":13525397,"line_start":3180,"line_end":3180,"column_start":9,"column_end":30}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13525406,"byte_end":13525409,"line_start":3181,"line_end":3181,"column_start":9,"column_end":12}},{"value":"/ Set a class for the surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13525418,"byte_end":13525450,"line_start":3182,"line_end":3182,"column_start":9,"column_end":41}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13525459,"byte_end":13525463,"line_start":3183,"line_end":3183,"column_start":9,"column_end":13}},{"value":"/ The surface class identifies the general class of applications","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13525472,"byte_end":13525538,"line_start":3184,"line_end":3184,"column_start":9,"column_end":75}},{"value":"/ to which the surface belongs. A common convention is to use the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13525547,"byte_end":13525614,"line_start":3185,"line_end":3185,"column_start":9,"column_end":76}},{"value":"/ file name (or the full path if it is a non-standard location) of","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13525623,"byte_end":13525691,"line_start":3186,"line_end":3186,"column_start":9,"column_end":77}},{"value":"/ the application's .desktop file as the class.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13525700,"byte_end":13525749,"line_start":3187,"line_end":3187,"column_start":9,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1802},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526113,"byte_end":13526123,"line_start":3194,"line_end":3194,"column_start":9,"column_end":19},"name":"wl_surface","qualname":"::generated::client::wl_surface","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1809},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":1834},{"krate":0,"index":1837},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1873},{"krate":0,"index":3278},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3288},{"krate":0,"index":3290},{"krate":0,"index":3291},{"krate":0,"index":1877},{"krate":0,"index":1880},{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1889},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902}],"decl_id":null,"docs":" an onscreen surface","sig":null,"attributes":[{"value":"/ an onscreen surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526130,"byte_end":13526153,"line_start":3195,"line_end":3195,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526158,"byte_end":13526161,"line_start":3196,"line_end":3196,"column_start":5,"column_end":8}},{"value":"/ A surface is a rectangular area that is displayed on the screen.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526166,"byte_end":13526234,"line_start":3197,"line_end":3197,"column_start":5,"column_end":73}},{"value":"/ It has a location, size and pixel contents.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526239,"byte_end":13526286,"line_start":3198,"line_end":3198,"column_start":5,"column_end":52}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526291,"byte_end":13526295,"line_start":3199,"line_end":3199,"column_start":5,"column_end":9}},{"value":"/ The size of a surface (and relative positions on it) is described","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526300,"byte_end":13526369,"line_start":3200,"line_end":3200,"column_start":5,"column_end":74}},{"value":"/ in surface-local coordinates, which may differ from the buffer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526374,"byte_end":13526440,"line_start":3201,"line_end":3201,"column_start":5,"column_end":71}},{"value":"/ coordinates of the pixel content, in case a buffer_transform","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526445,"byte_end":13526509,"line_start":3202,"line_end":3202,"column_start":5,"column_end":69}},{"value":"/ or a buffer_scale is used.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526514,"byte_end":13526544,"line_start":3203,"line_end":3203,"column_start":5,"column_end":35}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526549,"byte_end":13526553,"line_start":3204,"line_end":3204,"column_start":5,"column_end":9}},{"value":"/ A surface without a \"role\" is fairly useless: a compositor does","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526558,"byte_end":13526625,"line_start":3205,"line_end":3205,"column_start":5,"column_end":72}},{"value":"/ not know where, when or how to present it. The role is the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526630,"byte_end":13526692,"line_start":3206,"line_end":3206,"column_start":5,"column_end":67}},{"value":"/ purpose of a wl_surface. Examples of roles are a cursor for a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526697,"byte_end":13526762,"line_start":3207,"line_end":3207,"column_start":5,"column_end":70}},{"value":"/ pointer (as set by wl_pointer.set_cursor), a drag icon","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526767,"byte_end":13526825,"line_start":3208,"line_end":3208,"column_start":5,"column_end":63}},{"value":"/ (wl_data_device.start_drag), a sub-surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526830,"byte_end":13526876,"line_start":3209,"line_end":3209,"column_start":5,"column_end":51}},{"value":"/ (wl_subcompositor.get_subsurface), and a window as defined by a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526881,"byte_end":13526948,"line_start":3210,"line_end":3210,"column_start":5,"column_end":72}},{"value":"/ shell protocol (e.g. wl_shell.get_shell_surface).","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13526953,"byte_end":13527006,"line_start":3211,"line_end":3211,"column_start":5,"column_end":58}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527011,"byte_end":13527015,"line_start":3212,"line_end":3212,"column_start":5,"column_end":9}},{"value":"/ A surface can have only one role at a time. Initially a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527020,"byte_end":13527079,"line_start":3213,"line_end":3213,"column_start":5,"column_end":64}},{"value":"/ wl_surface does not have a role. Once a wl_surface is given a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527084,"byte_end":13527149,"line_start":3214,"line_end":3214,"column_start":5,"column_end":70}},{"value":"/ role, it is set permanently for the whole lifetime of the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527154,"byte_end":13527215,"line_start":3215,"line_end":3215,"column_start":5,"column_end":66}},{"value":"/ wl_surface object. Giving the current role again is allowed,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527220,"byte_end":13527284,"line_start":3216,"line_end":3216,"column_start":5,"column_end":69}},{"value":"/ unless explicitly forbidden by the relevant interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527289,"byte_end":13527346,"line_start":3217,"line_end":3217,"column_start":5,"column_end":62}},{"value":"/ specification.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527351,"byte_end":13527369,"line_start":3218,"line_end":3218,"column_start":5,"column_end":23}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527374,"byte_end":13527378,"line_start":3219,"line_end":3219,"column_start":5,"column_end":9}},{"value":"/ Surface roles are given by requests in other interfaces such as","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527383,"byte_end":13527450,"line_start":3220,"line_end":3220,"column_start":5,"column_end":72}},{"value":"/ wl_pointer.set_cursor. The request should explicitly mention","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527455,"byte_end":13527519,"line_start":3221,"line_end":3221,"column_start":5,"column_end":69}},{"value":"/ that this request gives a role to a wl_surface. Often, this","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527524,"byte_end":13527587,"line_start":3222,"line_end":3222,"column_start":5,"column_end":68}},{"value":"/ request also creates a new protocol object that represents the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527592,"byte_end":13527658,"line_start":3223,"line_end":3223,"column_start":5,"column_end":71}},{"value":"/ role and adds additional functionality to wl_surface. When a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527663,"byte_end":13527727,"line_start":3224,"line_end":3224,"column_start":5,"column_end":69}},{"value":"/ client wants to destroy a wl_surface, they must destroy this 'role","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527732,"byte_end":13527802,"line_start":3225,"line_end":3225,"column_start":5,"column_end":75}},{"value":"/ object' before the wl_surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527807,"byte_end":13527841,"line_start":3226,"line_end":3226,"column_start":5,"column_end":39}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527846,"byte_end":13527850,"line_start":3227,"line_end":3227,"column_start":5,"column_end":9}},{"value":"/ Destroying the role object does not remove the role from the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527855,"byte_end":13527919,"line_start":3228,"line_end":3228,"column_start":5,"column_end":69}},{"value":"/ wl_surface, but it may stop the wl_surface from \"playing the role\".","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13527924,"byte_end":13527995,"line_start":3229,"line_end":3229,"column_start":5,"column_end":76}},{"value":"/ For instance, if a wl_subsurface object is destroyed, the wl_surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13528000,"byte_end":13528072,"line_start":3230,"line_end":3230,"column_start":5,"column_end":77}},{"value":"/ it was created for will be unmapped and forget its position and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13528077,"byte_end":13528144,"line_start":3231,"line_end":3231,"column_start":5,"column_end":72}},{"value":"/ z-order. It is allowed to create a wl_subsurface for the same","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13528149,"byte_end":13528214,"line_start":3232,"line_end":3232,"column_start":5,"column_end":70}},{"value":"/ wl_surface again, but it is not allowed to use the wl_surface as","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13528219,"byte_end":13528287,"line_start":3233,"line_end":3233,"column_start":5,"column_end":73}},{"value":"/ a cursor (cursor is a different role than sub-surface, and role","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13528292,"byte_end":13528359,"line_start":3234,"line_end":3234,"column_start":5,"column_end":72}},{"value":"/ switching is not allowed).","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13528364,"byte_end":13528394,"line_start":3235,"line_end":3235,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1855},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13528956,"byte_end":13528965,"line_start":3253,"line_end":3253,"column_start":16,"column_end":25},"name":"WlSurface","qualname":"::generated::client::wl_surface::WlSurface","value":"WlSurface {  }","parent":null,"children":[{"krate":0,"index":1856},{"krate":0,"index":1857}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3279},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533155,"byte_end":13533167,"line_start":3363,"line_end":3363,"column_start":9,"column_end":21},"name":"InvalidScale","qualname":"::generated::client::wl_surface::Error::InvalidScale","value":"Error::InvalidScale","parent":{"krate":0,"index":3278},"children":[],"decl_id":null,"docs":" buffer scale value is invalid\n","sig":null,"attributes":[{"value":"/ buffer scale value is invalid","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533113,"byte_end":13533146,"line_start":3362,"line_end":3362,"column_start":9,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3282},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533227,"byte_end":13533243,"line_start":3365,"line_end":3365,"column_start":9,"column_end":25},"name":"InvalidTransform","qualname":"::generated::client::wl_surface::Error::InvalidTransform","value":"Error::InvalidTransform","parent":{"krate":0,"index":3278},"children":[],"decl_id":null,"docs":" buffer transform value is invalid\n","sig":null,"attributes":[{"value":"/ buffer transform value is invalid","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533181,"byte_end":13533218,"line_start":3364,"line_end":3364,"column_start":9,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":3278},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533097,"byte_end":13533102,"line_start":3361,"line_end":3361,"column_start":14,"column_end":19},"name":"Error","qualname":"::generated::client::wl_surface::Error","value":"pub enum Error { InvalidScale = , InvalidTransform = , }","parent":null,"children":[{"krate":0,"index":3279},{"krate":0,"index":3282}],"decl_id":null,"docs":" wl_surface error values","sig":null,"attributes":[{"value":"/ wl_surface error values","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13532917,"byte_end":13532944,"line_start":3356,"line_end":3356,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13532949,"byte_end":13532952,"line_start":3357,"line_end":3357,"column_start":5,"column_end":8}},{"value":"/ These errors can be emitted in response to wl_surface requests.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13532957,"byte_end":13533024,"line_start":3358,"line_end":3358,"column_start":5,"column_end":72}},{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533029,"byte_end":13533041,"line_start":3359,"line_end":3359,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533287,"byte_end":13533295,"line_start":3368,"line_end":3368,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533518,"byte_end":13533524,"line_start":3375,"line_end":3375,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1880},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533597,"byte_end":13533611,"line_start":3379,"line_end":3379,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_surface::Implementation","value":"Implementation { enter, leave }","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1883}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1882},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534042,"byte_end":13534047,"line_start":3389,"line_end":3389,"column_start":13,"column_end":18},"name":"enter","qualname":"::generated::client::wl_surface::Implementation::enter","value":"for<'r, 's, 't0, 't1> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_surface::WlSurface, &'t1 generated::client::wl_output::WlOutput)","parent":{"krate":0,"index":1880},"children":[],"decl_id":null,"docs":" surface enters an output","sig":null,"attributes":[{"value":"/ surface enters an output","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533626,"byte_end":13533654,"line_start":3380,"line_end":3380,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533663,"byte_end":13533666,"line_start":3381,"line_end":3381,"column_start":9,"column_end":12}},{"value":"/ This is emitted whenever a surface's creation, movement, or resizing","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533675,"byte_end":13533747,"line_start":3382,"line_end":3382,"column_start":9,"column_end":81}},{"value":"/ results in some part of it being within the scanout region of an","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533756,"byte_end":13533824,"line_start":3383,"line_end":3383,"column_start":9,"column_end":77}},{"value":"/ output.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533833,"byte_end":13533844,"line_start":3384,"line_end":3384,"column_start":9,"column_end":20}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533853,"byte_end":13533857,"line_start":3385,"line_end":3385,"column_start":9,"column_end":13}},{"value":"/ Note that a surface may be overlapping with zero or more outputs.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533866,"byte_end":13533935,"line_start":3386,"line_end":3386,"column_start":9,"column_end":78}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533944,"byte_end":13533947,"line_start":3387,"line_end":3387,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_surface, output","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533956,"byte_end":13534029,"line_start":3388,"line_end":3388,"column_start":9,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1883},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534505,"byte_end":13534510,"line_start":3397,"line_end":3397,"column_start":13,"column_end":18},"name":"leave","qualname":"::generated::client::wl_surface::Implementation::leave","value":"for<'r, 's, 't0, 't1> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_surface::WlSurface, &'t1 generated::client::wl_output::WlOutput)","parent":{"krate":0,"index":1880},"children":[],"decl_id":null,"docs":" surface leaves an output","sig":null,"attributes":[{"value":"/ surface leaves an output","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534167,"byte_end":13534195,"line_start":3390,"line_end":3390,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534204,"byte_end":13534207,"line_start":3391,"line_end":3391,"column_start":9,"column_end":12}},{"value":"/ This is emitted whenever a surface's creation, movement, or resizing","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534216,"byte_end":13534288,"line_start":3392,"line_end":3392,"column_start":9,"column_end":81}},{"value":"/ results in it no longer having any part of it within the scanout region","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534297,"byte_end":13534372,"line_start":3393,"line_end":3393,"column_start":9,"column_end":84}},{"value":"/ of an output.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534381,"byte_end":13534398,"line_start":3394,"line_end":3394,"column_start":9,"column_end":26}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534407,"byte_end":13534410,"line_start":3395,"line_end":3395,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_surface, output","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534419,"byte_end":13534492,"line_start":3396,"line_end":3396,"column_start":9,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13535748,"byte_end":13535755,"line_start":3432,"line_end":3432,"column_start":16,"column_end":23},"name":"destroy","qualname":"<WlSurface>::destroy","value":"pub fn destroy(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" delete surface","sig":null,"attributes":[{"value":"/ delete surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13535525,"byte_end":13535543,"line_start":3427,"line_end":3427,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13535552,"byte_end":13535555,"line_start":3428,"line_end":3428,"column_start":9,"column_end":12}},{"value":"/ Deletes the surface and invalidates its object ID.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13535564,"byte_end":13535618,"line_start":3429,"line_end":3429,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13535627,"byte_end":13535630,"line_start":3430,"line_end":3430,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13535639,"byte_end":13535732,"line_start":3431,"line_end":3431,"column_start":9,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538856,"byte_end":13538862,"line_start":3486,"line_end":3486,"column_start":16,"column_end":22},"name":"attach","qualname":"<WlSurface>::attach","value":"pub fn attach(&Self, Option<&super::wl_buffer::WlBuffer>, i32, i32)\n-> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" set the surface contents","sig":null,"attributes":[{"value":"/ set the surface contents","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13536474,"byte_end":13536502,"line_start":3445,"line_end":3445,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13536511,"byte_end":13536514,"line_start":3446,"line_end":3446,"column_start":9,"column_end":12}},{"value":"/ Set a buffer as the content of this surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13536523,"byte_end":13536571,"line_start":3447,"line_end":3447,"column_start":9,"column_end":57}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13536580,"byte_end":13536584,"line_start":3448,"line_end":3448,"column_start":9,"column_end":13}},{"value":"/ The new size of the surface is calculated based on the buffer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13536593,"byte_end":13536658,"line_start":3449,"line_end":3449,"column_start":9,"column_end":74}},{"value":"/ size transformed by the inverse buffer_transform and the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13536667,"byte_end":13536727,"line_start":3450,"line_end":3450,"column_start":9,"column_end":69}},{"value":"/ inverse buffer_scale. This means that the supplied buffer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13536736,"byte_end":13536797,"line_start":3451,"line_end":3451,"column_start":9,"column_end":70}},{"value":"/ must be an integer multiple of the buffer_scale.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13536806,"byte_end":13536858,"line_start":3452,"line_end":3452,"column_start":9,"column_end":61}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13536867,"byte_end":13536871,"line_start":3453,"line_end":3453,"column_start":9,"column_end":13}},{"value":"/ The x and y arguments specify the location of the new pending","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13536880,"byte_end":13536945,"line_start":3454,"line_end":3454,"column_start":9,"column_end":74}},{"value":"/ buffer's upper left corner, relative to the current buffer's upper","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13536954,"byte_end":13537024,"line_start":3455,"line_end":3455,"column_start":9,"column_end":79}},{"value":"/ left corner, in surface-local coordinates. In other words, the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537033,"byte_end":13537099,"line_start":3456,"line_end":3456,"column_start":9,"column_end":75}},{"value":"/ x and y, combined with the new surface size define in which","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537108,"byte_end":13537171,"line_start":3457,"line_end":3457,"column_start":9,"column_end":72}},{"value":"/ directions the surface's size changes.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537180,"byte_end":13537222,"line_start":3458,"line_end":3458,"column_start":9,"column_end":51}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537231,"byte_end":13537235,"line_start":3459,"line_end":3459,"column_start":9,"column_end":13}},{"value":"/ Surface contents are double-buffered state, see wl_surface.commit.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537244,"byte_end":13537314,"line_start":3460,"line_end":3460,"column_start":9,"column_end":79}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537323,"byte_end":13537327,"line_start":3461,"line_end":3461,"column_start":9,"column_end":13}},{"value":"/ The initial surface contents are void; there is no content.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537336,"byte_end":13537399,"line_start":3462,"line_end":3462,"column_start":9,"column_end":72}},{"value":"/ wl_surface.attach assigns the given wl_buffer as the pending","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537408,"byte_end":13537472,"line_start":3463,"line_end":3463,"column_start":9,"column_end":73}},{"value":"/ wl_buffer. wl_surface.commit makes the pending wl_buffer the new","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537481,"byte_end":13537549,"line_start":3464,"line_end":3464,"column_start":9,"column_end":77}},{"value":"/ surface contents, and the size of the surface becomes the size","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537558,"byte_end":13537624,"line_start":3465,"line_end":3465,"column_start":9,"column_end":75}},{"value":"/ calculated from the wl_buffer, as described above. After commit,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537633,"byte_end":13537701,"line_start":3466,"line_end":3466,"column_start":9,"column_end":77}},{"value":"/ there is no pending buffer until the next attach.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537710,"byte_end":13537763,"line_start":3467,"line_end":3467,"column_start":9,"column_end":62}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537772,"byte_end":13537776,"line_start":3468,"line_end":3468,"column_start":9,"column_end":13}},{"value":"/ Committing a pending wl_buffer allows the compositor to read the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537785,"byte_end":13537853,"line_start":3469,"line_end":3469,"column_start":9,"column_end":77}},{"value":"/ pixels in the wl_buffer. The compositor may access the pixels at","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537862,"byte_end":13537930,"line_start":3470,"line_end":3470,"column_start":9,"column_end":77}},{"value":"/ any time after the wl_surface.commit request. When the compositor","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13537939,"byte_end":13538008,"line_start":3471,"line_end":3471,"column_start":9,"column_end":78}},{"value":"/ will not access the pixels anymore, it will send the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538017,"byte_end":13538073,"line_start":3472,"line_end":3472,"column_start":9,"column_end":65}},{"value":"/ wl_buffer.release event. Only after receiving wl_buffer.release,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538082,"byte_end":13538150,"line_start":3473,"line_end":3473,"column_start":9,"column_end":77}},{"value":"/ the client may reuse the wl_buffer. A wl_buffer that has been","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538159,"byte_end":13538224,"line_start":3474,"line_end":3474,"column_start":9,"column_end":74}},{"value":"/ attached and then replaced by another attach instead of committed","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538233,"byte_end":13538302,"line_start":3475,"line_end":3475,"column_start":9,"column_end":78}},{"value":"/ will not receive a release event, and is not used by the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538311,"byte_end":13538371,"line_start":3476,"line_end":3476,"column_start":9,"column_end":69}},{"value":"/ compositor.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538380,"byte_end":13538395,"line_start":3477,"line_end":3477,"column_start":9,"column_end":24}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538404,"byte_end":13538408,"line_start":3478,"line_end":3478,"column_start":9,"column_end":13}},{"value":"/ Destroying the wl_buffer after wl_buffer.release does not change","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538417,"byte_end":13538485,"line_start":3479,"line_end":3479,"column_start":9,"column_end":77}},{"value":"/ the surface contents. However, if the client destroys the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538494,"byte_end":13538555,"line_start":3480,"line_end":3480,"column_start":9,"column_end":70}},{"value":"/ wl_buffer before receiving the wl_buffer.release event, the surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538564,"byte_end":13538635,"line_start":3481,"line_end":3481,"column_start":9,"column_end":80}},{"value":"/ contents become undefined immediately.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538644,"byte_end":13538686,"line_start":3482,"line_end":3482,"column_start":9,"column_end":51}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538695,"byte_end":13538699,"line_start":3483,"line_end":3483,"column_start":9,"column_end":13}},{"value":"/ If wl_surface.attach is sent with a NULL wl_buffer, the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538708,"byte_end":13538767,"line_start":3484,"line_end":3484,"column_start":9,"column_end":68}},{"value":"/ following wl_surface.commit will remove the surface content.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13538776,"byte_end":13538840,"line_start":3485,"line_end":3485,"column_start":9,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13540552,"byte_end":13540558,"line_start":3514,"line_end":3514,"column_start":16,"column_end":22},"name":"damage","qualname":"<WlSurface>::damage","value":"pub fn damage(&Self, i32, i32, i32, i32) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" mark part of the surface damaged","sig":null,"attributes":[{"value":"/ mark part of the surface damaged","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539257,"byte_end":13539293,"line_start":3491,"line_end":3491,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539302,"byte_end":13539305,"line_start":3492,"line_end":3492,"column_start":9,"column_end":12}},{"value":"/ This request is used to describe the regions where the pending","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539314,"byte_end":13539380,"line_start":3493,"line_end":3493,"column_start":9,"column_end":75}},{"value":"/ buffer is different from the current surface contents, and where","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539389,"byte_end":13539457,"line_start":3494,"line_end":3494,"column_start":9,"column_end":77}},{"value":"/ the surface therefore needs to be repainted. The compositor","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539466,"byte_end":13539529,"line_start":3495,"line_end":3495,"column_start":9,"column_end":72}},{"value":"/ ignores the parts of the damage that fall outside of the surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539538,"byte_end":13539607,"line_start":3496,"line_end":3496,"column_start":9,"column_end":78}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539616,"byte_end":13539620,"line_start":3497,"line_end":3497,"column_start":9,"column_end":13}},{"value":"/ Damage is double-buffered state, see wl_surface.commit.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539629,"byte_end":13539688,"line_start":3498,"line_end":3498,"column_start":9,"column_end":68}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539697,"byte_end":13539701,"line_start":3499,"line_end":3499,"column_start":9,"column_end":13}},{"value":"/ The damage rectangle is specified in surface-local coordinates,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539710,"byte_end":13539777,"line_start":3500,"line_end":3500,"column_start":9,"column_end":76}},{"value":"/ where x and y specify the upper left corner of the damage rectangle.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539786,"byte_end":13539858,"line_start":3501,"line_end":3501,"column_start":9,"column_end":81}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539867,"byte_end":13539871,"line_start":3502,"line_end":3502,"column_start":9,"column_end":13}},{"value":"/ The initial value for pending damage is empty: no damage.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539880,"byte_end":13539941,"line_start":3503,"line_end":3503,"column_start":9,"column_end":70}},{"value":"/ wl_surface.damage adds pending damage: the new pending damage","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13539950,"byte_end":13540015,"line_start":3504,"line_end":3504,"column_start":9,"column_end":74}},{"value":"/ is the union of old pending damage and the given rectangle.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13540024,"byte_end":13540087,"line_start":3505,"line_end":3505,"column_start":9,"column_end":72}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13540096,"byte_end":13540100,"line_start":3506,"line_end":3506,"column_start":9,"column_end":13}},{"value":"/ wl_surface.commit assigns pending damage as the current damage,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13540109,"byte_end":13540176,"line_start":3507,"line_end":3507,"column_start":9,"column_end":76}},{"value":"/ and clears pending damage. The server will clear the current","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13540185,"byte_end":13540249,"line_start":3508,"line_end":3508,"column_start":9,"column_end":73}},{"value":"/ damage as it repaints the surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13540258,"byte_end":13540296,"line_start":3509,"line_end":3509,"column_start":9,"column_end":47}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13540305,"byte_end":13540309,"line_start":3510,"line_end":3510,"column_start":9,"column_end":13}},{"value":"/ Alternatively, damage can be posted with wl_surface.damage_buffer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13540318,"byte_end":13540387,"line_start":3511,"line_end":3511,"column_start":9,"column_end":78}},{"value":"/ which uses buffer coordinates instead of surface coordinates,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13540396,"byte_end":13540461,"line_start":3512,"line_end":3512,"column_start":9,"column_end":74}},{"value":"/ and is probably the preferred and intuitive way of doing this.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13540470,"byte_end":13540536,"line_start":3513,"line_end":3513,"column_start":9,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542896,"byte_end":13542901,"line_start":3553,"line_end":3553,"column_start":16,"column_end":21},"name":"frame","qualname":"<WlSurface>::frame","value":"pub fn frame(&Self) -> RequestResult<super::wl_callback::WlCallback>","parent":null,"children":[],"decl_id":null,"docs":" request a frame throttling hint","sig":null,"attributes":[{"value":"/ request a frame throttling hint","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13540897,"byte_end":13540932,"line_start":3519,"line_end":3519,"column_start":9,"column_end":44}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13540941,"byte_end":13540944,"line_start":3520,"line_end":3520,"column_start":9,"column_end":12}},{"value":"/ Request a notification when it is a good time to start drawing a new","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13540953,"byte_end":13541025,"line_start":3521,"line_end":3521,"column_start":9,"column_end":81}},{"value":"/ frame, by creating a frame callback. This is useful for throttling","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541034,"byte_end":13541104,"line_start":3522,"line_end":3522,"column_start":9,"column_end":79}},{"value":"/ redrawing operations, and driving animations.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541113,"byte_end":13541162,"line_start":3523,"line_end":3523,"column_start":9,"column_end":58}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541171,"byte_end":13541175,"line_start":3524,"line_end":3524,"column_start":9,"column_end":13}},{"value":"/ When a client is animating on a wl_surface, it can use the 'frame'","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541184,"byte_end":13541254,"line_start":3525,"line_end":3525,"column_start":9,"column_end":79}},{"value":"/ request to get notified when it is a good time to draw and commit the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541263,"byte_end":13541336,"line_start":3526,"line_end":3526,"column_start":9,"column_end":82}},{"value":"/ next frame of animation. If the client commits an update earlier than","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541345,"byte_end":13541418,"line_start":3527,"line_end":3527,"column_start":9,"column_end":82}},{"value":"/ that, it is likely that some updates will not make it to the display,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541427,"byte_end":13541500,"line_start":3528,"line_end":3528,"column_start":9,"column_end":82}},{"value":"/ and the client is wasting resources by drawing too often.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541509,"byte_end":13541570,"line_start":3529,"line_end":3529,"column_start":9,"column_end":70}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541579,"byte_end":13541583,"line_start":3530,"line_end":3530,"column_start":9,"column_end":13}},{"value":"/ The frame request will take effect on the next wl_surface.commit.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541592,"byte_end":13541661,"line_start":3531,"line_end":3531,"column_start":9,"column_end":78}},{"value":"/ The notification will only be posted for one frame unless","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541670,"byte_end":13541731,"line_start":3532,"line_end":3532,"column_start":9,"column_end":70}},{"value":"/ requested again. For a wl_surface, the notifications are posted in","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541740,"byte_end":13541810,"line_start":3533,"line_end":3533,"column_start":9,"column_end":79}},{"value":"/ the order the frame requests were committed.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541819,"byte_end":13541867,"line_start":3534,"line_end":3534,"column_start":9,"column_end":57}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541876,"byte_end":13541880,"line_start":3535,"line_end":3535,"column_start":9,"column_end":13}},{"value":"/ The server must send the notifications so that a client","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541889,"byte_end":13541948,"line_start":3536,"line_end":3536,"column_start":9,"column_end":68}},{"value":"/ will not send excessive updates, while still allowing","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13541957,"byte_end":13542014,"line_start":3537,"line_end":3537,"column_start":9,"column_end":66}},{"value":"/ the highest possible update rate for clients that wait for the reply","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542023,"byte_end":13542095,"line_start":3538,"line_end":3538,"column_start":9,"column_end":81}},{"value":"/ before drawing again. The server should give some time for the client","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542104,"byte_end":13542177,"line_start":3539,"line_end":3539,"column_start":9,"column_end":82}},{"value":"/ to draw and commit after sending the frame callback events to let it","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542186,"byte_end":13542258,"line_start":3540,"line_end":3540,"column_start":9,"column_end":81}},{"value":"/ hit the next output refresh.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542267,"byte_end":13542299,"line_start":3541,"line_end":3541,"column_start":9,"column_end":41}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542308,"byte_end":13542312,"line_start":3542,"line_end":3542,"column_start":9,"column_end":13}},{"value":"/ A server should avoid signaling the frame callbacks if the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542321,"byte_end":13542383,"line_start":3543,"line_end":3543,"column_start":9,"column_end":71}},{"value":"/ surface is not visible in any way, e.g. the surface is off-screen,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542392,"byte_end":13542462,"line_start":3544,"line_end":3544,"column_start":9,"column_end":79}},{"value":"/ or completely obscured by other opaque surfaces.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542471,"byte_end":13542523,"line_start":3545,"line_end":3545,"column_start":9,"column_end":61}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542532,"byte_end":13542536,"line_start":3546,"line_end":3546,"column_start":9,"column_end":13}},{"value":"/ The object returned by this request will be destroyed by the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542545,"byte_end":13542609,"line_start":3547,"line_end":3547,"column_start":9,"column_end":73}},{"value":"/ compositor after the callback is fired and as such the client must not","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542618,"byte_end":13542692,"line_start":3548,"line_end":3548,"column_start":9,"column_end":83}},{"value":"/ attempt to use it after that point.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542701,"byte_end":13542740,"line_start":3549,"line_end":3549,"column_start":9,"column_end":48}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542749,"byte_end":13542753,"line_start":3550,"line_end":3550,"column_start":9,"column_end":13}},{"value":"/ The callback_data passed in the callback is the current time, in","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542762,"byte_end":13542830,"line_start":3551,"line_end":3551,"column_start":9,"column_end":77}},{"value":"/ milliseconds, with an undefined base.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13542839,"byte_end":13542880,"line_start":3552,"line_end":3552,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13544666,"byte_end":13544683,"line_start":3585,"line_end":3585,"column_start":16,"column_end":33},"name":"set_opaque_region","qualname":"<WlSurface>::set_opaque_region","value":"pub fn set_opaque_region(&Self, Option<&super::wl_region::WlRegion>)\n-> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" set opaque region","sig":null,"attributes":[{"value":"/ set opaque region","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543344,"byte_end":13543365,"line_start":3559,"line_end":3559,"column_start":9,"column_end":30}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543374,"byte_end":13543377,"line_start":3560,"line_end":3560,"column_start":9,"column_end":12}},{"value":"/ This request sets the region of the surface that contains","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543386,"byte_end":13543447,"line_start":3561,"line_end":3561,"column_start":9,"column_end":70}},{"value":"/ opaque content.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543456,"byte_end":13543475,"line_start":3562,"line_end":3562,"column_start":9,"column_end":28}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543484,"byte_end":13543488,"line_start":3563,"line_end":3563,"column_start":9,"column_end":13}},{"value":"/ The opaque region is an optimization hint for the compositor","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543497,"byte_end":13543561,"line_start":3564,"line_end":3564,"column_start":9,"column_end":73}},{"value":"/ that lets it optimize the redrawing of content behind opaque","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543570,"byte_end":13543634,"line_start":3565,"line_end":3565,"column_start":9,"column_end":73}},{"value":"/ regions.  Setting an opaque region is not required for correct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543643,"byte_end":13543709,"line_start":3566,"line_end":3566,"column_start":9,"column_end":75}},{"value":"/ behaviour, but marking transparent content as opaque will result","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543718,"byte_end":13543786,"line_start":3567,"line_end":3567,"column_start":9,"column_end":77}},{"value":"/ in repaint artifacts.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543795,"byte_end":13543820,"line_start":3568,"line_end":3568,"column_start":9,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543829,"byte_end":13543833,"line_start":3569,"line_end":3569,"column_start":9,"column_end":13}},{"value":"/ The opaque region is specified in surface-local coordinates.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543842,"byte_end":13543906,"line_start":3570,"line_end":3570,"column_start":9,"column_end":73}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543915,"byte_end":13543919,"line_start":3571,"line_end":3571,"column_start":9,"column_end":13}},{"value":"/ The compositor ignores the parts of the opaque region that fall","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13543928,"byte_end":13543995,"line_start":3572,"line_end":3572,"column_start":9,"column_end":76}},{"value":"/ outside of the surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13544004,"byte_end":13544031,"line_start":3573,"line_end":3573,"column_start":9,"column_end":36}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13544040,"byte_end":13544044,"line_start":3574,"line_end":3574,"column_start":9,"column_end":13}},{"value":"/ Opaque region is double-buffered state, see wl_surface.commit.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13544053,"byte_end":13544119,"line_start":3575,"line_end":3575,"column_start":9,"column_end":75}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13544128,"byte_end":13544132,"line_start":3576,"line_end":3576,"column_start":9,"column_end":13}},{"value":"/ wl_surface.set_opaque_region changes the pending opaque region.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13544141,"byte_end":13544208,"line_start":3577,"line_end":3577,"column_start":9,"column_end":76}},{"value":"/ wl_surface.commit copies the pending region to the current region.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13544217,"byte_end":13544287,"line_start":3578,"line_end":3578,"column_start":9,"column_end":79}},{"value":"/ Otherwise, the pending and current regions are never changed.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13544296,"byte_end":13544361,"line_start":3579,"line_end":3579,"column_start":9,"column_end":74}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13544370,"byte_end":13544374,"line_start":3580,"line_end":3580,"column_start":9,"column_end":13}},{"value":"/ The initial value for an opaque region is empty. Setting the pending","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13544383,"byte_end":13544455,"line_start":3581,"line_end":3581,"column_start":9,"column_end":81}},{"value":"/ opaque region has copy semantics, and the wl_region object can be","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13544464,"byte_end":13544533,"line_start":3582,"line_end":3582,"column_start":9,"column_end":78}},{"value":"/ destroyed immediately. A NULL wl_region causes the pending opaque","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13544542,"byte_end":13544611,"line_start":3583,"line_end":3583,"column_start":9,"column_end":78}},{"value":"/ region to be set to empty.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13544620,"byte_end":13544650,"line_start":3584,"line_end":3584,"column_start":9,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13546350,"byte_end":13546366,"line_start":3614,"line_end":3614,"column_start":16,"column_end":32},"name":"set_input_region","qualname":"<WlSurface>::set_input_region","value":"pub fn set_input_region(&Self, Option<&super::wl_region::WlRegion>)\n-> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" set input region","sig":null,"attributes":[{"value":"/ set input region","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545067,"byte_end":13545087,"line_start":3590,"line_end":3590,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545096,"byte_end":13545099,"line_start":3591,"line_end":3591,"column_start":9,"column_end":12}},{"value":"/ This request sets the region of the surface that can receive","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545108,"byte_end":13545172,"line_start":3592,"line_end":3592,"column_start":9,"column_end":73}},{"value":"/ pointer and touch events.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545181,"byte_end":13545210,"line_start":3593,"line_end":3593,"column_start":9,"column_end":38}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545219,"byte_end":13545223,"line_start":3594,"line_end":3594,"column_start":9,"column_end":13}},{"value":"/ Input events happening outside of this region will try the next","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545232,"byte_end":13545299,"line_start":3595,"line_end":3595,"column_start":9,"column_end":76}},{"value":"/ surface in the server surface stack. The compositor ignores the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545308,"byte_end":13545375,"line_start":3596,"line_end":3596,"column_start":9,"column_end":76}},{"value":"/ parts of the input region that fall outside of the surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545384,"byte_end":13545447,"line_start":3597,"line_end":3597,"column_start":9,"column_end":72}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545456,"byte_end":13545460,"line_start":3598,"line_end":3598,"column_start":9,"column_end":13}},{"value":"/ The input region is specified in surface-local coordinates.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545469,"byte_end":13545532,"line_start":3599,"line_end":3599,"column_start":9,"column_end":72}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545541,"byte_end":13545545,"line_start":3600,"line_end":3600,"column_start":9,"column_end":13}},{"value":"/ Input region is double-buffered state, see wl_surface.commit.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545554,"byte_end":13545619,"line_start":3601,"line_end":3601,"column_start":9,"column_end":74}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545628,"byte_end":13545632,"line_start":3602,"line_end":3602,"column_start":9,"column_end":13}},{"value":"/ wl_surface.set_input_region changes the pending input region.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545641,"byte_end":13545706,"line_start":3603,"line_end":3603,"column_start":9,"column_end":74}},{"value":"/ wl_surface.commit copies the pending region to the current region.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545715,"byte_end":13545785,"line_start":3604,"line_end":3604,"column_start":9,"column_end":79}},{"value":"/ Otherwise the pending and current regions are never changed,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545794,"byte_end":13545858,"line_start":3605,"line_end":3605,"column_start":9,"column_end":73}},{"value":"/ except cursor and icon surfaces are special cases, see","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545867,"byte_end":13545925,"line_start":3606,"line_end":3606,"column_start":9,"column_end":67}},{"value":"/ wl_pointer.set_cursor and wl_data_device.start_drag.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545934,"byte_end":13545990,"line_start":3607,"line_end":3607,"column_start":9,"column_end":65}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13545999,"byte_end":13546003,"line_start":3608,"line_end":3608,"column_start":9,"column_end":13}},{"value":"/ The initial value for an input region is infinite. That means the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13546012,"byte_end":13546081,"line_start":3609,"line_end":3609,"column_start":9,"column_end":78}},{"value":"/ whole surface will accept input. Setting the pending input region","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13546090,"byte_end":13546159,"line_start":3610,"line_end":3610,"column_start":9,"column_end":78}},{"value":"/ has copy semantics, and the wl_region object can be destroyed","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13546168,"byte_end":13546233,"line_start":3611,"line_end":3611,"column_start":9,"column_end":74}},{"value":"/ immediately. A NULL wl_region causes the input region to be set","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13546242,"byte_end":13546309,"line_start":3612,"line_end":3612,"column_start":9,"column_end":76}},{"value":"/ to infinite.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13546318,"byte_end":13546334,"line_start":3613,"line_end":3613,"column_start":9,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547857,"byte_end":13547863,"line_start":3638,"line_end":3638,"column_start":16,"column_end":22},"name":"commit","qualname":"<WlSurface>::commit","value":"pub fn commit(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" commit pending surface state","sig":null,"attributes":[{"value":"/ commit pending surface state","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13546749,"byte_end":13546781,"line_start":3619,"line_end":3619,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13546790,"byte_end":13546793,"line_start":3620,"line_end":3620,"column_start":9,"column_end":12}},{"value":"/ Surface state (input, opaque, and damage regions, attached buffers,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13546802,"byte_end":13546873,"line_start":3621,"line_end":3621,"column_start":9,"column_end":80}},{"value":"/ etc.) is double-buffered. Protocol requests modify the pending state,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13546882,"byte_end":13546955,"line_start":3622,"line_end":3622,"column_start":9,"column_end":82}},{"value":"/ as opposed to the current state in use by the compositor. A commit","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13546964,"byte_end":13547034,"line_start":3623,"line_end":3623,"column_start":9,"column_end":79}},{"value":"/ request atomically applies all pending state, replacing the current","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547043,"byte_end":13547114,"line_start":3624,"line_end":3624,"column_start":9,"column_end":80}},{"value":"/ state. After commit, the new pending state is as documented for each","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547123,"byte_end":13547195,"line_start":3625,"line_end":3625,"column_start":9,"column_end":81}},{"value":"/ related request.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547204,"byte_end":13547224,"line_start":3626,"line_end":3626,"column_start":9,"column_end":29}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547233,"byte_end":13547237,"line_start":3627,"line_end":3627,"column_start":9,"column_end":13}},{"value":"/ On commit, a pending wl_buffer is applied first, and all other state","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547246,"byte_end":13547318,"line_start":3628,"line_end":3628,"column_start":9,"column_end":81}},{"value":"/ second. This means that all coordinates in double-buffered state are","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547327,"byte_end":13547399,"line_start":3629,"line_end":3629,"column_start":9,"column_end":81}},{"value":"/ relative to the new wl_buffer coming into use, except for","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547408,"byte_end":13547469,"line_start":3630,"line_end":3630,"column_start":9,"column_end":70}},{"value":"/ wl_surface.attach itself. If there is no pending wl_buffer, the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547478,"byte_end":13547545,"line_start":3631,"line_end":3631,"column_start":9,"column_end":76}},{"value":"/ coordinates are relative to the current surface contents.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547554,"byte_end":13547615,"line_start":3632,"line_end":3632,"column_start":9,"column_end":70}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547624,"byte_end":13547628,"line_start":3633,"line_end":3633,"column_start":9,"column_end":13}},{"value":"/ All requests that need a commit to become effective are documented","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547637,"byte_end":13547707,"line_start":3634,"line_end":3634,"column_start":9,"column_end":79}},{"value":"/ to affect double-buffered state.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547716,"byte_end":13547752,"line_start":3635,"line_end":3635,"column_start":9,"column_end":45}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547761,"byte_end":13547765,"line_start":3636,"line_end":3636,"column_start":9,"column_end":13}},{"value":"/ Other interfaces may add further double-buffered surface state.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13547774,"byte_end":13547841,"line_start":3637,"line_end":3637,"column_start":9,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549974,"byte_end":13549994,"line_start":3676,"line_end":3676,"column_start":16,"column_end":36},"name":"set_buffer_transform","qualname":"<WlSurface>::set_buffer_transform","value":"pub fn set_buffer_transform(&Self, super::wl_output::Transform)\n-> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" sets the buffer transformation","sig":null,"attributes":[{"value":"/ sets the buffer transformation","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548140,"byte_end":13548174,"line_start":3643,"line_end":3643,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548183,"byte_end":13548186,"line_start":3644,"line_end":3644,"column_start":9,"column_end":12}},{"value":"/ This request sets an optional transformation on how the compositor","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548195,"byte_end":13548265,"line_start":3645,"line_end":3645,"column_start":9,"column_end":79}},{"value":"/ interprets the contents of the buffer attached to the surface. The","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548274,"byte_end":13548344,"line_start":3646,"line_end":3646,"column_start":9,"column_end":79}},{"value":"/ accepted values for the transform parameter are the values for","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548353,"byte_end":13548419,"line_start":3647,"line_end":3647,"column_start":9,"column_end":75}},{"value":"/ wl_output.transform.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548428,"byte_end":13548452,"line_start":3648,"line_end":3648,"column_start":9,"column_end":33}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548461,"byte_end":13548465,"line_start":3649,"line_end":3649,"column_start":9,"column_end":13}},{"value":"/ Buffer transform is double-buffered state, see wl_surface.commit.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548474,"byte_end":13548543,"line_start":3650,"line_end":3650,"column_start":9,"column_end":78}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548552,"byte_end":13548556,"line_start":3651,"line_end":3651,"column_start":9,"column_end":13}},{"value":"/ A newly created surface has its buffer transformation set to normal.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548565,"byte_end":13548637,"line_start":3652,"line_end":3652,"column_start":9,"column_end":81}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548646,"byte_end":13548650,"line_start":3653,"line_end":3653,"column_start":9,"column_end":13}},{"value":"/ wl_surface.set_buffer_transform changes the pending buffer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548659,"byte_end":13548721,"line_start":3654,"line_end":3654,"column_start":9,"column_end":71}},{"value":"/ transformation. wl_surface.commit copies the pending buffer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548730,"byte_end":13548793,"line_start":3655,"line_end":3655,"column_start":9,"column_end":72}},{"value":"/ transformation to the current one. Otherwise, the pending and current","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548802,"byte_end":13548875,"line_start":3656,"line_end":3656,"column_start":9,"column_end":82}},{"value":"/ values are never changed.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548884,"byte_end":13548913,"line_start":3657,"line_end":3657,"column_start":9,"column_end":38}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548922,"byte_end":13548926,"line_start":3658,"line_end":3658,"column_start":9,"column_end":13}},{"value":"/ The purpose of this request is to allow clients to render content","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13548935,"byte_end":13549004,"line_start":3659,"line_end":3659,"column_start":9,"column_end":78}},{"value":"/ according to the output transform, thus permitting the compositor to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549013,"byte_end":13549085,"line_start":3660,"line_end":3660,"column_start":9,"column_end":81}},{"value":"/ use certain optimizations even if the display is rotated. Using","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549094,"byte_end":13549161,"line_start":3661,"line_end":3661,"column_start":9,"column_end":76}},{"value":"/ hardware overlays and scanning out a client buffer for fullscreen","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549170,"byte_end":13549239,"line_start":3662,"line_end":3662,"column_start":9,"column_end":78}},{"value":"/ surfaces are examples of such optimizations. Those optimizations are","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549248,"byte_end":13549320,"line_start":3663,"line_end":3663,"column_start":9,"column_end":81}},{"value":"/ highly dependent on the compositor implementation, so the use of this","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549329,"byte_end":13549402,"line_start":3664,"line_end":3664,"column_start":9,"column_end":82}},{"value":"/ request should be considered on a case-by-case basis.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549411,"byte_end":13549468,"line_start":3665,"line_end":3665,"column_start":9,"column_end":66}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549477,"byte_end":13549481,"line_start":3666,"line_end":3666,"column_start":9,"column_end":13}},{"value":"/ Note that if the transform value includes 90 or 270 degree rotation,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549490,"byte_end":13549562,"line_start":3667,"line_end":3667,"column_start":9,"column_end":81}},{"value":"/ the width of the buffer will become the surface height and the height","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549571,"byte_end":13549644,"line_start":3668,"line_end":3668,"column_start":9,"column_end":82}},{"value":"/ of the buffer will become the surface width.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549653,"byte_end":13549701,"line_start":3669,"line_end":3669,"column_start":9,"column_end":57}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549710,"byte_end":13549714,"line_start":3670,"line_end":3670,"column_start":9,"column_end":13}},{"value":"/ If transform is not one of the values from the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549723,"byte_end":13549773,"line_start":3671,"line_end":3671,"column_start":9,"column_end":59}},{"value":"/ wl_output.transform enum the invalid_transform protocol error","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549782,"byte_end":13549847,"line_start":3672,"line_end":3672,"column_start":9,"column_end":74}},{"value":"/ is raised.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549856,"byte_end":13549870,"line_start":3673,"line_end":3673,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549879,"byte_end":13549882,"line_start":3674,"line_end":3674,"column_start":9,"column_end":12}},{"value":"/ This request is only available since version 2 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13549891,"byte_end":13549958,"line_start":3675,"line_end":3675,"column_start":9,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551760,"byte_end":13551776,"line_start":3708,"line_end":3708,"column_start":16,"column_end":32},"name":"set_buffer_scale","qualname":"<WlSurface>::set_buffer_scale","value":"pub fn set_buffer_scale(&Self, i32) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" sets the buffer scaling factor","sig":null,"attributes":[{"value":"/ sets the buffer scaling factor","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550336,"byte_end":13550370,"line_start":3681,"line_end":3681,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550379,"byte_end":13550382,"line_start":3682,"line_end":3682,"column_start":9,"column_end":12}},{"value":"/ This request sets an optional scaling factor on how the compositor","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550391,"byte_end":13550461,"line_start":3683,"line_end":3683,"column_start":9,"column_end":79}},{"value":"/ interprets the contents of the buffer attached to the window.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550470,"byte_end":13550535,"line_start":3684,"line_end":3684,"column_start":9,"column_end":74}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550544,"byte_end":13550548,"line_start":3685,"line_end":3685,"column_start":9,"column_end":13}},{"value":"/ Buffer scale is double-buffered state, see wl_surface.commit.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550557,"byte_end":13550622,"line_start":3686,"line_end":3686,"column_start":9,"column_end":74}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550631,"byte_end":13550635,"line_start":3687,"line_end":3687,"column_start":9,"column_end":13}},{"value":"/ A newly created surface has its buffer scale set to 1.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550644,"byte_end":13550702,"line_start":3688,"line_end":3688,"column_start":9,"column_end":67}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550711,"byte_end":13550715,"line_start":3689,"line_end":3689,"column_start":9,"column_end":13}},{"value":"/ wl_surface.set_buffer_scale changes the pending buffer scale.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550724,"byte_end":13550789,"line_start":3690,"line_end":3690,"column_start":9,"column_end":74}},{"value":"/ wl_surface.commit copies the pending buffer scale to the current one.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550798,"byte_end":13550871,"line_start":3691,"line_end":3691,"column_start":9,"column_end":82}},{"value":"/ Otherwise, the pending and current values are never changed.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550880,"byte_end":13550944,"line_start":3692,"line_end":3692,"column_start":9,"column_end":73}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550953,"byte_end":13550957,"line_start":3693,"line_end":3693,"column_start":9,"column_end":13}},{"value":"/ The purpose of this request is to allow clients to supply higher","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13550966,"byte_end":13551034,"line_start":3694,"line_end":3694,"column_start":9,"column_end":77}},{"value":"/ resolution buffer data for use on high resolution outputs. It is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551043,"byte_end":13551111,"line_start":3695,"line_end":3695,"column_start":9,"column_end":77}},{"value":"/ intended that you pick the same buffer scale as the scale of the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551120,"byte_end":13551188,"line_start":3696,"line_end":3696,"column_start":9,"column_end":77}},{"value":"/ output that the surface is displayed on. This means the compositor","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551197,"byte_end":13551267,"line_start":3697,"line_end":3697,"column_start":9,"column_end":79}},{"value":"/ can avoid scaling when rendering the surface on that output.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551276,"byte_end":13551340,"line_start":3698,"line_end":3698,"column_start":9,"column_end":73}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551349,"byte_end":13551353,"line_start":3699,"line_end":3699,"column_start":9,"column_end":13}},{"value":"/ Note that if the scale is larger than 1, then you have to attach","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551362,"byte_end":13551430,"line_start":3700,"line_end":3700,"column_start":9,"column_end":77}},{"value":"/ a buffer that is larger (by a factor of scale in each dimension)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551439,"byte_end":13551507,"line_start":3701,"line_end":3701,"column_start":9,"column_end":77}},{"value":"/ than the desired surface size.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551516,"byte_end":13551550,"line_start":3702,"line_end":3702,"column_start":9,"column_end":43}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551559,"byte_end":13551563,"line_start":3703,"line_end":3703,"column_start":9,"column_end":13}},{"value":"/ If scale is not positive the invalid_scale protocol error is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551572,"byte_end":13551636,"line_start":3704,"line_end":3704,"column_start":9,"column_end":73}},{"value":"/ raised.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551645,"byte_end":13551656,"line_start":3705,"line_end":3705,"column_start":9,"column_end":20}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551665,"byte_end":13551668,"line_start":3706,"line_end":3706,"column_start":9,"column_end":12}},{"value":"/ This request is only available since version 3 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13551677,"byte_end":13551744,"line_start":3707,"line_end":3707,"column_start":9,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13554208,"byte_end":13554221,"line_start":3749,"line_end":3749,"column_start":16,"column_end":29},"name":"damage_buffer","qualname":"<WlSurface>::damage_buffer","value":"pub fn damage_buffer(&Self, i32, i32, i32, i32) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" mark part of the surface damaged using buffer coordinates","sig":null,"attributes":[{"value":"/ mark part of the surface damaged using buffer coordinates","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552082,"byte_end":13552143,"line_start":3713,"line_end":3713,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552152,"byte_end":13552155,"line_start":3714,"line_end":3714,"column_start":9,"column_end":12}},{"value":"/ This request is used to describe the regions where the pending","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552164,"byte_end":13552230,"line_start":3715,"line_end":3715,"column_start":9,"column_end":75}},{"value":"/ buffer is different from the current surface contents, and where","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552239,"byte_end":13552307,"line_start":3716,"line_end":3716,"column_start":9,"column_end":77}},{"value":"/ the surface therefore needs to be repainted. The compositor","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552316,"byte_end":13552379,"line_start":3717,"line_end":3717,"column_start":9,"column_end":72}},{"value":"/ ignores the parts of the damage that fall outside of the surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552388,"byte_end":13552457,"line_start":3718,"line_end":3718,"column_start":9,"column_end":78}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552466,"byte_end":13552470,"line_start":3719,"line_end":3719,"column_start":9,"column_end":13}},{"value":"/ Damage is double-buffered state, see wl_surface.commit.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552479,"byte_end":13552538,"line_start":3720,"line_end":3720,"column_start":9,"column_end":68}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552547,"byte_end":13552551,"line_start":3721,"line_end":3721,"column_start":9,"column_end":13}},{"value":"/ The damage rectangle is specified in buffer coordinates,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552560,"byte_end":13552620,"line_start":3722,"line_end":3722,"column_start":9,"column_end":69}},{"value":"/ where x and y specify the upper left corner of the damage rectangle.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552629,"byte_end":13552701,"line_start":3723,"line_end":3723,"column_start":9,"column_end":81}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552710,"byte_end":13552714,"line_start":3724,"line_end":3724,"column_start":9,"column_end":13}},{"value":"/ The initial value for pending damage is empty: no damage.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552723,"byte_end":13552784,"line_start":3725,"line_end":3725,"column_start":9,"column_end":70}},{"value":"/ wl_surface.damage_buffer adds pending damage: the new pending","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552793,"byte_end":13552858,"line_start":3726,"line_end":3726,"column_start":9,"column_end":74}},{"value":"/ damage is the union of old pending damage and the given rectangle.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552867,"byte_end":13552937,"line_start":3727,"line_end":3727,"column_start":9,"column_end":79}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552946,"byte_end":13552950,"line_start":3728,"line_end":3728,"column_start":9,"column_end":13}},{"value":"/ wl_surface.commit assigns pending damage as the current damage,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13552959,"byte_end":13553026,"line_start":3729,"line_end":3729,"column_start":9,"column_end":76}},{"value":"/ and clears pending damage. The server will clear the current","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553035,"byte_end":13553099,"line_start":3730,"line_end":3730,"column_start":9,"column_end":73}},{"value":"/ damage as it repaints the surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553108,"byte_end":13553146,"line_start":3731,"line_end":3731,"column_start":9,"column_end":47}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553155,"byte_end":13553159,"line_start":3732,"line_end":3732,"column_start":9,"column_end":13}},{"value":"/ This request differs from wl_surface.damage in only one way - it","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553168,"byte_end":13553236,"line_start":3733,"line_end":3733,"column_start":9,"column_end":77}},{"value":"/ takes damage in buffer coordinates instead of surface-local","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553245,"byte_end":13553308,"line_start":3734,"line_end":3734,"column_start":9,"column_end":72}},{"value":"/ coordinates. While this generally is more intuitive than surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553317,"byte_end":13553385,"line_start":3735,"line_end":3735,"column_start":9,"column_end":77}},{"value":"/ coordinates, it is especially desirable when using wp_viewport","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553394,"byte_end":13553460,"line_start":3736,"line_end":3736,"column_start":9,"column_end":75}},{"value":"/ or when a drawing library (like EGL) is unaware of buffer scale","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553469,"byte_end":13553536,"line_start":3737,"line_end":3737,"column_start":9,"column_end":76}},{"value":"/ and buffer transform.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553545,"byte_end":13553570,"line_start":3738,"line_end":3738,"column_start":9,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553579,"byte_end":13553583,"line_start":3739,"line_end":3739,"column_start":9,"column_end":13}},{"value":"/ Note: Because buffer transformation changes and damage requests may","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553592,"byte_end":13553663,"line_start":3740,"line_end":3740,"column_start":9,"column_end":80}},{"value":"/ be interleaved in the protocol stream, it is impossible to determine","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553672,"byte_end":13553744,"line_start":3741,"line_end":3741,"column_start":9,"column_end":81}},{"value":"/ the actual mapping between surface and buffer damage until","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553753,"byte_end":13553815,"line_start":3742,"line_end":3742,"column_start":9,"column_end":71}},{"value":"/ wl_surface.commit time. Therefore, compositors wishing to take both","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553824,"byte_end":13553895,"line_start":3743,"line_end":3743,"column_start":9,"column_end":80}},{"value":"/ kinds of damage into account will have to accumulate damage from the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553904,"byte_end":13553976,"line_start":3744,"line_end":3744,"column_start":9,"column_end":81}},{"value":"/ two requests separately and only transform from one to the other","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13553985,"byte_end":13554053,"line_start":3745,"line_end":3745,"column_start":9,"column_end":77}},{"value":"/ after receiving the wl_surface.commit.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13554062,"byte_end":13554104,"line_start":3746,"line_end":3746,"column_start":9,"column_end":51}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13554113,"byte_end":13554116,"line_start":3747,"line_end":3747,"column_start":9,"column_end":12}},{"value":"/ This request is only available since version 4 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13554125,"byte_end":13554192,"line_start":3748,"line_end":3748,"column_start":9,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1913},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13554575,"byte_end":13554582,"line_start":3756,"line_end":3756,"column_start":9,"column_end":16},"name":"wl_seat","qualname":"::generated::client::wl_seat","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":1914},{"krate":0,"index":1917},{"krate":0,"index":1920},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1927},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1945},{"krate":0,"index":1948},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1984},{"krate":0,"index":3293},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3303},{"krate":0,"index":3305},{"krate":0,"index":3307},{"krate":0,"index":3309},{"krate":0,"index":3312},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3323},{"krate":0,"index":3325},{"krate":0,"index":3327},{"krate":0,"index":3350},{"krate":0,"index":3353},{"krate":0,"index":3355},{"krate":0,"index":3358},{"krate":0,"index":3360},{"krate":0,"index":3363},{"krate":0,"index":3365},{"krate":0,"index":3368},{"krate":0,"index":3370},{"krate":0,"index":3373},{"krate":0,"index":3376},{"krate":0,"index":1988},{"krate":0,"index":1991},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":2000},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007}],"decl_id":null,"docs":" group of input devices","sig":null,"attributes":[{"value":"/ group of input devices","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13554589,"byte_end":13554615,"line_start":3757,"line_end":3757,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13554620,"byte_end":13554623,"line_start":3758,"line_end":3758,"column_start":5,"column_end":8}},{"value":"/ A seat is a group of keyboards, pointer and touch devices. This","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13554628,"byte_end":13554695,"line_start":3759,"line_end":3759,"column_start":5,"column_end":72}},{"value":"/ object is published as a global during start up, or when such a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13554700,"byte_end":13554767,"line_start":3760,"line_end":3760,"column_start":5,"column_end":72}},{"value":"/ device is hot plugged.  A seat typically has a pointer and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13554772,"byte_end":13554834,"line_start":3761,"line_end":3761,"column_start":5,"column_end":67}},{"value":"/ maintains a keyboard focus and a pointer focus.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13554839,"byte_end":13554890,"line_start":3762,"line_end":3762,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1966},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13555452,"byte_end":13555458,"line_start":3780,"line_end":3780,"column_start":16,"column_end":22},"name":"WlSeat","qualname":"::generated::client::wl_seat::WlSeat","value":"WlSeat {  }","parent":null,"children":[{"krate":0,"index":1967},{"krate":0,"index":1968}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3293},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13559653,"byte_end":13559663,"line_start":3888,"line_end":3888,"column_start":20,"column_end":30},"name":"Capability","qualname":"::generated::client::wl_seat::Capability","value":"Capability {  }","parent":null,"children":[{"krate":0,"index":3294}],"decl_id":null,"docs":" seat capability bitmask","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3328},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13559734,"byte_end":13559741,"line_start":3890,"line_end":3890,"column_start":19,"column_end":26},"name":"Pointer","qualname":"::generated::client::wl_seat::Capability::Pointer","value":"Self","parent":{"krate":0,"index":3327},"children":[],"decl_id":null,"docs":" the seat has pointer devices\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3329},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13559816,"byte_end":13559824,"line_start":3892,"line_end":3892,"column_start":19,"column_end":27},"name":"Keyboard","qualname":"::generated::client::wl_seat::Capability::Keyboard","value":"Self","parent":{"krate":0,"index":3327},"children":[],"decl_id":null,"docs":" the seat has one or more keyboards\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3330},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13559891,"byte_end":13559896,"line_start":3894,"line_end":3894,"column_start":19,"column_end":24},"name":"Touch","qualname":"::generated::client::wl_seat::Capability::Touch","value":"Self","parent":{"krate":0,"index":3327},"children":[],"decl_id":null,"docs":" the seat has touch devices\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13559955,"byte_end":13559963,"line_start":3898,"line_end":3898,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Capability>::from_raw","value":"pub fn from_raw(u32) -> Option<Capability>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560073,"byte_end":13560079,"line_start":3901,"line_end":3901,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Capability>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1991},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560151,"byte_end":13560165,"line_start":3905,"line_end":3905,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_seat::Implementation","value":"Implementation { capabilities, name }","parent":null,"children":[{"krate":0,"index":1993},{"krate":0,"index":1994}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1993},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561838,"byte_end":13561850,"line_start":3934,"line_end":3934,"column_start":13,"column_end":25},"name":"capabilities","qualname":"::generated::client::wl_seat::Implementation::capabilities","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_seat::WlSeat, generated::client::wl_seat::Capability)","parent":{"krate":0,"index":1991},"children":[],"decl_id":null,"docs":" seat capabilities changed","sig":null,"attributes":[{"value":"/ seat capabilities changed","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560180,"byte_end":13560209,"line_start":3906,"line_end":3906,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560218,"byte_end":13560221,"line_start":3907,"line_end":3907,"column_start":9,"column_end":12}},{"value":"/ This is emitted whenever a seat gains or loses the pointer,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560230,"byte_end":13560293,"line_start":3908,"line_end":3908,"column_start":9,"column_end":72}},{"value":"/ keyboard or touch capabilities.  The argument is a capability","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560302,"byte_end":13560367,"line_start":3909,"line_end":3909,"column_start":9,"column_end":74}},{"value":"/ enum containing the complete set of capabilities this seat has.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560376,"byte_end":13560443,"line_start":3910,"line_end":3910,"column_start":9,"column_end":76}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560452,"byte_end":13560456,"line_start":3911,"line_end":3911,"column_start":9,"column_end":13}},{"value":"/ When the pointer capability is added, a client may create a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560465,"byte_end":13560528,"line_start":3912,"line_end":3912,"column_start":9,"column_end":72}},{"value":"/ wl_pointer object using the wl_seat.get_pointer request. This object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560537,"byte_end":13560609,"line_start":3913,"line_end":3913,"column_start":9,"column_end":81}},{"value":"/ will receive pointer events until the capability is removed in the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560618,"byte_end":13560688,"line_start":3914,"line_end":3914,"column_start":9,"column_end":79}},{"value":"/ future.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560697,"byte_end":13560708,"line_start":3915,"line_end":3915,"column_start":9,"column_end":20}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560717,"byte_end":13560721,"line_start":3916,"line_end":3916,"column_start":9,"column_end":13}},{"value":"/ When the pointer capability is removed, a client should destroy the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560730,"byte_end":13560801,"line_start":3917,"line_end":3917,"column_start":9,"column_end":80}},{"value":"/ wl_pointer objects associated with the seat where the capability was","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560810,"byte_end":13560882,"line_start":3918,"line_end":3918,"column_start":9,"column_end":81}},{"value":"/ removed, using the wl_pointer.release request. No further pointer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560891,"byte_end":13560960,"line_start":3919,"line_end":3919,"column_start":9,"column_end":78}},{"value":"/ events will be received on these objects.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13560969,"byte_end":13561014,"line_start":3920,"line_end":3920,"column_start":9,"column_end":54}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561023,"byte_end":13561027,"line_start":3921,"line_end":3921,"column_start":9,"column_end":13}},{"value":"/ In some compositors, if a seat regains the pointer capability and a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561036,"byte_end":13561107,"line_start":3922,"line_end":3922,"column_start":9,"column_end":80}},{"value":"/ client has a previously obtained wl_pointer object of version 4 or","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561116,"byte_end":13561186,"line_start":3923,"line_end":3923,"column_start":9,"column_end":79}},{"value":"/ less, that object may start sending pointer events again. This","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561195,"byte_end":13561261,"line_start":3924,"line_end":3924,"column_start":9,"column_end":75}},{"value":"/ behavior is considered a misinterpretation of the intended behavior","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561270,"byte_end":13561341,"line_start":3925,"line_end":3925,"column_start":9,"column_end":80}},{"value":"/ and must not be relied upon by the client. wl_pointer objects of","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561350,"byte_end":13561418,"line_start":3926,"line_end":3926,"column_start":9,"column_end":77}},{"value":"/ version 5 or later must not send events if created before the most","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561427,"byte_end":13561497,"line_start":3927,"line_end":3927,"column_start":9,"column_end":79}},{"value":"/ recent event notifying the client of an added pointer capability.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561506,"byte_end":13561575,"line_start":3928,"line_end":3928,"column_start":9,"column_end":78}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561584,"byte_end":13561588,"line_start":3929,"line_end":3929,"column_start":9,"column_end":13}},{"value":"/ The above behavior also applies to wl_keyboard and wl_touch with the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561597,"byte_end":13561669,"line_start":3930,"line_end":3930,"column_start":9,"column_end":81}},{"value":"/ keyboard and touch capabilities, respectively.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561678,"byte_end":13561728,"line_start":3931,"line_end":3931,"column_start":9,"column_end":59}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561737,"byte_end":13561740,"line_start":3932,"line_end":3932,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_seat, capabilities","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561749,"byte_end":13561825,"line_start":3933,"line_end":3933,"column_start":9,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":1994},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562397,"byte_end":13562401,"line_start":3944,"line_end":3944,"column_start":13,"column_end":17},"name":"name","qualname":"::generated::client::wl_seat::Implementation::name","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_seat::WlSeat, std::string::String)","parent":{"krate":0,"index":1991},"children":[],"decl_id":null,"docs":" unique identifier for this seat","sig":null,"attributes":[{"value":"/ unique identifier for this seat","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561953,"byte_end":13561988,"line_start":3935,"line_end":3935,"column_start":9,"column_end":44}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13561997,"byte_end":13562000,"line_start":3936,"line_end":3936,"column_start":9,"column_end":12}},{"value":"/ In a multiseat configuration this can be used by the client to help","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562009,"byte_end":13562080,"line_start":3937,"line_end":3937,"column_start":9,"column_end":80}},{"value":"/ identify which physical devices the seat represents. Based on","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562089,"byte_end":13562154,"line_start":3938,"line_end":3938,"column_start":9,"column_end":74}},{"value":"/ the seat configuration used by the compositor.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562163,"byte_end":13562213,"line_start":3939,"line_end":3939,"column_start":9,"column_end":59}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562222,"byte_end":13562225,"line_start":3940,"line_end":3940,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_seat, name","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562234,"byte_end":13562302,"line_start":3941,"line_end":3941,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562311,"byte_end":13562314,"line_start":3942,"line_end":3942,"column_start":9,"column_end":12}},{"value":"/ This request only exists since version 2 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562323,"byte_end":13562384,"line_start":3943,"line_end":3943,"column_start":9,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13563556,"byte_end":13563567,"line_start":3977,"line_end":3977,"column_start":16,"column_end":27},"name":"get_pointer","qualname":"<WlSeat>::get_pointer","value":"pub fn get_pointer(&Self) -> RequestResult<super::wl_pointer::WlPointer>","parent":null,"children":[],"decl_id":null,"docs":" return pointer object","sig":null,"attributes":[{"value":"/ return pointer object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13563119,"byte_end":13563144,"line_start":3968,"line_end":3968,"column_start":9,"column_end":34}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13563153,"byte_end":13563156,"line_start":3969,"line_end":3969,"column_start":9,"column_end":12}},{"value":"/ The ID provided will be initialized to the wl_pointer interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13563165,"byte_end":13563232,"line_start":3970,"line_end":3970,"column_start":9,"column_end":76}},{"value":"/ for this seat.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13563241,"byte_end":13563259,"line_start":3971,"line_end":3971,"column_start":9,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13563268,"byte_end":13563272,"line_start":3972,"line_end":3972,"column_start":9,"column_end":13}},{"value":"/ This request only takes effect if the seat has the pointer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13563281,"byte_end":13563343,"line_start":3973,"line_end":3973,"column_start":9,"column_end":71}},{"value":"/ capability, or has had the pointer capability in the past.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13563352,"byte_end":13563414,"line_start":3974,"line_end":3974,"column_start":9,"column_end":71}},{"value":"/ It is a protocol violation to issue this request on a seat that has","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13563423,"byte_end":13563494,"line_start":3975,"line_end":3975,"column_start":9,"column_end":80}},{"value":"/ never had the pointer capability.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13563503,"byte_end":13563540,"line_start":3976,"line_end":3976,"column_start":9,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13564452,"byte_end":13564464,"line_start":3992,"line_end":3992,"column_start":16,"column_end":28},"name":"get_keyboard","qualname":"<WlSeat>::get_keyboard","value":"pub fn get_keyboard(&Self) -> RequestResult<super::wl_keyboard::WlKeyboard>","parent":null,"children":[],"decl_id":null,"docs":" return keyboard object","sig":null,"attributes":[{"value":"/ return keyboard object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13564010,"byte_end":13564036,"line_start":3983,"line_end":3983,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13564045,"byte_end":13564048,"line_start":3984,"line_end":3984,"column_start":9,"column_end":12}},{"value":"/ The ID provided will be initialized to the wl_keyboard interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13564057,"byte_end":13564125,"line_start":3985,"line_end":3985,"column_start":9,"column_end":77}},{"value":"/ for this seat.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13564134,"byte_end":13564152,"line_start":3986,"line_end":3986,"column_start":9,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13564161,"byte_end":13564165,"line_start":3987,"line_end":3987,"column_start":9,"column_end":13}},{"value":"/ This request only takes effect if the seat has the keyboard","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13564174,"byte_end":13564237,"line_start":3988,"line_end":3988,"column_start":9,"column_end":72}},{"value":"/ capability, or has had the keyboard capability in the past.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13564246,"byte_end":13564309,"line_start":3989,"line_end":3989,"column_start":9,"column_end":72}},{"value":"/ It is a protocol violation to issue this request on a seat that has","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13564318,"byte_end":13564389,"line_start":3990,"line_end":3990,"column_start":9,"column_end":80}},{"value":"/ never had the keyboard capability.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13564398,"byte_end":13564436,"line_start":3991,"line_end":3991,"column_start":9,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13565338,"byte_end":13565347,"line_start":4007,"line_end":4007,"column_start":16,"column_end":25},"name":"get_touch","qualname":"<WlSeat>::get_touch","value":"pub fn get_touch(&Self) -> RequestResult<super::wl_touch::WlTouch>","parent":null,"children":[],"decl_id":null,"docs":" return touch object","sig":null,"attributes":[{"value":"/ return touch object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13564911,"byte_end":13564934,"line_start":3998,"line_end":3998,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13564943,"byte_end":13564946,"line_start":3999,"line_end":3999,"column_start":9,"column_end":12}},{"value":"/ The ID provided will be initialized to the wl_touch interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13564955,"byte_end":13565020,"line_start":4000,"line_end":4000,"column_start":9,"column_end":74}},{"value":"/ for this seat.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13565029,"byte_end":13565047,"line_start":4001,"line_end":4001,"column_start":9,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13565056,"byte_end":13565060,"line_start":4002,"line_end":4002,"column_start":9,"column_end":13}},{"value":"/ This request only takes effect if the seat has the touch","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13565069,"byte_end":13565129,"line_start":4003,"line_end":4003,"column_start":9,"column_end":69}},{"value":"/ capability, or has had the touch capability in the past.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13565138,"byte_end":13565198,"line_start":4004,"line_end":4004,"column_start":9,"column_end":69}},{"value":"/ It is a protocol violation to issue this request on a seat that has","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13565207,"byte_end":13565278,"line_start":4005,"line_end":4005,"column_start":9,"column_end":80}},{"value":"/ never had the touch capability.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13565287,"byte_end":13565322,"line_start":4006,"line_end":4006,"column_start":9,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13566164,"byte_end":13566171,"line_start":4021,"line_end":4021,"column_start":16,"column_end":23},"name":"release","qualname":"<WlSeat>::release","value":"pub fn release(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" release the seat object","sig":null,"attributes":[{"value":"/ release the seat object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13565782,"byte_end":13565809,"line_start":4013,"line_end":4013,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13565818,"byte_end":13565821,"line_start":4014,"line_end":4014,"column_start":9,"column_end":12}},{"value":"/ Using this request a client can tell the server that it is not going to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13565830,"byte_end":13565905,"line_start":4015,"line_end":4015,"column_start":9,"column_end":84}},{"value":"/ use the seat object anymore.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13565914,"byte_end":13565946,"line_start":4016,"line_end":4016,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13565955,"byte_end":13565958,"line_start":4017,"line_end":4017,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13565967,"byte_end":13566060,"line_start":4018,"line_end":4018,"column_start":9,"column_end":102}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13566069,"byte_end":13566072,"line_start":4019,"line_end":4019,"column_start":9,"column_end":12}},{"value":"/ This request is only available since version 5 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13566081,"byte_end":13566148,"line_start":4020,"line_end":4020,"column_start":9,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":2012},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13566895,"byte_end":13566905,"line_start":4036,"line_end":4036,"column_start":9,"column_end":19},"name":"wl_pointer","qualname":"::generated::client::wl_pointer","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":2013},{"krate":0,"index":2016},{"krate":0,"index":2019},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2026},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2038},{"krate":0,"index":2041},{"krate":0,"index":2044},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2054},{"krate":0,"index":2057},{"krate":0,"index":2060},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2083},{"krate":0,"index":3390},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3397},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":2087},{"krate":0,"index":3402},{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":3412},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":2090},{"krate":0,"index":3417},{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3427},{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":2093},{"krate":0,"index":3432},{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3445},{"krate":0,"index":3447},{"krate":0,"index":3448},{"krate":0,"index":2096},{"krate":0,"index":2099},{"krate":0,"index":2110},{"krate":0,"index":2112},{"krate":0,"index":2115},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120}],"decl_id":null,"docs":" pointer input device","sig":null,"attributes":[{"value":"/ pointer input device","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13566912,"byte_end":13566936,"line_start":4037,"line_end":4037,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13566941,"byte_end":13566944,"line_start":4038,"line_end":4038,"column_start":5,"column_end":8}},{"value":"/ The wl_pointer interface represents one or more input devices,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13566949,"byte_end":13567015,"line_start":4039,"line_end":4039,"column_start":5,"column_end":71}},{"value":"/ such as mice, which control the pointer location and pointer_focus","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13567020,"byte_end":13567090,"line_start":4040,"line_end":4040,"column_start":5,"column_end":75}},{"value":"/ of a seat.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13567095,"byte_end":13567109,"line_start":4041,"line_end":4041,"column_start":5,"column_end":19}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13567114,"byte_end":13567118,"line_start":4042,"line_end":4042,"column_start":5,"column_end":9}},{"value":"/ The wl_pointer interface generates motion, enter and leave","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13567123,"byte_end":13567185,"line_start":4043,"line_end":4043,"column_start":5,"column_end":67}},{"value":"/ events for the surfaces that the pointer is located over,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13567190,"byte_end":13567251,"line_start":4044,"line_end":4044,"column_start":5,"column_end":66}},{"value":"/ and button and axis events for button presses, button releases","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13567256,"byte_end":13567322,"line_start":4045,"line_end":4045,"column_start":5,"column_end":71}},{"value":"/ and scrolling.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13567327,"byte_end":13567345,"line_start":4046,"line_end":4046,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2065},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13567907,"byte_end":13567916,"line_start":4064,"line_end":4064,"column_start":16,"column_end":25},"name":"WlPointer","qualname":"::generated::client::wl_pointer::WlPointer","value":"WlPointer {  }","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":2067}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3391},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13574674,"byte_end":13574678,"line_start":4211,"line_end":4211,"column_start":9,"column_end":13},"name":"Role","qualname":"::generated::client::wl_pointer::Error::Role","value":"Error::Role","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":" given wl_surface has another role\n","sig":null,"attributes":[{"value":"/ given wl_surface has another role","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13574628,"byte_end":13574665,"line_start":4210,"line_end":4210,"column_start":9,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":3390},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13574612,"byte_end":13574617,"line_start":4209,"line_end":4209,"column_start":14,"column_end":19},"name":"Error","qualname":"::generated::client::wl_pointer::Error","value":"pub enum Error { Role = , }","parent":null,"children":[{"krate":0,"index":3391}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13574544,"byte_end":13574556,"line_start":4207,"line_end":4207,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13574722,"byte_end":13574730,"line_start":4214,"line_end":4214,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13574893,"byte_end":13574899,"line_start":4220,"line_end":4220,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3403},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575216,"byte_end":13575224,"line_start":4232,"line_end":4232,"column_start":9,"column_end":17},"name":"Released","qualname":"::generated::client::wl_pointer::ButtonState::Released","value":"ButtonState::Released","parent":{"krate":0,"index":3402},"children":[],"decl_id":null,"docs":" the button is not pressed\n","sig":null,"attributes":[{"value":"/ the button is not pressed","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575178,"byte_end":13575207,"line_start":4231,"line_end":4231,"column_start":9,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3406},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575272,"byte_end":13575279,"line_start":4234,"line_end":4234,"column_start":9,"column_end":16},"name":"Pressed","qualname":"::generated::client::wl_pointer::ButtonState::Pressed","value":"ButtonState::Pressed","parent":{"krate":0,"index":3402},"children":[],"decl_id":null,"docs":" the button is pressed\n","sig":null,"attributes":[{"value":"/ the button is pressed","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575238,"byte_end":13575263,"line_start":4233,"line_end":4233,"column_start":9,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":3402},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575156,"byte_end":13575167,"line_start":4230,"line_end":4230,"column_start":14,"column_end":25},"name":"ButtonState","qualname":"::generated::client::wl_pointer::ButtonState","value":"pub enum ButtonState { Released = , Pressed = , }","parent":null,"children":[{"krate":0,"index":3403},{"krate":0,"index":3406}],"decl_id":null,"docs":" physical button state","sig":null,"attributes":[{"value":"/ physical button state","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13574961,"byte_end":13574986,"line_start":4224,"line_end":4224,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13574991,"byte_end":13574994,"line_start":4225,"line_end":4225,"column_start":5,"column_end":8}},{"value":"/ Describes the physical state of a button that produced the button","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13574999,"byte_end":13575068,"line_start":4226,"line_end":4226,"column_start":5,"column_end":74}},{"value":"/ event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575073,"byte_end":13575083,"line_start":4227,"line_end":4227,"column_start":5,"column_end":15}},{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575088,"byte_end":13575100,"line_start":4228,"line_end":4228,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575329,"byte_end":13575337,"line_start":4237,"line_end":4237,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<ButtonState>::from_raw","value":"pub fn from_raw(u32) -> Option<ButtonState>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575565,"byte_end":13575571,"line_start":4244,"line_end":4244,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<ButtonState>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3418},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575820,"byte_end":13575834,"line_start":4255,"line_end":4255,"column_start":9,"column_end":23},"name":"VerticalScroll","qualname":"::generated::client::wl_pointer::Axis::VerticalScroll","value":"Axis::VerticalScroll","parent":{"krate":0,"index":3417},"children":[],"decl_id":null,"docs":" vertical axis\n","sig":null,"attributes":[{"value":"/ vertical axis","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575794,"byte_end":13575811,"line_start":4254,"line_end":4254,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3421},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575876,"byte_end":13575892,"line_start":4257,"line_end":4257,"column_start":9,"column_end":25},"name":"HorizontalScroll","qualname":"::generated::client::wl_pointer::Axis::HorizontalScroll","value":"Axis::HorizontalScroll","parent":{"krate":0,"index":3417},"children":[],"decl_id":null,"docs":" horizontal axis\n","sig":null,"attributes":[{"value":"/ horizontal axis","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575848,"byte_end":13575867,"line_start":4256,"line_end":4256,"column_start":9,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":3417},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575779,"byte_end":13575783,"line_start":4253,"line_end":4253,"column_start":14,"column_end":18},"name":"Axis","qualname":"::generated::client::wl_pointer::Axis","value":"pub enum Axis { VerticalScroll = , HorizontalScroll = , }","parent":null,"children":[{"krate":0,"index":3418},{"krate":0,"index":3421}],"decl_id":null,"docs":" axis types","sig":null,"attributes":[{"value":"/ axis types","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575633,"byte_end":13575647,"line_start":4248,"line_end":4248,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575652,"byte_end":13575655,"line_start":4249,"line_end":4249,"column_start":5,"column_end":8}},{"value":"/ Describes the axis types of scroll events.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575660,"byte_end":13575706,"line_start":4250,"line_end":4250,"column_start":5,"column_end":51}},{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575711,"byte_end":13575723,"line_start":4251,"line_end":4251,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575935,"byte_end":13575943,"line_start":4260,"line_end":4260,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Axis>::from_raw","value":"pub fn from_raw(u32) -> Option<Axis>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576165,"byte_end":13576171,"line_start":4267,"line_end":4267,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Axis>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3433},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577117,"byte_end":13577122,"line_start":4289,"line_end":4289,"column_start":9,"column_end":14},"name":"Wheel","qualname":"::generated::client::wl_pointer::AxisSource::Wheel","value":"AxisSource::Wheel","parent":{"krate":0,"index":3432},"children":[],"decl_id":null,"docs":" a physical wheel\n","sig":null,"attributes":[{"value":"/ a physical wheel","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577088,"byte_end":13577108,"line_start":4288,"line_end":4288,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3436},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577174,"byte_end":13577180,"line_start":4291,"line_end":4291,"column_start":9,"column_end":15},"name":"Finger","qualname":"::generated::client::wl_pointer::AxisSource::Finger","value":"AxisSource::Finger","parent":{"krate":0,"index":3432},"children":[],"decl_id":null,"docs":" finger on a touch surface\n","sig":null,"attributes":[{"value":"/ finger on a touch surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577136,"byte_end":13577165,"line_start":4290,"line_end":4290,"column_start":9,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3439},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577234,"byte_end":13577244,"line_start":4293,"line_end":4293,"column_start":9,"column_end":19},"name":"Continuous","qualname":"::generated::client::wl_pointer::AxisSource::Continuous","value":"AxisSource::Continuous","parent":{"krate":0,"index":3432},"children":[],"decl_id":null,"docs":" continuous coordinate space\n","sig":null,"attributes":[{"value":"/ continuous coordinate space","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577194,"byte_end":13577225,"line_start":4292,"line_end":4292,"column_start":9,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":3432},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577067,"byte_end":13577077,"line_start":4287,"line_end":4287,"column_start":14,"column_end":24},"name":"AxisSource","qualname":"::generated::client::wl_pointer::AxisSource","value":"pub enum AxisSource { Wheel = , Finger = , Continuous = , }","parent":null,"children":[{"krate":0,"index":3433},{"krate":0,"index":3436},{"krate":0,"index":3439}],"decl_id":null,"docs":" axis source types","sig":null,"attributes":[{"value":"/ axis source types","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576233,"byte_end":13576254,"line_start":4271,"line_end":4271,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576259,"byte_end":13576262,"line_start":4272,"line_end":4272,"column_start":5,"column_end":8}},{"value":"/ Describes the source types for axis events. This indicates to the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576267,"byte_end":13576336,"line_start":4273,"line_end":4273,"column_start":5,"column_end":74}},{"value":"/ client how an axis event was physically generated; a client may","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576341,"byte_end":13576408,"line_start":4274,"line_end":4274,"column_start":5,"column_end":72}},{"value":"/ adjust the user interface accordingly. For example, scroll events","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576413,"byte_end":13576482,"line_start":4275,"line_end":4275,"column_start":5,"column_end":74}},{"value":"/ from a \"finger\" source may be in a smooth coordinate space with","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576487,"byte_end":13576554,"line_start":4276,"line_end":4276,"column_start":5,"column_end":72}},{"value":"/ kinetic scrolling whereas a \"wheel\" source may be in discrete steps","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576559,"byte_end":13576630,"line_start":4277,"line_end":4277,"column_start":5,"column_end":76}},{"value":"/ of a number of lines.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576635,"byte_end":13576660,"line_start":4278,"line_end":4278,"column_start":5,"column_end":30}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576665,"byte_end":13576669,"line_start":4279,"line_end":4279,"column_start":5,"column_end":9}},{"value":"/ The \"continuous\" axis source is a device generating events in a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576674,"byte_end":13576741,"line_start":4280,"line_end":4280,"column_start":5,"column_end":72}},{"value":"/ continuous coordinate space, but using something other than a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576746,"byte_end":13576811,"line_start":4281,"line_end":4281,"column_start":5,"column_end":70}},{"value":"/ finger. One example for this source is button-based scrolling where","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576816,"byte_end":13576887,"line_start":4282,"line_end":4282,"column_start":5,"column_end":76}},{"value":"/ the vertical motion of a device is converted to scroll events while","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576892,"byte_end":13576963,"line_start":4283,"line_end":4283,"column_start":5,"column_end":76}},{"value":"/ a button is held down.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576968,"byte_end":13576994,"line_start":4284,"line_end":4284,"column_start":5,"column_end":31}},{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13576999,"byte_end":13577011,"line_start":4285,"line_end":4285,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577293,"byte_end":13577301,"line_start":4296,"line_end":4296,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<AxisSource>::from_raw","value":"pub fn from_raw(u32) -> Option<AxisSource>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577573,"byte_end":13577579,"line_start":4304,"line_end":4304,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<AxisSource>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2099},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577652,"byte_end":13577666,"line_start":4308,"line_end":4308,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_pointer::Implementation","value":"Implementation { enter, leave, motion, button, axis, frame, axis_source, axis_stop, axis_discrete }","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2101},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578170,"byte_end":13578175,"line_start":4319,"line_end":4319,"column_start":13,"column_end":18},"name":"enter","qualname":"::generated::client::wl_pointer::Implementation::enter","value":"for<'r, 's, 't0, 't1> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_pointer::WlPointer, u32, &'t1 generated::client::wl_surface::WlSurface, f64, f64)","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":" enter event","sig":null,"attributes":[{"value":"/ enter event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577681,"byte_end":13577696,"line_start":4309,"line_end":4309,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577705,"byte_end":13577708,"line_start":4310,"line_end":4310,"column_start":9,"column_end":12}},{"value":"/ Notification that this seat's pointer is focused on a certain","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577717,"byte_end":13577782,"line_start":4311,"line_end":4311,"column_start":9,"column_end":74}},{"value":"/ surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577791,"byte_end":13577803,"line_start":4312,"line_end":4312,"column_start":9,"column_end":21}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577812,"byte_end":13577816,"line_start":4313,"line_end":4313,"column_start":9,"column_end":13}},{"value":"/ When a seat's focus enters a surface, the pointer image","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577825,"byte_end":13577884,"line_start":4314,"line_end":4314,"column_start":9,"column_end":68}},{"value":"/ is undefined and a client should respond to this event by setting","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577893,"byte_end":13577962,"line_start":4315,"line_end":4315,"column_start":9,"column_end":78}},{"value":"/ an appropriate pointer image with the set_cursor request.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577971,"byte_end":13578032,"line_start":4316,"line_end":4316,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578041,"byte_end":13578044,"line_start":4317,"line_end":4317,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_pointer, serial, surface, surface_x, surface_y","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578053,"byte_end":13578157,"line_start":4318,"line_end":4318,"column_start":9,"column_end":113}}]},{"kind":"Field","id":{"krate":0,"index":2102},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578708,"byte_end":13578713,"line_start":4329,"line_end":4329,"column_start":13,"column_end":18},"name":"leave","qualname":"::generated::client::wl_pointer::Implementation::leave","value":"for<'r, 's, 't0, 't1> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_pointer::WlPointer, u32, &'t1 generated::client::wl_surface::WlSurface)","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":" leave event","sig":null,"attributes":[{"value":"/ leave event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578343,"byte_end":13578358,"line_start":4320,"line_end":4320,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578367,"byte_end":13578370,"line_start":4321,"line_end":4321,"column_start":9,"column_end":12}},{"value":"/ Notification that this seat's pointer is no longer focused on","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578379,"byte_end":13578444,"line_start":4322,"line_end":4322,"column_start":9,"column_end":74}},{"value":"/ a certain surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578453,"byte_end":13578475,"line_start":4323,"line_end":4323,"column_start":9,"column_end":31}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578484,"byte_end":13578488,"line_start":4324,"line_end":4324,"column_start":9,"column_end":13}},{"value":"/ The leave notification is sent before the enter notification","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578497,"byte_end":13578561,"line_start":4325,"line_end":4325,"column_start":9,"column_end":73}},{"value":"/ for the new focus.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578570,"byte_end":13578592,"line_start":4326,"line_end":4326,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578601,"byte_end":13578604,"line_start":4327,"line_end":4327,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_pointer, serial, surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578613,"byte_end":13578695,"line_start":4328,"line_end":4328,"column_start":9,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":2103},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579177,"byte_end":13579183,"line_start":4337,"line_end":4337,"column_start":13,"column_end":19},"name":"motion","qualname":"::generated::client::wl_pointer::Implementation::motion","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_pointer::WlPointer, u32, f64, f64)","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":" pointer motion event","sig":null,"attributes":[{"value":"/ pointer motion event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578849,"byte_end":13578873,"line_start":4330,"line_end":4330,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578882,"byte_end":13578885,"line_start":4331,"line_end":4331,"column_start":9,"column_end":12}},{"value":"/ Notification of pointer location change. The arguments","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578894,"byte_end":13578952,"line_start":4332,"line_end":4332,"column_start":9,"column_end":67}},{"value":"/ surface_x and surface_y are the location relative to the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13578961,"byte_end":13579021,"line_start":4333,"line_end":4333,"column_start":9,"column_end":69}},{"value":"/ focused surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579030,"byte_end":13579050,"line_start":4334,"line_end":4334,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579059,"byte_end":13579062,"line_start":4335,"line_end":4335,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_pointer, time, surface_x, surface_y","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579071,"byte_end":13579164,"line_start":4336,"line_end":4336,"column_start":9,"column_end":102}}]},{"kind":"Field","id":{"krate":0,"index":2104},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579749,"byte_end":13579755,"line_start":4348,"line_end":4348,"column_start":13,"column_end":19},"name":"button","qualname":"::generated::client::wl_pointer::Implementation::button","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_pointer::WlPointer, u32, u32, u32, generated::client::wl_pointer::ButtonState)","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":" pointer button event","sig":null,"attributes":[{"value":"/ pointer button event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579309,"byte_end":13579333,"line_start":4338,"line_end":4338,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579342,"byte_end":13579345,"line_start":4339,"line_end":4339,"column_start":9,"column_end":12}},{"value":"/ Mouse button click and release notifications.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579354,"byte_end":13579403,"line_start":4340,"line_end":4340,"column_start":9,"column_end":58}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579412,"byte_end":13579416,"line_start":4341,"line_end":4341,"column_start":9,"column_end":13}},{"value":"/ The location of the click is given by the last motion or","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579425,"byte_end":13579485,"line_start":4342,"line_end":4342,"column_start":9,"column_end":69}},{"value":"/ enter event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579494,"byte_end":13579510,"line_start":4343,"line_end":4343,"column_start":9,"column_end":25}},{"value":"/ The time argument is a timestamp with millisecond","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579519,"byte_end":13579572,"line_start":4344,"line_end":4344,"column_start":9,"column_end":62}},{"value":"/ granularity, with an undefined base.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579581,"byte_end":13579621,"line_start":4345,"line_end":4345,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579630,"byte_end":13579633,"line_start":4346,"line_end":4346,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_pointer, serial, time, button, state","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579642,"byte_end":13579736,"line_start":4347,"line_end":4347,"column_start":9,"column_end":103}}]},{"kind":"Field","id":{"krate":0,"index":2105},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580850,"byte_end":13580854,"line_start":4369,"line_end":4369,"column_start":13,"column_end":17},"name":"axis","qualname":"::generated::client::wl_pointer::Implementation::axis","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_pointer::WlPointer, u32, generated::client::wl_pointer::Axis, f64)","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":" axis event","sig":null,"attributes":[{"value":"/ axis event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579895,"byte_end":13579909,"line_start":4349,"line_end":4349,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579918,"byte_end":13579921,"line_start":4350,"line_end":4350,"column_start":9,"column_end":12}},{"value":"/ Scroll and other axis notifications.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579930,"byte_end":13579970,"line_start":4351,"line_end":4351,"column_start":9,"column_end":49}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579979,"byte_end":13579983,"line_start":4352,"line_end":4352,"column_start":9,"column_end":13}},{"value":"/ For scroll events (vertical and horizontal scroll axes), the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13579992,"byte_end":13580056,"line_start":4353,"line_end":4353,"column_start":9,"column_end":73}},{"value":"/ value parameter is the length of a vector along the specified","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580065,"byte_end":13580130,"line_start":4354,"line_end":4354,"column_start":9,"column_end":74}},{"value":"/ axis in a coordinate space identical to those of motion events,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580139,"byte_end":13580206,"line_start":4355,"line_end":4355,"column_start":9,"column_end":76}},{"value":"/ representing a relative movement along the specified axis.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580215,"byte_end":13580277,"line_start":4356,"line_end":4356,"column_start":9,"column_end":71}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580286,"byte_end":13580290,"line_start":4357,"line_end":4357,"column_start":9,"column_end":13}},{"value":"/ For devices that support movements non-parallel to axes multiple","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580299,"byte_end":13580367,"line_start":4358,"line_end":4358,"column_start":9,"column_end":77}},{"value":"/ axis events will be emitted.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580376,"byte_end":13580408,"line_start":4359,"line_end":4359,"column_start":9,"column_end":41}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580417,"byte_end":13580421,"line_start":4360,"line_end":4360,"column_start":9,"column_end":13}},{"value":"/ When applicable, for example for touch pads, the server can","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580430,"byte_end":13580493,"line_start":4361,"line_end":4361,"column_start":9,"column_end":72}},{"value":"/ choose to emit scroll events where the motion vector is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580502,"byte_end":13580561,"line_start":4362,"line_end":4362,"column_start":9,"column_end":68}},{"value":"/ equivalent to a motion event vector.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580570,"byte_end":13580610,"line_start":4363,"line_end":4363,"column_start":9,"column_end":49}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580619,"byte_end":13580623,"line_start":4364,"line_end":4364,"column_start":9,"column_end":13}},{"value":"/ When applicable, a client can transform its content relative to the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580632,"byte_end":13580703,"line_start":4365,"line_end":4365,"column_start":9,"column_end":80}},{"value":"/ scroll distance.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580712,"byte_end":13580732,"line_start":4366,"line_end":4366,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580741,"byte_end":13580744,"line_start":4367,"line_end":4367,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_pointer, time, axis, value","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580753,"byte_end":13580837,"line_start":4368,"line_end":4368,"column_start":9,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":2106},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583353,"byte_end":13583358,"line_start":4410,"line_end":4410,"column_start":13,"column_end":18},"name":"frame","qualname":"::generated::client::wl_pointer::Implementation::frame","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_pointer::WlPointer)","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":" end of a pointer event sequence","sig":null,"attributes":[{"value":"/ end of a pointer event sequence","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13580972,"byte_end":13581007,"line_start":4370,"line_end":4370,"column_start":9,"column_end":44}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581016,"byte_end":13581019,"line_start":4371,"line_end":4371,"column_start":9,"column_end":12}},{"value":"/ Indicates the end of a set of events that logically belong together.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581028,"byte_end":13581100,"line_start":4372,"line_end":4372,"column_start":9,"column_end":81}},{"value":"/ A client is expected to accumulate the data in all events within the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581109,"byte_end":13581181,"line_start":4373,"line_end":4373,"column_start":9,"column_end":81}},{"value":"/ frame before proceeding.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581190,"byte_end":13581218,"line_start":4374,"line_end":4374,"column_start":9,"column_end":37}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581227,"byte_end":13581231,"line_start":4375,"line_end":4375,"column_start":9,"column_end":13}},{"value":"/ All wl_pointer events before a wl_pointer.frame event belong","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581240,"byte_end":13581304,"line_start":4376,"line_end":4376,"column_start":9,"column_end":73}},{"value":"/ logically together. For example, in a diagonal scroll motion the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581313,"byte_end":13581381,"line_start":4377,"line_end":4377,"column_start":9,"column_end":77}},{"value":"/ compositor will send an optional wl_pointer.axis_source event, two","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581390,"byte_end":13581460,"line_start":4378,"line_end":4378,"column_start":9,"column_end":79}},{"value":"/ wl_pointer.axis events (horizontal and vertical) and finally a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581469,"byte_end":13581535,"line_start":4379,"line_end":4379,"column_start":9,"column_end":75}},{"value":"/ wl_pointer.frame event. The client may use this information to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581544,"byte_end":13581610,"line_start":4380,"line_end":4380,"column_start":9,"column_end":75}},{"value":"/ calculate a diagonal vector for scrolling.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581619,"byte_end":13581665,"line_start":4381,"line_end":4381,"column_start":9,"column_end":55}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581674,"byte_end":13581678,"line_start":4382,"line_end":4382,"column_start":9,"column_end":13}},{"value":"/ When multiple wl_pointer.axis events occur within the same frame,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581687,"byte_end":13581756,"line_start":4383,"line_end":4383,"column_start":9,"column_end":78}},{"value":"/ the motion vector is the combined motion of all events.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581765,"byte_end":13581824,"line_start":4384,"line_end":4384,"column_start":9,"column_end":68}},{"value":"/ When a wl_pointer.axis and a wl_pointer.axis_stop event occur within","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581833,"byte_end":13581905,"line_start":4385,"line_end":4385,"column_start":9,"column_end":81}},{"value":"/ the same frame, this indicates that axis movement in one axis has","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581914,"byte_end":13581983,"line_start":4386,"line_end":4386,"column_start":9,"column_end":78}},{"value":"/ stopped but continues in the other axis.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13581992,"byte_end":13582036,"line_start":4387,"line_end":4387,"column_start":9,"column_end":53}},{"value":"/ When multiple wl_pointer.axis_stop events occur within the same","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582045,"byte_end":13582112,"line_start":4388,"line_end":4388,"column_start":9,"column_end":76}},{"value":"/ frame, this indicates that these axes stopped in the same instance.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582121,"byte_end":13582192,"line_start":4389,"line_end":4389,"column_start":9,"column_end":80}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582201,"byte_end":13582205,"line_start":4390,"line_end":4390,"column_start":9,"column_end":13}},{"value":"/ A wl_pointer.frame event is sent for every logical event group,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582214,"byte_end":13582281,"line_start":4391,"line_end":4391,"column_start":9,"column_end":76}},{"value":"/ even if the group only contains a single wl_pointer event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582290,"byte_end":13582352,"line_start":4392,"line_end":4392,"column_start":9,"column_end":71}},{"value":"/ Specifically, a client may get a sequence: motion, frame, button,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582361,"byte_end":13582430,"line_start":4393,"line_end":4393,"column_start":9,"column_end":78}},{"value":"/ frame, axis, frame, axis_stop, frame.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582439,"byte_end":13582480,"line_start":4394,"line_end":4394,"column_start":9,"column_end":50}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582489,"byte_end":13582493,"line_start":4395,"line_end":4395,"column_start":9,"column_end":13}},{"value":"/ The wl_pointer.enter and wl_pointer.leave events are logical events","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582502,"byte_end":13582573,"line_start":4396,"line_end":4396,"column_start":9,"column_end":80}},{"value":"/ generated by the compositor and not the hardware. These events are","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582582,"byte_end":13582652,"line_start":4397,"line_end":4397,"column_start":9,"column_end":79}},{"value":"/ also grouped by a wl_pointer.frame. When a pointer moves from one","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582661,"byte_end":13582730,"line_start":4398,"line_end":4398,"column_start":9,"column_end":78}},{"value":"/ surface to another, a compositor should group the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582739,"byte_end":13582792,"line_start":4399,"line_end":4399,"column_start":9,"column_end":62}},{"value":"/ wl_pointer.leave event within the same wl_pointer.frame.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582801,"byte_end":13582861,"line_start":4400,"line_end":4400,"column_start":9,"column_end":69}},{"value":"/ However, a client must not rely on wl_pointer.leave and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582870,"byte_end":13582929,"line_start":4401,"line_end":4401,"column_start":9,"column_end":68}},{"value":"/ wl_pointer.enter being in the same wl_pointer.frame.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13582938,"byte_end":13582994,"line_start":4402,"line_end":4402,"column_start":9,"column_end":65}},{"value":"/ Compositor-specific policies may require the wl_pointer.leave and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583003,"byte_end":13583072,"line_start":4403,"line_end":4403,"column_start":9,"column_end":78}},{"value":"/ wl_pointer.enter event being split across multiple wl_pointer.frame","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583081,"byte_end":13583152,"line_start":4404,"line_end":4404,"column_start":9,"column_end":80}},{"value":"/ groups.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583161,"byte_end":13583172,"line_start":4405,"line_end":4405,"column_start":9,"column_end":20}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583181,"byte_end":13583184,"line_start":4406,"line_end":4406,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_pointer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583193,"byte_end":13583258,"line_start":4407,"line_end":4407,"column_start":9,"column_end":74}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583267,"byte_end":13583270,"line_start":4408,"line_end":4408,"column_start":9,"column_end":12}},{"value":"/ This request only exists since version 5 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583279,"byte_end":13583340,"line_start":4409,"line_end":4409,"column_start":9,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2107},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585015,"byte_end":13585026,"line_start":4441,"line_end":4441,"column_start":13,"column_end":24},"name":"axis_source","qualname":"::generated::client::wl_pointer::Implementation::axis_source","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_pointer::WlPointer, generated::client::wl_pointer::AxisSource)","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":" axis source event","sig":null,"attributes":[{"value":"/ axis source event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583441,"byte_end":13583462,"line_start":4411,"line_end":4411,"column_start":9,"column_end":30}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583471,"byte_end":13583474,"line_start":4412,"line_end":4412,"column_start":9,"column_end":12}},{"value":"/ Source information for scroll and other axes.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583483,"byte_end":13583532,"line_start":4413,"line_end":4413,"column_start":9,"column_end":58}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583541,"byte_end":13583545,"line_start":4414,"line_end":4414,"column_start":9,"column_end":13}},{"value":"/ This event does not occur on its own. It is sent before a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583554,"byte_end":13583615,"line_start":4415,"line_end":4415,"column_start":9,"column_end":70}},{"value":"/ wl_pointer.frame event and carries the source information for","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583624,"byte_end":13583689,"line_start":4416,"line_end":4416,"column_start":9,"column_end":74}},{"value":"/ all events within that frame.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583698,"byte_end":13583731,"line_start":4417,"line_end":4417,"column_start":9,"column_end":42}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583740,"byte_end":13583744,"line_start":4418,"line_end":4418,"column_start":9,"column_end":13}},{"value":"/ The source specifies how this event was generated. If the source is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583753,"byte_end":13583824,"line_start":4419,"line_end":4419,"column_start":9,"column_end":80}},{"value":"/ wl_pointer.axis_source.finger, a wl_pointer.axis_stop event will be","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583833,"byte_end":13583904,"line_start":4420,"line_end":4420,"column_start":9,"column_end":80}},{"value":"/ sent when the user lifts the finger off the device.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583913,"byte_end":13583968,"line_start":4421,"line_end":4421,"column_start":9,"column_end":64}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583977,"byte_end":13583981,"line_start":4422,"line_end":4422,"column_start":9,"column_end":13}},{"value":"/ If the source is wl_pointer axis_source.wheel or","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13583990,"byte_end":13584042,"line_start":4423,"line_end":4423,"column_start":9,"column_end":61}},{"value":"/ wl_pointer.axis_source.continuous, a wl_pointer.axis_stop event may","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584051,"byte_end":13584122,"line_start":4424,"line_end":4424,"column_start":9,"column_end":80}},{"value":"/ or may not be sent. Whether a compositor sends an axis_stop event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584131,"byte_end":13584200,"line_start":4425,"line_end":4425,"column_start":9,"column_end":78}},{"value":"/ for these sources is hardware-specific and implementation-dependent;","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584209,"byte_end":13584281,"line_start":4426,"line_end":4426,"column_start":9,"column_end":81}},{"value":"/ clients must not rely on receiving an axis_stop event for these","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584290,"byte_end":13584357,"line_start":4427,"line_end":4427,"column_start":9,"column_end":76}},{"value":"/ scroll sources and should treat scroll sequences from these scroll","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584366,"byte_end":13584436,"line_start":4428,"line_end":4428,"column_start":9,"column_end":79}},{"value":"/ sources as unterminated by default.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584445,"byte_end":13584484,"line_start":4429,"line_end":4429,"column_start":9,"column_end":48}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584493,"byte_end":13584497,"line_start":4430,"line_end":4430,"column_start":9,"column_end":13}},{"value":"/ This event is optional. If the source is unknown for a particular","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584506,"byte_end":13584575,"line_start":4431,"line_end":4431,"column_start":9,"column_end":78}},{"value":"/ axis event sequence, no event is sent.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584584,"byte_end":13584626,"line_start":4432,"line_end":4432,"column_start":9,"column_end":51}},{"value":"/ Only one wl_pointer.axis_source event is permitted per frame.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584635,"byte_end":13584700,"line_start":4433,"line_end":4433,"column_start":9,"column_end":74}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584709,"byte_end":13584713,"line_start":4434,"line_end":4434,"column_start":9,"column_end":13}},{"value":"/ The order of wl_pointer.axis_discrete and wl_pointer.axis_source is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584722,"byte_end":13584793,"line_start":4435,"line_end":4435,"column_start":9,"column_end":80}},{"value":"/ not guaranteed.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584802,"byte_end":13584821,"line_start":4436,"line_end":4436,"column_start":9,"column_end":28}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584830,"byte_end":13584833,"line_start":4437,"line_end":4437,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_pointer, axis_source","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584842,"byte_end":13584920,"line_start":4438,"line_end":4438,"column_start":9,"column_end":87}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584929,"byte_end":13584932,"line_start":4439,"line_end":4439,"column_start":9,"column_end":12}},{"value":"/ This request only exists since version 5 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13584941,"byte_end":13585002,"line_start":4440,"line_end":4440,"column_start":9,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2108},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586154,"byte_end":13586163,"line_start":4462,"line_end":4462,"column_start":13,"column_end":22},"name":"axis_stop","qualname":"::generated::client::wl_pointer::Implementation::axis_stop","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_pointer::WlPointer, u32, generated::client::wl_pointer::Axis)","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":" axis stop event","sig":null,"attributes":[{"value":"/ axis stop event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585134,"byte_end":13585153,"line_start":4442,"line_end":4442,"column_start":9,"column_end":28}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585162,"byte_end":13585165,"line_start":4443,"line_end":4443,"column_start":9,"column_end":12}},{"value":"/ Stop notification for scroll and other axes.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585174,"byte_end":13585222,"line_start":4444,"line_end":4444,"column_start":9,"column_end":57}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585231,"byte_end":13585235,"line_start":4445,"line_end":4445,"column_start":9,"column_end":13}},{"value":"/ For some wl_pointer.axis_source types, a wl_pointer.axis_stop event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585244,"byte_end":13585315,"line_start":4446,"line_end":4446,"column_start":9,"column_end":80}},{"value":"/ is sent to notify a client that the axis sequence has terminated.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585324,"byte_end":13585393,"line_start":4447,"line_end":4447,"column_start":9,"column_end":78}},{"value":"/ This enables the client to implement kinetic scrolling.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585402,"byte_end":13585461,"line_start":4448,"line_end":4448,"column_start":9,"column_end":68}},{"value":"/ See the wl_pointer.axis_source documentation for information on when","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585470,"byte_end":13585542,"line_start":4449,"line_end":4449,"column_start":9,"column_end":81}},{"value":"/ this event may be generated.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585551,"byte_end":13585583,"line_start":4450,"line_end":4450,"column_start":9,"column_end":41}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585592,"byte_end":13585596,"line_start":4451,"line_end":4451,"column_start":9,"column_end":13}},{"value":"/ Any wl_pointer.axis events with the same axis_source after this","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585605,"byte_end":13585672,"line_start":4452,"line_end":4452,"column_start":9,"column_end":76}},{"value":"/ event should be considered as the start of a new axis motion.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585681,"byte_end":13585746,"line_start":4453,"line_end":4453,"column_start":9,"column_end":74}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585755,"byte_end":13585759,"line_start":4454,"line_end":4454,"column_start":9,"column_end":13}},{"value":"/ The timestamp is to be interpreted identical to the timestamp in the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585768,"byte_end":13585840,"line_start":4455,"line_end":4455,"column_start":9,"column_end":81}},{"value":"/ wl_pointer.axis event. The timestamp value may be the same as a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585849,"byte_end":13585916,"line_start":4456,"line_end":4456,"column_start":9,"column_end":76}},{"value":"/ preceding wl_pointer.axis event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585925,"byte_end":13585961,"line_start":4457,"line_end":4457,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585970,"byte_end":13585973,"line_start":4458,"line_end":4458,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_pointer, time, axis","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13585982,"byte_end":13586059,"line_start":4459,"line_end":4459,"column_start":9,"column_end":86}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586068,"byte_end":13586071,"line_start":4460,"line_end":4460,"column_start":9,"column_end":12}},{"value":"/ This request only exists since version 5 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586080,"byte_end":13586141,"line_start":4461,"line_end":4461,"column_start":9,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2109},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587874,"byte_end":13587887,"line_start":4495,"line_end":4495,"column_start":13,"column_end":26},"name":"axis_discrete","qualname":"::generated::client::wl_pointer::Implementation::axis_discrete","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_pointer::WlPointer, generated::client::wl_pointer::Axis, i32)","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":" axis click event","sig":null,"attributes":[{"value":"/ axis click event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586269,"byte_end":13586289,"line_start":4463,"line_end":4463,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586298,"byte_end":13586301,"line_start":4464,"line_end":4464,"column_start":9,"column_end":12}},{"value":"/ Discrete step information for scroll and other axes.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586310,"byte_end":13586366,"line_start":4465,"line_end":4465,"column_start":9,"column_end":65}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586375,"byte_end":13586379,"line_start":4466,"line_end":4466,"column_start":9,"column_end":13}},{"value":"/ This event carries the axis value of the wl_pointer.axis event in","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586388,"byte_end":13586457,"line_start":4467,"line_end":4467,"column_start":9,"column_end":78}},{"value":"/ discrete steps (e.g. mouse wheel clicks).","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586466,"byte_end":13586511,"line_start":4468,"line_end":4468,"column_start":9,"column_end":54}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586520,"byte_end":13586524,"line_start":4469,"line_end":4469,"column_start":9,"column_end":13}},{"value":"/ This event does not occur on its own, it is coupled with a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586533,"byte_end":13586595,"line_start":4470,"line_end":4470,"column_start":9,"column_end":71}},{"value":"/ wl_pointer.axis event that represents this axis value on a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586604,"byte_end":13586666,"line_start":4471,"line_end":4471,"column_start":9,"column_end":71}},{"value":"/ continuous scale. The protocol guarantees that each axis_discrete","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586675,"byte_end":13586744,"line_start":4472,"line_end":4472,"column_start":9,"column_end":78}},{"value":"/ event is always followed by exactly one axis event with the same","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586753,"byte_end":13586821,"line_start":4473,"line_end":4473,"column_start":9,"column_end":77}},{"value":"/ axis number within the same wl_pointer.frame. Note that the protocol","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586830,"byte_end":13586902,"line_start":4474,"line_end":4474,"column_start":9,"column_end":81}},{"value":"/ allows for other events to occur between the axis_discrete and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586911,"byte_end":13586977,"line_start":4475,"line_end":4475,"column_start":9,"column_end":75}},{"value":"/ its coupled axis event, including other axis_discrete or axis","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13586986,"byte_end":13587051,"line_start":4476,"line_end":4476,"column_start":9,"column_end":74}},{"value":"/ events.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587060,"byte_end":13587071,"line_start":4477,"line_end":4477,"column_start":9,"column_end":20}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587080,"byte_end":13587084,"line_start":4478,"line_end":4478,"column_start":9,"column_end":13}},{"value":"/ This event is optional; continuous scrolling devices","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587093,"byte_end":13587149,"line_start":4479,"line_end":4479,"column_start":9,"column_end":65}},{"value":"/ like two-finger scrolling on touchpads do not have discrete","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587158,"byte_end":13587221,"line_start":4480,"line_end":4480,"column_start":9,"column_end":72}},{"value":"/ steps and do not generate this event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587230,"byte_end":13587271,"line_start":4481,"line_end":4481,"column_start":9,"column_end":50}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587280,"byte_end":13587284,"line_start":4482,"line_end":4482,"column_start":9,"column_end":13}},{"value":"/ The discrete value carries the directional information. e.g. a value","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587293,"byte_end":13587365,"line_start":4483,"line_end":4483,"column_start":9,"column_end":81}},{"value":"/ of -2 is two steps towards the negative direction of this axis.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587374,"byte_end":13587441,"line_start":4484,"line_end":4484,"column_start":9,"column_end":76}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587450,"byte_end":13587454,"line_start":4485,"line_end":4485,"column_start":9,"column_end":13}},{"value":"/ The axis number is identical to the axis number in the associated","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587463,"byte_end":13587532,"line_start":4486,"line_end":4486,"column_start":9,"column_end":78}},{"value":"/ axis event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587541,"byte_end":13587556,"line_start":4487,"line_end":4487,"column_start":9,"column_end":24}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587565,"byte_end":13587569,"line_start":4488,"line_end":4488,"column_start":9,"column_end":13}},{"value":"/ The order of wl_pointer.axis_discrete and wl_pointer.axis_source is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587578,"byte_end":13587649,"line_start":4489,"line_end":4489,"column_start":9,"column_end":80}},{"value":"/ not guaranteed.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587658,"byte_end":13587677,"line_start":4490,"line_end":4490,"column_start":9,"column_end":28}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587686,"byte_end":13587689,"line_start":4491,"line_end":4491,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_pointer, axis, discrete","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587698,"byte_end":13587779,"line_start":4492,"line_end":4492,"column_start":9,"column_end":90}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587788,"byte_end":13587791,"line_start":4493,"line_end":4493,"column_start":9,"column_end":12}},{"value":"/ This request only exists since version 5 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13587800,"byte_end":13587861,"line_start":4494,"line_end":4494,"column_start":9,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590823,"byte_end":13590833,"line_start":4557,"line_end":4557,"column_start":16,"column_end":26},"name":"set_cursor","qualname":"<WlPointer>::set_cursor","value":"pub fn set_cursor(&Self, u32, Option<&super::wl_surface::WlSurface>, i32, i32)\n-> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" set the pointer surface","sig":null,"attributes":[{"value":"/ set the pointer surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589006,"byte_end":13589033,"line_start":4524,"line_end":4524,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589042,"byte_end":13589045,"line_start":4525,"line_end":4525,"column_start":9,"column_end":12}},{"value":"/ Set the pointer surface, i.e., the surface that contains the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589054,"byte_end":13589118,"line_start":4526,"line_end":4526,"column_start":9,"column_end":73}},{"value":"/ pointer image (cursor). This request gives the surface the role","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589127,"byte_end":13589194,"line_start":4527,"line_end":4527,"column_start":9,"column_end":76}},{"value":"/ of a cursor. If the surface already has another role, it raises","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589203,"byte_end":13589270,"line_start":4528,"line_end":4528,"column_start":9,"column_end":76}},{"value":"/ a protocol error.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589279,"byte_end":13589300,"line_start":4529,"line_end":4529,"column_start":9,"column_end":30}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589309,"byte_end":13589313,"line_start":4530,"line_end":4530,"column_start":9,"column_end":13}},{"value":"/ The cursor actually changes only if the pointer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589322,"byte_end":13589373,"line_start":4531,"line_end":4531,"column_start":9,"column_end":60}},{"value":"/ focus for this device is one of the requesting client's surfaces","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589382,"byte_end":13589450,"line_start":4532,"line_end":4532,"column_start":9,"column_end":77}},{"value":"/ or the surface parameter is the current pointer surface. If","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589459,"byte_end":13589522,"line_start":4533,"line_end":4533,"column_start":9,"column_end":72}},{"value":"/ there was a previous surface set with this request it is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589531,"byte_end":13589591,"line_start":4534,"line_end":4534,"column_start":9,"column_end":69}},{"value":"/ replaced. If surface is NULL, the pointer image is hidden.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589600,"byte_end":13589662,"line_start":4535,"line_end":4535,"column_start":9,"column_end":71}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589671,"byte_end":13589675,"line_start":4536,"line_end":4536,"column_start":9,"column_end":13}},{"value":"/ The parameters hotspot_x and hotspot_y define the position of","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589684,"byte_end":13589749,"line_start":4537,"line_end":4537,"column_start":9,"column_end":74}},{"value":"/ the pointer surface relative to the pointer location. Its","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589758,"byte_end":13589819,"line_start":4538,"line_end":4538,"column_start":9,"column_end":70}},{"value":"/ top-left corner is always at (x, y) - (hotspot_x, hotspot_y),","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589828,"byte_end":13589893,"line_start":4539,"line_end":4539,"column_start":9,"column_end":74}},{"value":"/ where (x, y) are the coordinates of the pointer location, in","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589902,"byte_end":13589966,"line_start":4540,"line_end":4540,"column_start":9,"column_end":73}},{"value":"/ surface-local coordinates.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13589975,"byte_end":13590005,"line_start":4541,"line_end":4541,"column_start":9,"column_end":39}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590014,"byte_end":13590018,"line_start":4542,"line_end":4542,"column_start":9,"column_end":13}},{"value":"/ On surface.attach requests to the pointer surface, hotspot_x","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590027,"byte_end":13590091,"line_start":4543,"line_end":4543,"column_start":9,"column_end":73}},{"value":"/ and hotspot_y are decremented by the x and y parameters","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590100,"byte_end":13590159,"line_start":4544,"line_end":4544,"column_start":9,"column_end":68}},{"value":"/ passed to the request. Attach must be confirmed by","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590168,"byte_end":13590222,"line_start":4545,"line_end":4545,"column_start":9,"column_end":63}},{"value":"/ wl_surface.commit as usual.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590231,"byte_end":13590262,"line_start":4546,"line_end":4546,"column_start":9,"column_end":40}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590271,"byte_end":13590275,"line_start":4547,"line_end":4547,"column_start":9,"column_end":13}},{"value":"/ The hotspot can also be updated by passing the currently set","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590284,"byte_end":13590348,"line_start":4548,"line_end":4548,"column_start":9,"column_end":73}},{"value":"/ pointer surface to this request with new values for hotspot_x","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590357,"byte_end":13590422,"line_start":4549,"line_end":4549,"column_start":9,"column_end":74}},{"value":"/ and hotspot_y.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590431,"byte_end":13590449,"line_start":4550,"line_end":4550,"column_start":9,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590458,"byte_end":13590462,"line_start":4551,"line_end":4551,"column_start":9,"column_end":13}},{"value":"/ The current and pending input regions of the wl_surface are","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590471,"byte_end":13590534,"line_start":4552,"line_end":4552,"column_start":9,"column_end":72}},{"value":"/ cleared, and wl_surface.set_input_region is ignored until the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590543,"byte_end":13590608,"line_start":4553,"line_end":4553,"column_start":9,"column_end":74}},{"value":"/ wl_surface is no longer used as the cursor. When the use as a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590617,"byte_end":13590682,"line_start":4554,"line_end":4554,"column_start":9,"column_end":74}},{"value":"/ cursor ends, the current and pending input regions become","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590691,"byte_end":13590752,"line_start":4555,"line_end":4555,"column_start":9,"column_end":70}},{"value":"/ undefined, and the wl_surface is unmapped.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13590761,"byte_end":13590807,"line_start":4556,"line_end":4556,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13591834,"byte_end":13591841,"line_start":4573,"line_end":4573,"column_start":16,"column_end":23},"name":"release","qualname":"<WlPointer>::release","value":"pub fn release(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" release the pointer object","sig":null,"attributes":[{"value":"/ release the pointer object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13591289,"byte_end":13591319,"line_start":4562,"line_end":4562,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13591328,"byte_end":13591331,"line_start":4563,"line_end":4563,"column_start":9,"column_end":12}},{"value":"/ Using this request a client can tell the server that it is not going to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13591340,"byte_end":13591415,"line_start":4564,"line_end":4564,"column_start":9,"column_end":84}},{"value":"/ use the pointer object anymore.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13591424,"byte_end":13591459,"line_start":4565,"line_end":4565,"column_start":9,"column_end":44}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13591468,"byte_end":13591472,"line_start":4566,"line_end":4566,"column_start":9,"column_end":13}},{"value":"/ This request destroys the pointer proxy object, so clients must not call","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13591481,"byte_end":13591557,"line_start":4567,"line_end":4567,"column_start":9,"column_end":85}},{"value":"/ wl_pointer_destroy() after using this request.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13591566,"byte_end":13591616,"line_start":4568,"line_end":4568,"column_start":9,"column_end":59}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13591625,"byte_end":13591628,"line_start":4569,"line_end":4569,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13591637,"byte_end":13591730,"line_start":4570,"line_end":4570,"column_start":9,"column_end":102}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13591739,"byte_end":13591742,"line_start":4571,"line_end":4571,"column_start":9,"column_end":12}},{"value":"/ This request is only available since version 3 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13591751,"byte_end":13591818,"line_start":4572,"line_end":4572,"column_start":9,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":2123},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13592568,"byte_end":13592579,"line_start":4588,"line_end":4588,"column_start":9,"column_end":20},"name":"wl_keyboard","qualname":"::generated::client::wl_keyboard","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":2124},{"krate":0,"index":2127},{"krate":0,"index":2130},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2152},{"krate":0,"index":2155},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2165},{"krate":0,"index":2168},{"krate":0,"index":2171},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2194},{"krate":0,"index":3450},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3460},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":2198},{"krate":0,"index":3465},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3475},{"krate":0,"index":3477},{"krate":0,"index":3478},{"krate":0,"index":2201},{"krate":0,"index":2204},{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":2217},{"krate":0,"index":2220},{"krate":0,"index":2221}],"decl_id":null,"docs":" keyboard input device","sig":null,"attributes":[{"value":"/ keyboard input device","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13592586,"byte_end":13592611,"line_start":4589,"line_end":4589,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13592616,"byte_end":13592619,"line_start":4590,"line_end":4590,"column_start":5,"column_end":8}},{"value":"/ The wl_keyboard interface represents one or more keyboards","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13592624,"byte_end":13592686,"line_start":4591,"line_end":4591,"column_start":5,"column_end":67}},{"value":"/ associated with a seat.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13592691,"byte_end":13592718,"line_start":4592,"line_end":4592,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2176},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13593280,"byte_end":13593290,"line_start":4610,"line_end":4610,"column_start":16,"column_end":26},"name":"WlKeyboard","qualname":"::generated::client::wl_keyboard::WlKeyboard","value":"WlKeyboard {  }","parent":null,"children":[{"krate":0,"index":2177},{"krate":0,"index":2178}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3451},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13599576,"byte_end":13599584,"line_start":4750,"line_end":4750,"column_start":9,"column_end":17},"name":"NoKeymap","qualname":"::generated::client::wl_keyboard::KeymapFormat::NoKeymap","value":"KeymapFormat::NoKeymap","parent":{"krate":0,"index":3450},"children":[],"decl_id":null,"docs":" no keymap; client must understand how to interpret the raw keycode\n","sig":null,"attributes":[{"value":"/ no keymap; client must understand how to interpret the raw keycode","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13599497,"byte_end":13599567,"line_start":4749,"line_end":4749,"column_start":9,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3454},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13599709,"byte_end":13599714,"line_start":4752,"line_end":4752,"column_start":9,"column_end":14},"name":"XkbV1","qualname":"::generated::client::wl_keyboard::KeymapFormat::XkbV1","value":"KeymapFormat::XkbV1","parent":{"krate":0,"index":3450},"children":[],"decl_id":null,"docs":" libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode\n","sig":null,"attributes":[{"value":"/ libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13599598,"byte_end":13599700,"line_start":4751,"line_end":4751,"column_start":9,"column_end":111}}]},{"kind":"Enum","id":{"krate":0,"index":3450},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13599474,"byte_end":13599486,"line_start":4748,"line_end":4748,"column_start":14,"column_end":26},"name":"KeymapFormat","qualname":"::generated::client::wl_keyboard::KeymapFormat","value":"pub enum KeymapFormat { NoKeymap = , XkbV1 = , }","parent":null,"children":[{"krate":0,"index":3451},{"krate":0,"index":3454}],"decl_id":null,"docs":" keyboard mapping format","sig":null,"attributes":[{"value":"/ keyboard mapping format","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13599252,"byte_end":13599279,"line_start":4742,"line_end":4742,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13599284,"byte_end":13599287,"line_start":4743,"line_end":4743,"column_start":5,"column_end":8}},{"value":"/ This specifies the format of the keymap provided to the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13599292,"byte_end":13599351,"line_start":4744,"line_end":4744,"column_start":5,"column_end":64}},{"value":"/ client with the wl_keyboard.keymap event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13599356,"byte_end":13599401,"line_start":4745,"line_end":4745,"column_start":5,"column_end":50}},{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13599406,"byte_end":13599418,"line_start":4746,"line_end":4746,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13599765,"byte_end":13599773,"line_start":4755,"line_end":4755,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<KeymapFormat>::from_raw","value":"pub fn from_raw(u32) -> Option<KeymapFormat>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600002,"byte_end":13600008,"line_start":4762,"line_end":4762,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<KeymapFormat>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3466},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600298,"byte_end":13600306,"line_start":4773,"line_end":4773,"column_start":9,"column_end":17},"name":"Released","qualname":"::generated::client::wl_keyboard::KeyState::Released","value":"KeyState::Released","parent":{"krate":0,"index":3465},"children":[],"decl_id":null,"docs":" key is not pressed\n","sig":null,"attributes":[{"value":"/ key is not pressed","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600267,"byte_end":13600289,"line_start":4772,"line_end":4772,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3469},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600347,"byte_end":13600354,"line_start":4775,"line_end":4775,"column_start":9,"column_end":16},"name":"Pressed","qualname":"::generated::client::wl_keyboard::KeyState::Pressed","value":"KeyState::Pressed","parent":{"krate":0,"index":3465},"children":[],"decl_id":null,"docs":" key is pressed\n","sig":null,"attributes":[{"value":"/ key is pressed","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600320,"byte_end":13600338,"line_start":4774,"line_end":4774,"column_start":9,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":3465},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600248,"byte_end":13600256,"line_start":4771,"line_end":4771,"column_start":14,"column_end":22},"name":"KeyState","qualname":"::generated::client::wl_keyboard::KeyState","value":"pub enum KeyState { Released = , Pressed = , }","parent":null,"children":[{"krate":0,"index":3466},{"krate":0,"index":3469}],"decl_id":null,"docs":" physical key state","sig":null,"attributes":[{"value":"/ physical key state","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600070,"byte_end":13600092,"line_start":4766,"line_end":4766,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600097,"byte_end":13600100,"line_start":4767,"line_end":4767,"column_start":5,"column_end":8}},{"value":"/ Describes the physical state of a key that produced the key event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600105,"byte_end":13600175,"line_start":4768,"line_end":4768,"column_start":5,"column_end":75}},{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600180,"byte_end":13600192,"line_start":4769,"line_end":4769,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600401,"byte_end":13600409,"line_start":4778,"line_end":4778,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<KeyState>::from_raw","value":"pub fn from_raw(u32) -> Option<KeyState>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600628,"byte_end":13600634,"line_start":4785,"line_end":4785,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<KeyState>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2204},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600707,"byte_end":13600721,"line_start":4789,"line_end":4789,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_keyboard::Implementation","value":"Implementation { keymap, enter, leave, key, modifiers, repeat_info }","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2206},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601032,"byte_end":13601038,"line_start":4796,"line_end":4796,"column_start":13,"column_end":19},"name":"keymap","qualname":"::generated::client::wl_keyboard::Implementation::keymap","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_keyboard::WlKeyboard, generated::client::wl_keyboard::KeymapFormat, i32, u32)","parent":{"krate":0,"index":2204},"children":[],"decl_id":null,"docs":" keyboard mapping","sig":null,"attributes":[{"value":"/ keyboard mapping","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600736,"byte_end":13600756,"line_start":4790,"line_end":4790,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600765,"byte_end":13600768,"line_start":4791,"line_end":4791,"column_start":9,"column_end":12}},{"value":"/ This event provides a file descriptor to the client which can be","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600777,"byte_end":13600845,"line_start":4792,"line_end":4792,"column_start":9,"column_end":77}},{"value":"/ memory-mapped to provide a keyboard mapping description.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600854,"byte_end":13600914,"line_start":4793,"line_end":4793,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600923,"byte_end":13600926,"line_start":4794,"line_end":4794,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_keyboard, format, fd, size","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600935,"byte_end":13601019,"line_start":4795,"line_end":4795,"column_start":9,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":2207},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601432,"byte_end":13601437,"line_start":4803,"line_end":4803,"column_start":13,"column_end":18},"name":"enter","qualname":"::generated::client::wl_keyboard::Implementation::enter","value":"for<'r, 's, 't0, 't1> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_keyboard::WlKeyboard, u32, &'t1 generated::client::wl_surface::WlSurface, std::vec::Vec<u8>)","parent":{"krate":0,"index":2204},"children":[],"decl_id":null,"docs":" enter event","sig":null,"attributes":[{"value":"/ enter event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601188,"byte_end":13601203,"line_start":4797,"line_end":4797,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601212,"byte_end":13601215,"line_start":4798,"line_end":4798,"column_start":9,"column_end":12}},{"value":"/ Notification that this seat's keyboard focus is on a certain","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601224,"byte_end":13601288,"line_start":4799,"line_end":4799,"column_start":9,"column_end":73}},{"value":"/ surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601297,"byte_end":13601309,"line_start":4800,"line_end":4800,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601318,"byte_end":13601321,"line_start":4801,"line_end":4801,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_keyboard, serial, surface, keys","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601330,"byte_end":13601419,"line_start":4802,"line_end":4802,"column_start":9,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":2208},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601955,"byte_end":13601960,"line_start":4813,"line_end":4813,"column_start":13,"column_end":18},"name":"leave","qualname":"::generated::client::wl_keyboard::Implementation::leave","value":"for<'r, 's, 't0, 't1> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_keyboard::WlKeyboard, u32, &'t1 generated::client::wl_surface::WlSurface)","parent":{"krate":0,"index":2204},"children":[],"decl_id":null,"docs":" leave event","sig":null,"attributes":[{"value":"/ leave event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601590,"byte_end":13601605,"line_start":4804,"line_end":4804,"column_start":9,"column_end":24}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601614,"byte_end":13601617,"line_start":4805,"line_end":4805,"column_start":9,"column_end":12}},{"value":"/ Notification that this seat's keyboard focus is no longer on","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601626,"byte_end":13601690,"line_start":4806,"line_end":4806,"column_start":9,"column_end":73}},{"value":"/ a certain surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601699,"byte_end":13601721,"line_start":4807,"line_end":4807,"column_start":9,"column_end":31}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601730,"byte_end":13601734,"line_start":4808,"line_end":4808,"column_start":9,"column_end":13}},{"value":"/ The leave notification is sent before the enter notification","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601743,"byte_end":13601807,"line_start":4809,"line_end":4809,"column_start":9,"column_end":73}},{"value":"/ for the new focus.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601816,"byte_end":13601838,"line_start":4810,"line_end":4810,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601847,"byte_end":13601850,"line_start":4811,"line_end":4811,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_keyboard, serial, surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13601859,"byte_end":13601942,"line_start":4812,"line_end":4812,"column_start":9,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":2209},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602403,"byte_end":13602406,"line_start":4821,"line_end":4821,"column_start":13,"column_end":16},"name":"key","qualname":"::generated::client::wl_keyboard::Implementation::key","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_keyboard::WlKeyboard, u32, u32, u32, generated::client::wl_keyboard::KeyState)","parent":{"krate":0,"index":2204},"children":[],"decl_id":null,"docs":" key event","sig":null,"attributes":[{"value":"/ key event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602098,"byte_end":13602111,"line_start":4814,"line_end":4814,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602120,"byte_end":13602123,"line_start":4815,"line_end":4815,"column_start":9,"column_end":12}},{"value":"/ A key was pressed or released.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602132,"byte_end":13602166,"line_start":4816,"line_end":4816,"column_start":9,"column_end":43}},{"value":"/ The time argument is a timestamp with millisecond","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602175,"byte_end":13602228,"line_start":4817,"line_end":4817,"column_start":9,"column_end":62}},{"value":"/ granularity, with an undefined base.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602237,"byte_end":13602277,"line_start":4818,"line_end":4818,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602286,"byte_end":13602289,"line_start":4819,"line_end":4819,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_keyboard, serial, time, key, state","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602298,"byte_end":13602390,"line_start":4820,"line_end":4820,"column_start":9,"column_end":101}}]},{"kind":"Field","id":{"krate":0,"index":2210},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602869,"byte_end":13602878,"line_start":4828,"line_end":4828,"column_start":13,"column_end":22},"name":"modifiers","qualname":"::generated::client::wl_keyboard::Implementation::modifiers","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_keyboard::WlKeyboard, u32, u32, u32, u32, u32)","parent":{"krate":0,"index":2204},"children":[],"decl_id":null,"docs":" modifier and group state","sig":null,"attributes":[{"value":"/ modifier and group state","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602542,"byte_end":13602570,"line_start":4822,"line_end":4822,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602579,"byte_end":13602582,"line_start":4823,"line_end":4823,"column_start":9,"column_end":12}},{"value":"/ Notifies clients that the modifier and/or group state has","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602591,"byte_end":13602652,"line_start":4824,"line_end":4824,"column_start":9,"column_end":70}},{"value":"/ changed, and it should update its local state.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602661,"byte_end":13602711,"line_start":4825,"line_end":4825,"column_start":9,"column_end":59}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602720,"byte_end":13602723,"line_start":4826,"line_end":4826,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_keyboard, serial, mods_depressed, mods_latched, mods_locked, group","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13602732,"byte_end":13602856,"line_start":4827,"line_end":4827,"column_start":9,"column_end":133}}]},{"kind":"Field","id":{"krate":0,"index":2211},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603922,"byte_end":13603933,"line_start":4847,"line_end":4847,"column_start":13,"column_end":24},"name":"repeat_info","qualname":"::generated::client::wl_keyboard::Implementation::repeat_info","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_keyboard::WlKeyboard, i32, i32)","parent":{"krate":0,"index":2204},"children":[],"decl_id":null,"docs":" repeat rate and delay","sig":null,"attributes":[{"value":"/ repeat rate and delay","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603046,"byte_end":13603071,"line_start":4829,"line_end":4829,"column_start":9,"column_end":34}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603080,"byte_end":13603083,"line_start":4830,"line_end":4830,"column_start":9,"column_end":12}},{"value":"/ Informs the client about the keyboard's repeat rate and delay.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603092,"byte_end":13603158,"line_start":4831,"line_end":4831,"column_start":9,"column_end":75}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603167,"byte_end":13603171,"line_start":4832,"line_end":4832,"column_start":9,"column_end":13}},{"value":"/ This event is sent as soon as the wl_keyboard object has been created,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603180,"byte_end":13603254,"line_start":4833,"line_end":4833,"column_start":9,"column_end":83}},{"value":"/ and is guaranteed to be received by the client before any key press","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603263,"byte_end":13603334,"line_start":4834,"line_end":4834,"column_start":9,"column_end":80}},{"value":"/ event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603343,"byte_end":13603353,"line_start":4835,"line_end":4835,"column_start":9,"column_end":19}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603362,"byte_end":13603366,"line_start":4836,"line_end":4836,"column_start":9,"column_end":13}},{"value":"/ Negative values for either rate or delay are illegal. A rate of zero","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603375,"byte_end":13603447,"line_start":4837,"line_end":4837,"column_start":9,"column_end":81}},{"value":"/ will disable any repeating (regardless of the value of delay).","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603456,"byte_end":13603522,"line_start":4838,"line_end":4838,"column_start":9,"column_end":75}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603531,"byte_end":13603535,"line_start":4839,"line_end":4839,"column_start":9,"column_end":13}},{"value":"/ This event can be sent later on as well with a new value if necessary,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603544,"byte_end":13603618,"line_start":4840,"line_end":4840,"column_start":9,"column_end":83}},{"value":"/ so clients should continue listening for the event past the creation","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603627,"byte_end":13603699,"line_start":4841,"line_end":4841,"column_start":9,"column_end":81}},{"value":"/ of wl_keyboard.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603708,"byte_end":13603727,"line_start":4842,"line_end":4842,"column_start":9,"column_end":28}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603736,"byte_end":13603739,"line_start":4843,"line_end":4843,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_keyboard, rate, delay","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603748,"byte_end":13603827,"line_start":4844,"line_end":4844,"column_start":9,"column_end":88}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603836,"byte_end":13603839,"line_start":4845,"line_end":4845,"column_start":9,"column_end":12}},{"value":"/ This request only exists since version 4 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13603848,"byte_end":13603909,"line_start":4846,"line_end":4846,"column_start":9,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13605068,"byte_end":13605075,"line_start":4878,"line_end":4878,"column_start":16,"column_end":23},"name":"release","qualname":"<WlKeyboard>::release","value":"pub fn release(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" release the keyboard object","sig":null,"attributes":[{"value":"/ release the keyboard object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604807,"byte_end":13604838,"line_start":4872,"line_end":4872,"column_start":9,"column_end":40}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604847,"byte_end":13604850,"line_start":4873,"line_end":4873,"column_start":9,"column_end":12}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604859,"byte_end":13604862,"line_start":4874,"line_end":4874,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604871,"byte_end":13604964,"line_start":4875,"line_end":4875,"column_start":9,"column_end":102}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604973,"byte_end":13604976,"line_start":4876,"line_end":4876,"column_start":9,"column_end":12}},{"value":"/ This request is only available since version 3 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604985,"byte_end":13605052,"line_start":4877,"line_end":4877,"column_start":9,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":2223},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13605803,"byte_end":13605811,"line_start":4893,"line_end":4893,"column_start":9,"column_end":17},"name":"wl_touch","qualname":"::generated::client::wl_touch","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":2224},{"krate":0,"index":2227},{"krate":0,"index":2230},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2237},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2249},{"krate":0,"index":2252},{"krate":0,"index":2255},{"krate":0,"index":2258},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2265},{"krate":0,"index":2268},{"krate":0,"index":2271},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2294},{"krate":0,"index":2298},{"krate":0,"index":2305},{"krate":0,"index":2307},{"krate":0,"index":2310},{"krate":0,"index":2313},{"krate":0,"index":2314}],"decl_id":null,"docs":" touchscreen input device","sig":null,"attributes":[{"value":"/ touchscreen input device","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13605818,"byte_end":13605846,"line_start":4894,"line_end":4894,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13605851,"byte_end":13605854,"line_start":4895,"line_end":4895,"column_start":5,"column_end":8}},{"value":"/ The wl_touch interface represents a touchscreen","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13605859,"byte_end":13605910,"line_start":4896,"line_end":4896,"column_start":5,"column_end":56}},{"value":"/ associated with a seat.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13605915,"byte_end":13605942,"line_start":4897,"line_end":4897,"column_start":5,"column_end":32}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13605947,"byte_end":13605951,"line_start":4898,"line_end":4898,"column_start":5,"column_end":9}},{"value":"/ Touch interactions can consist of one or more contacts.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13605956,"byte_end":13606015,"line_start":4899,"line_end":4899,"column_start":5,"column_end":64}},{"value":"/ For each contact, a series of events is generated, starting","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13606020,"byte_end":13606083,"line_start":4900,"line_end":4900,"column_start":5,"column_end":68}},{"value":"/ with a down event, followed by zero or more motion events,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13606088,"byte_end":13606150,"line_start":4901,"line_end":4901,"column_start":5,"column_end":67}},{"value":"/ and ending with an up event. Events relating to the same","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13606155,"byte_end":13606215,"line_start":4902,"line_end":4902,"column_start":5,"column_end":65}},{"value":"/ contact point can be identified by the ID of the sequence.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13606220,"byte_end":13606282,"line_start":4903,"line_end":4903,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2276},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13606844,"byte_end":13606851,"line_start":4921,"line_end":4921,"column_start":16,"column_end":23},"name":"WlTouch","qualname":"::generated::client::wl_touch::WlTouch","value":"WlTouch {  }","parent":null,"children":[{"krate":0,"index":2277},{"krate":0,"index":2278}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2298},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13611901,"byte_end":13611915,"line_start":5044,"line_end":5044,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_touch::Implementation","value":"Implementation { down, up, motion, frame, cancel }","parent":null,"children":[{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2300},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612400,"byte_end":13612404,"line_start":5053,"line_end":5053,"column_start":13,"column_end":17},"name":"down","qualname":"::generated::client::wl_touch::Implementation::down","value":"for<'r, 's, 't0, 't1> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_touch::WlTouch, u32, u32, &'t1 generated::client::wl_surface::WlSurface, i32, f64, f64)","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" touch down event and beginning of a touch sequence","sig":null,"attributes":[{"value":"/ touch down event and beginning of a touch sequence","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13611930,"byte_end":13611984,"line_start":5045,"line_end":5045,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13611993,"byte_end":13611996,"line_start":5046,"line_end":5046,"column_start":9,"column_end":12}},{"value":"/ A new touch point has appeared on the surface. This touch point is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612005,"byte_end":13612075,"line_start":5047,"line_end":5047,"column_start":9,"column_end":79}},{"value":"/ assigned a unique ID. Future events from this touch point reference","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612084,"byte_end":13612155,"line_start":5048,"line_end":5048,"column_start":9,"column_end":80}},{"value":"/ this ID. The ID ceases to be valid after a touch up event and may be","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612164,"byte_end":13612236,"line_start":5049,"line_end":5049,"column_start":9,"column_end":81}},{"value":"/ reused in the future.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612245,"byte_end":13612270,"line_start":5050,"line_end":5050,"column_start":9,"column_end":34}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612279,"byte_end":13612282,"line_start":5051,"line_end":5051,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_touch, serial, time, surface, id, x, y","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612291,"byte_end":13612387,"line_start":5052,"line_end":5052,"column_start":9,"column_end":105}}]},{"kind":"Field","id":{"krate":0,"index":2301},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612938,"byte_end":13612940,"line_start":5061,"line_end":5061,"column_start":13,"column_end":15},"name":"up","qualname":"::generated::client::wl_touch::Implementation::up","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_touch::WlTouch, u32, u32, i32)","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" end of a touch event sequence","sig":null,"attributes":[{"value":"/ end of a touch event sequence","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612572,"byte_end":13612605,"line_start":5054,"line_end":5054,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612614,"byte_end":13612617,"line_start":5055,"line_end":5055,"column_start":9,"column_end":12}},{"value":"/ The touch point has disappeared. No further events will be sent for","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612626,"byte_end":13612697,"line_start":5056,"line_end":5056,"column_start":9,"column_end":80}},{"value":"/ this touch point and the touch point's ID is released and may be","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612706,"byte_end":13612774,"line_start":5057,"line_end":5057,"column_start":9,"column_end":77}},{"value":"/ reused in a future touch down event.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612783,"byte_end":13612823,"line_start":5058,"line_end":5058,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612832,"byte_end":13612835,"line_start":5059,"line_end":5059,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_touch, serial, time, id","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13612844,"byte_end":13612925,"line_start":5060,"line_end":5060,"column_start":9,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":2302},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613265,"byte_end":13613271,"line_start":5067,"line_end":5067,"column_start":13,"column_end":19},"name":"motion","qualname":"::generated::client::wl_touch::Implementation::motion","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_touch::WlTouch, u32, i32, f64, f64)","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" update of touch point coordinates","sig":null,"attributes":[{"value":"/ update of touch point coordinates","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613052,"byte_end":13613089,"line_start":5062,"line_end":5062,"column_start":9,"column_end":46}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613098,"byte_end":13613101,"line_start":5063,"line_end":5063,"column_start":9,"column_end":12}},{"value":"/ A touch point has changed coordinates.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613110,"byte_end":13613152,"line_start":5064,"line_end":5064,"column_start":9,"column_end":51}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613161,"byte_end":13613164,"line_start":5065,"line_end":5065,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_touch, time, id, x, y","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613173,"byte_end":13613252,"line_start":5066,"line_end":5066,"column_start":9,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":2303},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613578,"byte_end":13613583,"line_start":5073,"line_end":5073,"column_start":13,"column_end":18},"name":"frame","qualname":"::generated::client::wl_touch::Implementation::frame","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_touch::WlTouch)","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" end of touch frame event","sig":null,"attributes":[{"value":"/ end of touch frame event","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613386,"byte_end":13613414,"line_start":5068,"line_end":5068,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613423,"byte_end":13613426,"line_start":5069,"line_end":5069,"column_start":9,"column_end":12}},{"value":"/ Indicates the end of a contact point list.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613435,"byte_end":13613481,"line_start":5070,"line_end":5070,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613490,"byte_end":13613493,"line_start":5071,"line_end":5071,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_touch","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613502,"byte_end":13613565,"line_start":5072,"line_end":5072,"column_start":9,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":2304},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614226,"byte_end":13614232,"line_start":5084,"line_end":5084,"column_start":13,"column_end":19},"name":"cancel","qualname":"::generated::client::wl_touch::Implementation::cancel","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_touch::WlTouch)","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" touch session cancelled","sig":null,"attributes":[{"value":"/ touch session cancelled","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613662,"byte_end":13613689,"line_start":5074,"line_end":5074,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613698,"byte_end":13613701,"line_start":5075,"line_end":5075,"column_start":9,"column_end":12}},{"value":"/ Sent if the compositor decides the touch stream is a global","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613710,"byte_end":13613773,"line_start":5076,"line_end":5076,"column_start":9,"column_end":72}},{"value":"/ gesture. No further events are sent to the clients from that","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613782,"byte_end":13613846,"line_start":5077,"line_end":5077,"column_start":9,"column_end":73}},{"value":"/ particular gesture. Touch cancellation applies to all touch points","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613855,"byte_end":13613925,"line_start":5078,"line_end":5078,"column_start":9,"column_end":79}},{"value":"/ currently active on this client's surface. The client is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13613934,"byte_end":13613994,"line_start":5079,"line_end":5079,"column_start":9,"column_end":69}},{"value":"/ responsible for finalizing the touch points, future touch points on","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614003,"byte_end":13614074,"line_start":5080,"line_end":5080,"column_start":9,"column_end":80}},{"value":"/ this surface may reuse the touch point ID.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614083,"byte_end":13614129,"line_start":5081,"line_end":5081,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614138,"byte_end":13614141,"line_start":5082,"line_end":5082,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_touch","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614150,"byte_end":13614213,"line_start":5083,"line_end":5083,"column_start":9,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13615246,"byte_end":13615253,"line_start":5114,"line_end":5114,"column_start":16,"column_end":23},"name":"release","qualname":"<WlTouch>::release","value":"pub fn release(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" release the touch object","sig":null,"attributes":[{"value":"/ release the touch object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614988,"byte_end":13615016,"line_start":5108,"line_end":5108,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13615025,"byte_end":13615028,"line_start":5109,"line_end":5109,"column_start":9,"column_end":12}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13615037,"byte_end":13615040,"line_start":5110,"line_end":5110,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13615049,"byte_end":13615142,"line_start":5111,"line_end":5111,"column_start":9,"column_end":102}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13615151,"byte_end":13615154,"line_start":5112,"line_end":5112,"column_start":9,"column_end":12}},{"value":"/ This request is only available since version 3 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13615163,"byte_end":13615230,"line_start":5113,"line_end":5113,"column_start":9,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":2316},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13615978,"byte_end":13615987,"line_start":5129,"line_end":5129,"column_start":9,"column_end":18},"name":"wl_output","qualname":"::generated::client::wl_output","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":2317},{"krate":0,"index":2320},{"krate":0,"index":2323},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2358},{"krate":0,"index":2361},{"krate":0,"index":2364},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2387},{"krate":0,"index":3480},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3502},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":2391},{"krate":0,"index":3507},{"krate":0,"index":3532},{"krate":0,"index":3533},{"krate":0,"index":3535},{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":2394},{"krate":0,"index":3540},{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3550},{"krate":0,"index":3552},{"krate":0,"index":3554},{"krate":0,"index":3556},{"krate":0,"index":3559},{"krate":0,"index":3565},{"krate":0,"index":3567},{"krate":0,"index":3569},{"krate":0,"index":3571},{"krate":0,"index":3573},{"krate":0,"index":3595},{"krate":0,"index":3598},{"krate":0,"index":3600},{"krate":0,"index":3603},{"krate":0,"index":3605},{"krate":0,"index":3608},{"krate":0,"index":3610},{"krate":0,"index":3613},{"krate":0,"index":3615},{"krate":0,"index":3618},{"krate":0,"index":3621},{"krate":0,"index":2397},{"krate":0,"index":2400},{"krate":0,"index":2406},{"krate":0,"index":2408},{"krate":0,"index":2411},{"krate":0,"index":2414},{"krate":0,"index":2415}],"decl_id":null,"docs":" compositor output region","sig":null,"attributes":[{"value":"/ compositor output region","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13615994,"byte_end":13616022,"line_start":5130,"line_end":5130,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13616027,"byte_end":13616030,"line_start":5131,"line_end":5131,"column_start":5,"column_end":8}},{"value":"/ An output describes part of the compositor geometry.  The","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13616035,"byte_end":13616096,"line_start":5132,"line_end":5132,"column_start":5,"column_end":66}},{"value":"/ compositor works in the 'compositor coordinate system' and an","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13616101,"byte_end":13616166,"line_start":5133,"line_end":5133,"column_start":5,"column_end":70}},{"value":"/ output corresponds to a rectangular area in that space that is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13616171,"byte_end":13616237,"line_start":5134,"line_end":5134,"column_start":5,"column_end":71}},{"value":"/ actually visible.  This typically corresponds to a monitor that","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13616242,"byte_end":13616309,"line_start":5135,"line_end":5135,"column_start":5,"column_end":72}},{"value":"/ displays part of the compositor space.  This object is published","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13616314,"byte_end":13616382,"line_start":5136,"line_end":5136,"column_start":5,"column_end":73}},{"value":"/ as global during start up, or when a monitor is hotplugged.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13616387,"byte_end":13616450,"line_start":5137,"line_end":5137,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2369},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13617012,"byte_end":13617020,"line_start":5155,"line_end":5155,"column_start":16,"column_end":24},"name":"WlOutput","qualname":"::generated::client::wl_output::WlOutput","value":"WlOutput {  }","parent":null,"children":[{"krate":0,"index":2370},{"krate":0,"index":2371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3481},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622559,"byte_end":13622566,"line_start":5283,"line_end":5283,"column_start":9,"column_end":16},"name":"Unknown","qualname":"::generated::client::wl_output::Subpixel::Unknown","value":"Subpixel::Unknown","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" unknown geometry\n","sig":null,"attributes":[{"value":"/ unknown geometry","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622530,"byte_end":13622550,"line_start":5282,"line_end":5282,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3484},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622604,"byte_end":13622608,"line_start":5285,"line_end":5285,"column_start":9,"column_end":13},"name":"None","qualname":"::generated::client::wl_output::Subpixel::None","value":"Subpixel::None","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" no geometry\n","sig":null,"attributes":[{"value":"/ no geometry","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622580,"byte_end":13622595,"line_start":5284,"line_end":5284,"column_start":9,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3487},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622649,"byte_end":13622662,"line_start":5287,"line_end":5287,"column_start":9,"column_end":22},"name":"HorizontalRgb","qualname":"::generated::client::wl_output::Subpixel::HorizontalRgb","value":"Subpixel::HorizontalRgb","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" horizontal RGB\n","sig":null,"attributes":[{"value":"/ horizontal RGB","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622622,"byte_end":13622640,"line_start":5286,"line_end":5286,"column_start":9,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3490},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622703,"byte_end":13622716,"line_start":5289,"line_end":5289,"column_start":9,"column_end":22},"name":"HorizontalBgr","qualname":"::generated::client::wl_output::Subpixel::HorizontalBgr","value":"Subpixel::HorizontalBgr","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" horizontal BGR\n","sig":null,"attributes":[{"value":"/ horizontal BGR","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622676,"byte_end":13622694,"line_start":5288,"line_end":5288,"column_start":9,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3493},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622755,"byte_end":13622766,"line_start":5291,"line_end":5291,"column_start":9,"column_end":20},"name":"VerticalRgb","qualname":"::generated::client::wl_output::Subpixel::VerticalRgb","value":"Subpixel::VerticalRgb","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" vertical RGB\n","sig":null,"attributes":[{"value":"/ vertical RGB","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622730,"byte_end":13622746,"line_start":5290,"line_end":5290,"column_start":9,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3496},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622805,"byte_end":13622816,"line_start":5293,"line_end":5293,"column_start":9,"column_end":20},"name":"VerticalBgr","qualname":"::generated::client::wl_output::Subpixel::VerticalBgr","value":"Subpixel::VerticalBgr","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" vertical BGR\n","sig":null,"attributes":[{"value":"/ vertical BGR","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622780,"byte_end":13622796,"line_start":5292,"line_end":5292,"column_start":9,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":3480},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622511,"byte_end":13622519,"line_start":5281,"line_end":5281,"column_start":14,"column_end":22},"name":"Subpixel","qualname":"::generated::client::wl_output::Subpixel","value":"pub enum Subpixel {\n    Unknown = ,\n    None = ,\n    HorizontalRgb = ,\n    HorizontalBgr = ,\n    VerticalRgb = ,\n    VerticalBgr = ,\n}","parent":null,"children":[{"krate":0,"index":3481},{"krate":0,"index":3484},{"krate":0,"index":3487},{"krate":0,"index":3490},{"krate":0,"index":3493},{"krate":0,"index":3496}],"decl_id":null,"docs":" subpixel geometry information","sig":null,"attributes":[{"value":"/ subpixel geometry information","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622303,"byte_end":13622336,"line_start":5275,"line_end":5275,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622341,"byte_end":13622344,"line_start":5276,"line_end":5276,"column_start":5,"column_end":8}},{"value":"/ This enumeration describes how the physical","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622349,"byte_end":13622396,"line_start":5277,"line_end":5277,"column_start":5,"column_end":52}},{"value":"/ pixels on an output are laid out.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622401,"byte_end":13622438,"line_start":5278,"line_end":5278,"column_start":5,"column_end":42}},{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622443,"byte_end":13622455,"line_start":5279,"line_end":5279,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622863,"byte_end":13622871,"line_start":5296,"line_end":5296,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Subpixel>::from_raw","value":"pub fn from_raw(u32) -> Option<Subpixel>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623290,"byte_end":13623296,"line_start":5307,"line_end":5307,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Subpixel>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3508},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624040,"byte_end":13624046,"line_start":5328,"line_end":5328,"column_start":9,"column_end":15},"name":"Normal","qualname":"::generated::client::wl_output::Transform::Normal","value":"Transform::Normal","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":" no transform\n","sig":null,"attributes":[{"value":"/ no transform","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624015,"byte_end":13624031,"line_start":5327,"line_end":5327,"column_start":9,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3511},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624101,"byte_end":13624104,"line_start":5330,"line_end":5330,"column_start":9,"column_end":12},"name":"_90","qualname":"::generated::client::wl_output::Transform::_90","value":"Transform::_90","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":" 90 degrees counter-clockwise\n","sig":null,"attributes":[{"value":"/ 90 degrees counter-clockwise","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624060,"byte_end":13624092,"line_start":5329,"line_end":5329,"column_start":9,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3514},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624160,"byte_end":13624164,"line_start":5332,"line_end":5332,"column_start":9,"column_end":13},"name":"_180","qualname":"::generated::client::wl_output::Transform::_180","value":"Transform::_180","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":" 180 degrees counter-clockwise\n","sig":null,"attributes":[{"value":"/ 180 degrees counter-clockwise","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624118,"byte_end":13624151,"line_start":5331,"line_end":5331,"column_start":9,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3517},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624220,"byte_end":13624224,"line_start":5334,"line_end":5334,"column_start":9,"column_end":13},"name":"_270","qualname":"::generated::client::wl_output::Transform::_270","value":"Transform::_270","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":" 270 degrees counter-clockwise\n","sig":null,"attributes":[{"value":"/ 270 degrees counter-clockwise","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624178,"byte_end":13624211,"line_start":5333,"line_end":5333,"column_start":9,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3520},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624289,"byte_end":13624296,"line_start":5336,"line_end":5336,"column_start":9,"column_end":16},"name":"Flipped","qualname":"::generated::client::wl_output::Transform::Flipped","value":"Transform::Flipped","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":" 180 degree flip around a vertical axis\n","sig":null,"attributes":[{"value":"/ 180 degree flip around a vertical axis","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624238,"byte_end":13624280,"line_start":5335,"line_end":5335,"column_start":9,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3523},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624367,"byte_end":13624376,"line_start":5338,"line_end":5338,"column_start":9,"column_end":18},"name":"Flipped90","qualname":"::generated::client::wl_output::Transform::Flipped90","value":"Transform::Flipped90","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":" flip and rotate 90 degrees counter-clockwise\n","sig":null,"attributes":[{"value":"/ flip and rotate 90 degrees counter-clockwise","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624310,"byte_end":13624358,"line_start":5337,"line_end":5337,"column_start":9,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3526},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624448,"byte_end":13624458,"line_start":5340,"line_end":5340,"column_start":9,"column_end":19},"name":"Flipped180","qualname":"::generated::client::wl_output::Transform::Flipped180","value":"Transform::Flipped180","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":" flip and rotate 180 degrees counter-clockwise\n","sig":null,"attributes":[{"value":"/ flip and rotate 180 degrees counter-clockwise","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624390,"byte_end":13624439,"line_start":5339,"line_end":5339,"column_start":9,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3529},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624530,"byte_end":13624540,"line_start":5342,"line_end":5342,"column_start":9,"column_end":19},"name":"Flipped270","qualname":"::generated::client::wl_output::Transform::Flipped270","value":"Transform::Flipped270","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":" flip and rotate 270 degrees counter-clockwise\n","sig":null,"attributes":[{"value":"/ flip and rotate 270 degrees counter-clockwise","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624472,"byte_end":13624521,"line_start":5341,"line_end":5341,"column_start":9,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":3507},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623995,"byte_end":13624004,"line_start":5326,"line_end":5326,"column_start":14,"column_end":23},"name":"Transform","qualname":"::generated::client::wl_output::Transform","value":"pub enum Transform {\n    Normal = ,\n    _90 = ,\n    _180 = ,\n    _270 = ,\n    Flipped = ,\n    Flipped90 = ,\n    Flipped180 = ,\n    Flipped270 = ,\n}","parent":null,"children":[{"krate":0,"index":3508},{"krate":0,"index":3511},{"krate":0,"index":3514},{"krate":0,"index":3517},{"krate":0,"index":3520},{"krate":0,"index":3523},{"krate":0,"index":3526},{"krate":0,"index":3529}],"decl_id":null,"docs":" transform from framebuffer to output","sig":null,"attributes":[{"value":"/ transform from framebuffer to output","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623358,"byte_end":13623398,"line_start":5311,"line_end":5311,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623403,"byte_end":13623406,"line_start":5312,"line_end":5312,"column_start":5,"column_end":8}},{"value":"/ This describes the transform that a compositor will apply to a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623411,"byte_end":13623477,"line_start":5313,"line_end":5313,"column_start":5,"column_end":71}},{"value":"/ surface to compensate for the rotation or mirroring of an","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623482,"byte_end":13623543,"line_start":5314,"line_end":5314,"column_start":5,"column_end":66}},{"value":"/ output device.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623548,"byte_end":13623566,"line_start":5315,"line_end":5315,"column_start":5,"column_end":23}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623571,"byte_end":13623575,"line_start":5316,"line_end":5316,"column_start":5,"column_end":9}},{"value":"/ The flipped values correspond to an initial flip around a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623580,"byte_end":13623641,"line_start":5317,"line_end":5317,"column_start":5,"column_end":66}},{"value":"/ vertical axis followed by rotation.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623646,"byte_end":13623685,"line_start":5318,"line_end":5318,"column_start":5,"column_end":44}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623690,"byte_end":13623694,"line_start":5319,"line_end":5319,"column_start":5,"column_end":9}},{"value":"/ The purpose is mainly to allow clients to render accordingly and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623699,"byte_end":13623767,"line_start":5320,"line_end":5320,"column_start":5,"column_end":73}},{"value":"/ tell the compositor, so that for fullscreen surfaces, the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623772,"byte_end":13623833,"line_start":5321,"line_end":5321,"column_start":5,"column_end":66}},{"value":"/ compositor will still be able to scan out directly from client","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623838,"byte_end":13623904,"line_start":5322,"line_end":5322,"column_start":5,"column_end":71}},{"value":"/ surfaces.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623909,"byte_end":13623922,"line_start":5323,"line_end":5323,"column_start":5,"column_end":18}},{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13623927,"byte_end":13623939,"line_start":5324,"line_end":5324,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2395},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624588,"byte_end":13624596,"line_start":5345,"line_end":5345,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Transform>::from_raw","value":"pub fn from_raw(u32) -> Option<Transform>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13625096,"byte_end":13625102,"line_start":5358,"line_end":5358,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Transform>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3540},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13625366,"byte_end":13625370,"line_start":5367,"line_end":5367,"column_start":20,"column_end":24},"name":"Mode","qualname":"::generated::client::wl_output::Mode","value":"Mode {  }","parent":null,"children":[{"krate":0,"index":3541}],"decl_id":null,"docs":" mode information","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3574},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13625447,"byte_end":13625454,"line_start":5369,"line_end":5369,"column_start":19,"column_end":26},"name":"Current","qualname":"::generated::client::wl_output::Mode::Current","value":"Self","parent":{"krate":0,"index":3573},"children":[],"decl_id":null,"docs":" indicates this is the current mode\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3575},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13625533,"byte_end":13625542,"line_start":5371,"line_end":5371,"column_start":19,"column_end":28},"name":"Preferred","qualname":"::generated::client::wl_output::Mode::Preferred","value":"Self","parent":{"krate":0,"index":3573},"children":[],"decl_id":null,"docs":" indicates this is the preferred mode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13625597,"byte_end":13625605,"line_start":5375,"line_end":5375,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Mode>::from_raw","value":"pub fn from_raw(u32) -> Option<Mode>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13625703,"byte_end":13625709,"line_start":5378,"line_end":5378,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Mode>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2400},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13625781,"byte_end":13625795,"line_start":5382,"line_end":5382,"column_start":16,"column_end":30},"name":"Implementation","qualname":"::generated::client::wl_output::Implementation","value":"Implementation { geometry, mode, done, scale }","parent":null,"children":[{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2402},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626217,"byte_end":13626225,"line_start":5390,"line_end":5390,"column_start":13,"column_end":21},"name":"geometry","qualname":"::generated::client::wl_output::Implementation::geometry","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_output::WlOutput, i32, i32, i32, i32, generated::client::wl_output::Subpixel, std::string::String, std::string::String, generated::client::wl_output::Transform)","parent":{"krate":0,"index":2400},"children":[],"decl_id":null,"docs":" properties of the output","sig":null,"attributes":[{"value":"/ properties of the output","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13625810,"byte_end":13625838,"line_start":5383,"line_end":5383,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13625847,"byte_end":13625850,"line_start":5384,"line_end":5384,"column_start":9,"column_end":12}},{"value":"/ The geometry event describes geometric properties of the output.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13625859,"byte_end":13625927,"line_start":5385,"line_end":5385,"column_start":9,"column_end":77}},{"value":"/ The event is sent when binding to the output object and whenever","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13625936,"byte_end":13626004,"line_start":5386,"line_end":5386,"column_start":9,"column_end":77}},{"value":"/ any of the properties change.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626013,"byte_end":13626046,"line_start":5387,"line_end":5387,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626055,"byte_end":13626058,"line_start":5388,"line_end":5388,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_output, x, y, physical_width, physical_height, subpixel, make, model, transform","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626067,"byte_end":13626204,"line_start":5389,"line_end":5389,"column_start":9,"column_end":146}}]},{"kind":"Field","id":{"krate":0,"index":2403},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627419,"byte_end":13627423,"line_start":5408,"line_end":5408,"column_start":13,"column_end":17},"name":"mode","qualname":"::generated::client::wl_output::Implementation::mode","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_output::WlOutput, generated::client::wl_output::Mode, i32, i32, i32)","parent":{"krate":0,"index":2400},"children":[],"decl_id":null,"docs":" advertise available modes for the output","sig":null,"attributes":[{"value":"/ advertise available modes for the output","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626436,"byte_end":13626480,"line_start":5391,"line_end":5391,"column_start":9,"column_end":53}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626489,"byte_end":13626492,"line_start":5392,"line_end":5392,"column_start":9,"column_end":12}},{"value":"/ The mode event describes an available mode for the output.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626501,"byte_end":13626563,"line_start":5393,"line_end":5393,"column_start":9,"column_end":71}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626572,"byte_end":13626576,"line_start":5394,"line_end":5394,"column_start":9,"column_end":13}},{"value":"/ The event is sent when binding to the output object and there","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626585,"byte_end":13626650,"line_start":5395,"line_end":5395,"column_start":9,"column_end":74}},{"value":"/ will always be one mode, the current mode.  The event is sent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626659,"byte_end":13626724,"line_start":5396,"line_end":5396,"column_start":9,"column_end":74}},{"value":"/ again if an output changes mode, for the mode that is now","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626733,"byte_end":13626794,"line_start":5397,"line_end":5397,"column_start":9,"column_end":70}},{"value":"/ current.  In other words, the current mode is always the last","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626803,"byte_end":13626868,"line_start":5398,"line_end":5398,"column_start":9,"column_end":74}},{"value":"/ mode that was received with the current flag set.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626877,"byte_end":13626930,"line_start":5399,"line_end":5399,"column_start":9,"column_end":62}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626939,"byte_end":13626943,"line_start":5400,"line_end":5400,"column_start":9,"column_end":13}},{"value":"/ The size of a mode is given in physical hardware units of","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13626952,"byte_end":13627013,"line_start":5401,"line_end":5401,"column_start":9,"column_end":70}},{"value":"/ the output device. This is not necessarily the same as","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627022,"byte_end":13627080,"line_start":5402,"line_end":5402,"column_start":9,"column_end":67}},{"value":"/ the output size in the global compositor space. For instance,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627089,"byte_end":13627154,"line_start":5403,"line_end":5403,"column_start":9,"column_end":74}},{"value":"/ the output may be scaled, as described in wl_output.scale,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627163,"byte_end":13627225,"line_start":5404,"line_end":5404,"column_start":9,"column_end":71}},{"value":"/ or transformed, as described in wl_output.transform.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627234,"byte_end":13627290,"line_start":5405,"line_end":5405,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627299,"byte_end":13627302,"line_start":5406,"line_end":5406,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_output, flags, width, height, refresh","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627311,"byte_end":13627406,"line_start":5407,"line_end":5407,"column_start":9,"column_end":104}}]},{"kind":"Field","id":{"krate":0,"index":2404},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628103,"byte_end":13628107,"line_start":5420,"line_end":5420,"column_start":13,"column_end":17},"name":"done","qualname":"::generated::client::wl_output::Implementation::done","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_output::WlOutput)","parent":{"krate":0,"index":2400},"children":[],"decl_id":null,"docs":" sent all information about output","sig":null,"attributes":[{"value":"/ sent all information about output","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627556,"byte_end":13627593,"line_start":5409,"line_end":5409,"column_start":9,"column_end":46}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627602,"byte_end":13627605,"line_start":5410,"line_end":5410,"column_start":9,"column_end":12}},{"value":"/ This event is sent after all other properties have been","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627614,"byte_end":13627673,"line_start":5411,"line_end":5411,"column_start":9,"column_end":68}},{"value":"/ sent after binding to the output object and after any","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627682,"byte_end":13627739,"line_start":5412,"line_end":5412,"column_start":9,"column_end":66}},{"value":"/ other property changes done after that. This allows","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627748,"byte_end":13627803,"line_start":5413,"line_end":5413,"column_start":9,"column_end":64}},{"value":"/ changes to the output properties to be seen as","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627812,"byte_end":13627862,"line_start":5414,"line_end":5414,"column_start":9,"column_end":59}},{"value":"/ atomic, even if they happen via multiple events.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627871,"byte_end":13627923,"line_start":5415,"line_end":5415,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627932,"byte_end":13627935,"line_start":5416,"line_end":5416,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_output","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13627944,"byte_end":13628008,"line_start":5417,"line_end":5417,"column_start":9,"column_end":73}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628017,"byte_end":13628020,"line_start":5418,"line_end":5418,"column_start":9,"column_end":12}},{"value":"/ This request only exists since version 2 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628029,"byte_end":13628090,"line_start":5419,"line_end":5419,"column_start":9,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2405},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629406,"byte_end":13629411,"line_start":5445,"line_end":5445,"column_start":13,"column_end":18},"name":"scale","qualname":"::generated::client::wl_output::Implementation::scale","value":"for<'r, 's, 't0> fn(&'r mut event_queue::EventQueueHandle, &'s mut ID, &'t0 generated::client::wl_output::WlOutput, i32)","parent":{"krate":0,"index":2400},"children":[],"decl_id":null,"docs":" output scaling properties","sig":null,"attributes":[{"value":"/ output scaling properties","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628188,"byte_end":13628217,"line_start":5421,"line_end":5421,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628226,"byte_end":13628229,"line_start":5422,"line_end":5422,"column_start":9,"column_end":12}},{"value":"/ This event contains scaling geometry information","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628238,"byte_end":13628290,"line_start":5423,"line_end":5423,"column_start":9,"column_end":61}},{"value":"/ that is not in the geometry event. It may be sent after","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628299,"byte_end":13628358,"line_start":5424,"line_end":5424,"column_start":9,"column_end":68}},{"value":"/ binding the output object or if the output scale changes","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628367,"byte_end":13628427,"line_start":5425,"line_end":5425,"column_start":9,"column_end":69}},{"value":"/ later. If it is not sent, the client should assume a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628436,"byte_end":13628492,"line_start":5426,"line_end":5426,"column_start":9,"column_end":65}},{"value":"/ scale of 1.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628501,"byte_end":13628516,"line_start":5427,"line_end":5427,"column_start":9,"column_end":24}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628525,"byte_end":13628529,"line_start":5428,"line_end":5428,"column_start":9,"column_end":13}},{"value":"/ A scale larger than 1 means that the compositor will","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628538,"byte_end":13628594,"line_start":5429,"line_end":5429,"column_start":9,"column_end":65}},{"value":"/ automatically scale surface buffers by this amount","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628603,"byte_end":13628657,"line_start":5430,"line_end":5430,"column_start":9,"column_end":63}},{"value":"/ when rendering. This is used for very high resolution","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628666,"byte_end":13628723,"line_start":5431,"line_end":5431,"column_start":9,"column_end":66}},{"value":"/ displays where applications rendering at the native","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628732,"byte_end":13628787,"line_start":5432,"line_end":5432,"column_start":9,"column_end":64}},{"value":"/ resolution would be too small to be legible.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628796,"byte_end":13628844,"line_start":5433,"line_end":5433,"column_start":9,"column_end":57}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628853,"byte_end":13628857,"line_start":5434,"line_end":5434,"column_start":9,"column_end":13}},{"value":"/ It is intended that scaling aware clients track the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628866,"byte_end":13628921,"line_start":5435,"line_end":5435,"column_start":9,"column_end":64}},{"value":"/ current output of a surface, and if it is on a scaled","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628930,"byte_end":13628987,"line_start":5436,"line_end":5436,"column_start":9,"column_end":66}},{"value":"/ output it should use wl_surface.set_buffer_scale with","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13628996,"byte_end":13629053,"line_start":5437,"line_end":5437,"column_start":9,"column_end":66}},{"value":"/ the scale of the output. That way the compositor can","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629062,"byte_end":13629118,"line_start":5438,"line_end":5438,"column_start":9,"column_end":65}},{"value":"/ avoid scaling the surface, and the client can supply","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629127,"byte_end":13629183,"line_start":5439,"line_end":5439,"column_start":9,"column_end":65}},{"value":"/ a higher detail image.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629192,"byte_end":13629218,"line_start":5440,"line_end":5440,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629227,"byte_end":13629230,"line_start":5441,"line_end":5441,"column_start":9,"column_end":12}},{"value":"/ **Arguments:** event_queue_handle, interface_data, wl_output, factor","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629239,"byte_end":13629311,"line_start":5442,"line_end":5442,"column_start":9,"column_end":81}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629320,"byte_end":13629323,"line_start":5443,"line_end":5443,"column_start":9,"column_end":12}},{"value":"/ This request only exists since version 2 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629332,"byte_end":13629393,"line_start":5444,"line_end":5444,"column_start":9,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13630515,"byte_end":13630522,"line_start":5476,"line_end":5476,"column_start":16,"column_end":23},"name":"release","qualname":"<WlOutput>::release","value":"pub fn release(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" release the output object","sig":null,"attributes":[{"value":"/ release the output object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13630129,"byte_end":13630158,"line_start":5468,"line_end":5468,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13630167,"byte_end":13630170,"line_start":5469,"line_end":5469,"column_start":9,"column_end":12}},{"value":"/ Using this request a client can tell the server that it is not going to","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13630179,"byte_end":13630254,"line_start":5470,"line_end":5470,"column_start":9,"column_end":84}},{"value":"/ use the output object anymore.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13630263,"byte_end":13630297,"line_start":5471,"line_end":5471,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13630306,"byte_end":13630309,"line_start":5472,"line_end":5472,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13630318,"byte_end":13630411,"line_start":5473,"line_end":5473,"column_start":9,"column_end":102}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13630420,"byte_end":13630423,"line_start":5474,"line_end":5474,"column_start":9,"column_end":12}},{"value":"/ This request is only available since version 3 of the interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13630432,"byte_end":13630499,"line_start":5475,"line_end":5475,"column_start":9,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":2417},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13631248,"byte_end":13631257,"line_start":5491,"line_end":5491,"column_start":9,"column_end":18},"name":"wl_region","qualname":"::generated::client::wl_region","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2421},{"krate":0,"index":2424},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2431},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2443},{"krate":0,"index":2446},{"krate":0,"index":2449},{"krate":0,"index":2452},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2459},{"krate":0,"index":2462},{"krate":0,"index":2465},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491}],"decl_id":null,"docs":" region interface","sig":null,"attributes":[{"value":"/ region interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13631264,"byte_end":13631284,"line_start":5492,"line_end":5492,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13631289,"byte_end":13631292,"line_start":5493,"line_end":5493,"column_start":5,"column_end":8}},{"value":"/ A region object describes an area.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13631297,"byte_end":13631335,"line_start":5494,"line_end":5494,"column_start":5,"column_end":43}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13631340,"byte_end":13631344,"line_start":5495,"line_end":5495,"column_start":5,"column_end":9}},{"value":"/ Region objects are used to describe the opaque and input","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13631349,"byte_end":13631409,"line_start":5496,"line_end":5496,"column_start":5,"column_end":65}},{"value":"/ regions of a surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13631414,"byte_end":13631439,"line_start":5497,"line_end":5497,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2470},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13632001,"byte_end":13632009,"line_start":5515,"line_end":5515,"column_start":16,"column_end":24},"name":"WlRegion","qualname":"::generated::client::wl_region::WlRegion","value":"WlRegion {  }","parent":null,"children":[{"krate":0,"index":2471},{"krate":0,"index":2472}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13635053,"byte_end":13635060,"line_start":5597,"line_end":5597,"column_start":16,"column_end":23},"name":"destroy","qualname":"<WlRegion>::destroy","value":"pub fn destroy(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" destroy region","sig":null,"attributes":[{"value":"/ destroy region","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13634824,"byte_end":13634842,"line_start":5592,"line_end":5592,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13634851,"byte_end":13634854,"line_start":5593,"line_end":5593,"column_start":9,"column_end":12}},{"value":"/ Destroy the region.  This will invalidate the object ID.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13634863,"byte_end":13634923,"line_start":5594,"line_end":5594,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13634932,"byte_end":13634935,"line_start":5595,"line_end":5595,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13634944,"byte_end":13635037,"line_start":5596,"line_end":5596,"column_start":9,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13635888,"byte_end":13635891,"line_start":5613,"line_end":5613,"column_start":16,"column_end":19},"name":"add","qualname":"<WlRegion>::add","value":"pub fn add(&Self, i32, i32, i32, i32) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" add rectangle to region","sig":null,"attributes":[{"value":"/ add rectangle to region","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13635778,"byte_end":13635805,"line_start":5610,"line_end":5610,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13635814,"byte_end":13635817,"line_start":5611,"line_end":5611,"column_start":9,"column_end":12}},{"value":"/ Add the specified rectangle to the region.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13635826,"byte_end":13635872,"line_start":5612,"line_end":5612,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13636350,"byte_end":13636358,"line_start":5621,"line_end":5621,"column_start":16,"column_end":24},"name":"subtract","qualname":"<WlRegion>::subtract","value":"pub fn subtract(&Self, i32, i32, i32, i32) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" subtract rectangle from region","sig":null,"attributes":[{"value":"/ subtract rectangle from region","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13636226,"byte_end":13636260,"line_start":5618,"line_end":5618,"column_start":9,"column_end":43}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13636269,"byte_end":13636272,"line_start":5619,"line_end":5619,"column_start":9,"column_end":12}},{"value":"/ Subtract the specified rectangle from the region.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13636281,"byte_end":13636334,"line_start":5620,"line_end":5620,"column_start":9,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":2495},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13636706,"byte_end":13636722,"line_start":5628,"line_end":5628,"column_start":9,"column_end":25},"name":"wl_subcompositor","qualname":"::generated::client::wl_subcompositor","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":2496},{"krate":0,"index":2499},{"krate":0,"index":2502},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2509},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2521},{"krate":0,"index":2524},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2537},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":3632},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3639},{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":2566},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571}],"decl_id":null,"docs":" sub-surface compositing","sig":null,"attributes":[{"value":"/ sub-surface compositing","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13636729,"byte_end":13636756,"line_start":5629,"line_end":5629,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13636761,"byte_end":13636764,"line_start":5630,"line_end":5630,"column_start":5,"column_end":8}},{"value":"/ The global interface exposing sub-surface compositing capabilities.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13636769,"byte_end":13636840,"line_start":5631,"line_end":5631,"column_start":5,"column_end":76}},{"value":"/ A wl_surface, that has sub-surfaces associated, is called the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13636845,"byte_end":13636910,"line_start":5632,"line_end":5632,"column_start":5,"column_end":70}},{"value":"/ parent surface. Sub-surfaces can be arbitrarily nested and create","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13636915,"byte_end":13636984,"line_start":5633,"line_end":5633,"column_start":5,"column_end":74}},{"value":"/ a tree of sub-surfaces.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13636989,"byte_end":13637016,"line_start":5634,"line_end":5634,"column_start":5,"column_end":32}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637021,"byte_end":13637025,"line_start":5635,"line_end":5635,"column_start":5,"column_end":9}},{"value":"/ The root surface in a tree of sub-surfaces is the main","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637030,"byte_end":13637088,"line_start":5636,"line_end":5636,"column_start":5,"column_end":63}},{"value":"/ surface. The main surface cannot be a sub-surface, because","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637093,"byte_end":13637155,"line_start":5637,"line_end":5637,"column_start":5,"column_end":67}},{"value":"/ sub-surfaces must always have a parent.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637160,"byte_end":13637203,"line_start":5638,"line_end":5638,"column_start":5,"column_end":48}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637208,"byte_end":13637212,"line_start":5639,"line_end":5639,"column_start":5,"column_end":9}},{"value":"/ A main surface with its sub-surfaces forms a (compound) window.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637217,"byte_end":13637284,"line_start":5640,"line_end":5640,"column_start":5,"column_end":72}},{"value":"/ For window management purposes, this set of wl_surface objects is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637289,"byte_end":13637358,"line_start":5641,"line_end":5641,"column_start":5,"column_end":74}},{"value":"/ to be considered as a single window, and it should also behave as","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637363,"byte_end":13637432,"line_start":5642,"line_end":5642,"column_start":5,"column_end":74}},{"value":"/ such.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637437,"byte_end":13637446,"line_start":5643,"line_end":5643,"column_start":5,"column_end":14}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637451,"byte_end":13637455,"line_start":5644,"line_end":5644,"column_start":5,"column_end":9}},{"value":"/ The aim of sub-surfaces is to offload some of the compositing work","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637460,"byte_end":13637530,"line_start":5645,"line_end":5645,"column_start":5,"column_end":75}},{"value":"/ within a window from clients to the compositor. A prime example is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637535,"byte_end":13637605,"line_start":5646,"line_end":5646,"column_start":5,"column_end":75}},{"value":"/ a video player with decorations and video in separate wl_surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637610,"byte_end":13637678,"line_start":5647,"line_end":5647,"column_start":5,"column_end":73}},{"value":"/ objects. This should allow the compositor to pass YUV video buffer","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637683,"byte_end":13637753,"line_start":5648,"line_end":5648,"column_start":5,"column_end":75}},{"value":"/ processing to dedicated overlay hardware when possible.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13637758,"byte_end":13637817,"line_start":5649,"line_end":5649,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2548},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13638379,"byte_end":13638394,"line_start":5667,"line_end":5667,"column_start":16,"column_end":31},"name":"WlSubcompositor","qualname":"::generated::client::wl_subcompositor::WlSubcompositor","value":"WlSubcompositor {  }","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3633},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641294,"byte_end":13641304,"line_start":5744,"line_end":5744,"column_start":9,"column_end":19},"name":"BadSurface","qualname":"::generated::client::wl_subcompositor::Error::BadSurface","value":"Error::BadSurface","parent":{"krate":0,"index":3632},"children":[],"decl_id":null,"docs":" the to-be sub-surface is invalid\n","sig":null,"attributes":[{"value":"/ the to-be sub-surface is invalid","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641249,"byte_end":13641285,"line_start":5743,"line_end":5743,"column_start":9,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":3632},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641233,"byte_end":13641238,"line_start":5742,"line_end":5742,"column_start":14,"column_end":19},"name":"Error","qualname":"::generated::client::wl_subcompositor::Error","value":"pub enum Error { BadSurface = , }","parent":null,"children":[{"krate":0,"index":3633}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641165,"byte_end":13641177,"line_start":5740,"line_end":5740,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641348,"byte_end":13641356,"line_start":5747,"line_end":5747,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641525,"byte_end":13641531,"line_start":5753,"line_end":5753,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13642097,"byte_end":13642104,"line_start":5767,"line_end":5767,"column_start":16,"column_end":23},"name":"destroy","qualname":"<WlSubcompositor>::destroy","value":"pub fn destroy(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" unbind from the subcompositor interface","sig":null,"attributes":[{"value":"/ unbind from the subcompositor interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641721,"byte_end":13641764,"line_start":5760,"line_end":5760,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641773,"byte_end":13641776,"line_start":5761,"line_end":5761,"column_start":9,"column_end":12}},{"value":"/ Informs the server that the client will not be using this","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641785,"byte_end":13641846,"line_start":5762,"line_end":5762,"column_start":9,"column_end":70}},{"value":"/ protocol object anymore. This does not affect any other","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641855,"byte_end":13641914,"line_start":5763,"line_end":5763,"column_start":9,"column_end":68}},{"value":"/ objects, wl_subsurface objects included.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641923,"byte_end":13641967,"line_start":5764,"line_end":5764,"column_start":9,"column_end":53}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641976,"byte_end":13641979,"line_start":5765,"line_end":5765,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641988,"byte_end":13642081,"line_start":5766,"line_end":5766,"column_start":9,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13643284,"byte_end":13643298,"line_start":5789,"line_end":5789,"column_start":16,"column_end":30},"name":"get_subsurface","qualname":"<WlSubcompositor>::get_subsurface","value":"pub fn get_subsurface(&Self, &super::wl_surface::WlSurface,\n                      &super::wl_surface::WlSurface)\n-> RequestResult<super::wl_subsurface::WlSubsurface>","parent":null,"children":[],"decl_id":null,"docs":" give a surface the role sub-surface","sig":null,"attributes":[{"value":"/ give a surface the role sub-surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13642829,"byte_end":13642868,"line_start":5780,"line_end":5780,"column_start":9,"column_end":48}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13642877,"byte_end":13642880,"line_start":5781,"line_end":5781,"column_start":9,"column_end":12}},{"value":"/ Create a sub-surface interface for the given surface, and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13642889,"byte_end":13642950,"line_start":5782,"line_end":5782,"column_start":9,"column_end":70}},{"value":"/ associate it with the given parent surface. This turns a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13642959,"byte_end":13643019,"line_start":5783,"line_end":5783,"column_start":9,"column_end":69}},{"value":"/ plain wl_surface into a sub-surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13643028,"byte_end":13643068,"line_start":5784,"line_end":5784,"column_start":9,"column_end":49}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13643077,"byte_end":13643081,"line_start":5785,"line_end":5785,"column_start":9,"column_end":13}},{"value":"/ The to-be sub-surface must not already have another role, and it","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13643090,"byte_end":13643158,"line_start":5786,"line_end":5786,"column_start":9,"column_end":77}},{"value":"/ must not have an existing wl_subsurface object. Otherwise a protocol","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13643167,"byte_end":13643239,"line_start":5787,"line_end":5787,"column_start":9,"column_end":81}},{"value":"/ error is raised.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13643248,"byte_end":13643268,"line_start":5788,"line_end":5788,"column_start":9,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":2574},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13643878,"byte_end":13643891,"line_start":5797,"line_end":5797,"column_start":9,"column_end":22},"name":"wl_subsurface","qualname":"::generated::client::wl_subsurface","value":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","parent":null,"children":[{"krate":0,"index":2575},{"krate":0,"index":2578},{"krate":0,"index":2581},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2600},{"krate":0,"index":2603},{"krate":0,"index":2606},{"krate":0,"index":2609},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2616},{"krate":0,"index":2619},{"krate":0,"index":2622},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":3644},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3651},{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654}],"decl_id":null,"docs":" sub-surface interface to a wl_surface","sig":null,"attributes":[{"value":"/ sub-surface interface to a wl_surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13643898,"byte_end":13643939,"line_start":5798,"line_end":5798,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13643944,"byte_end":13643947,"line_start":5799,"line_end":5799,"column_start":5,"column_end":8}},{"value":"/ An additional interface to a wl_surface object, which has been","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13643952,"byte_end":13644018,"line_start":5800,"line_end":5800,"column_start":5,"column_end":71}},{"value":"/ made a sub-surface. A sub-surface has one parent surface. A","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644023,"byte_end":13644086,"line_start":5801,"line_end":5801,"column_start":5,"column_end":68}},{"value":"/ sub-surface's size and position are not limited to that of the parent.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644091,"byte_end":13644165,"line_start":5802,"line_end":5802,"column_start":5,"column_end":79}},{"value":"/ Particularly, a sub-surface is not automatically clipped to its","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644170,"byte_end":13644237,"line_start":5803,"line_end":5803,"column_start":5,"column_end":72}},{"value":"/ parent's area.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644242,"byte_end":13644260,"line_start":5804,"line_end":5804,"column_start":5,"column_end":23}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644265,"byte_end":13644269,"line_start":5805,"line_end":5805,"column_start":5,"column_end":9}},{"value":"/ A sub-surface becomes mapped, when a non-NULL wl_buffer is applied","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644274,"byte_end":13644344,"line_start":5806,"line_end":5806,"column_start":5,"column_end":75}},{"value":"/ and the parent surface is mapped. The order of which one happens","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644349,"byte_end":13644417,"line_start":5807,"line_end":5807,"column_start":5,"column_end":73}},{"value":"/ first is irrelevant. A sub-surface is hidden if the parent becomes","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644422,"byte_end":13644492,"line_start":5808,"line_end":5808,"column_start":5,"column_end":75}},{"value":"/ hidden, or if a NULL wl_buffer is applied. These rules apply","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644497,"byte_end":13644561,"line_start":5809,"line_end":5809,"column_start":5,"column_end":69}},{"value":"/ recursively through the tree of surfaces.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644566,"byte_end":13644611,"line_start":5810,"line_end":5810,"column_start":5,"column_end":50}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644616,"byte_end":13644620,"line_start":5811,"line_end":5811,"column_start":5,"column_end":9}},{"value":"/ The behaviour of a wl_surface.commit request on a sub-surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644625,"byte_end":13644690,"line_start":5812,"line_end":5812,"column_start":5,"column_end":70}},{"value":"/ depends on the sub-surface's mode. The possible modes are","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644695,"byte_end":13644756,"line_start":5813,"line_end":5813,"column_start":5,"column_end":66}},{"value":"/ synchronized and desynchronized, see methods","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644761,"byte_end":13644809,"line_start":5814,"line_end":5814,"column_start":5,"column_end":53}},{"value":"/ wl_subsurface.set_sync and wl_subsurface.set_desync. Synchronized","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644814,"byte_end":13644883,"line_start":5815,"line_end":5815,"column_start":5,"column_end":74}},{"value":"/ mode caches the wl_surface state to be applied when the parent's","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644888,"byte_end":13644956,"line_start":5816,"line_end":5816,"column_start":5,"column_end":73}},{"value":"/ state gets applied, and desynchronized mode applies the pending","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13644961,"byte_end":13645028,"line_start":5817,"line_end":5817,"column_start":5,"column_end":72}},{"value":"/ wl_surface state directly. A sub-surface is initially in the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645033,"byte_end":13645097,"line_start":5818,"line_end":5818,"column_start":5,"column_end":69}},{"value":"/ synchronized mode.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645102,"byte_end":13645124,"line_start":5819,"line_end":5819,"column_start":5,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645129,"byte_end":13645133,"line_start":5820,"line_end":5820,"column_start":5,"column_end":9}},{"value":"/ Sub-surfaces have also other kind of state, which is managed by","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645138,"byte_end":13645205,"line_start":5821,"line_end":5821,"column_start":5,"column_end":72}},{"value":"/ wl_subsurface requests, as opposed to wl_surface requests. This","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645210,"byte_end":13645277,"line_start":5822,"line_end":5822,"column_start":5,"column_end":72}},{"value":"/ state includes the sub-surface position relative to the parent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645282,"byte_end":13645348,"line_start":5823,"line_end":5823,"column_start":5,"column_end":71}},{"value":"/ surface (wl_subsurface.set_position), and the stacking order of","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645353,"byte_end":13645420,"line_start":5824,"line_end":5824,"column_start":5,"column_end":72}},{"value":"/ the parent and its sub-surfaces (wl_subsurface.place_above and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645425,"byte_end":13645491,"line_start":5825,"line_end":5825,"column_start":5,"column_end":71}},{"value":"/ .place_below). This state is applied when the parent surface's","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645496,"byte_end":13645562,"line_start":5826,"line_end":5826,"column_start":5,"column_end":71}},{"value":"/ wl_surface state is applied, regardless of the sub-surface's mode.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645567,"byte_end":13645637,"line_start":5827,"line_end":5827,"column_start":5,"column_end":75}},{"value":"/ As the exception, set_sync and set_desync are effective immediately.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645642,"byte_end":13645714,"line_start":5828,"line_end":5828,"column_start":5,"column_end":77}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645719,"byte_end":13645723,"line_start":5829,"line_end":5829,"column_start":5,"column_end":9}},{"value":"/ The main surface can be thought to be always in desynchronized mode,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645728,"byte_end":13645800,"line_start":5830,"line_end":5830,"column_start":5,"column_end":77}},{"value":"/ since it does not have a parent in the sub-surfaces sense.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645805,"byte_end":13645867,"line_start":5831,"line_end":5831,"column_start":5,"column_end":67}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645872,"byte_end":13645876,"line_start":5832,"line_end":5832,"column_start":5,"column_end":9}},{"value":"/ Even if a sub-surface is in desynchronized mode, it will behave as","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645881,"byte_end":13645951,"line_start":5833,"line_end":5833,"column_start":5,"column_end":75}},{"value":"/ in synchronized mode, if its parent surface behaves as in","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13645956,"byte_end":13646017,"line_start":5834,"line_end":5834,"column_start":5,"column_end":66}},{"value":"/ synchronized mode. This rule is applied recursively throughout the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646022,"byte_end":13646092,"line_start":5835,"line_end":5835,"column_start":5,"column_end":75}},{"value":"/ tree of surfaces. This means, that one can set a sub-surface into","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646097,"byte_end":13646166,"line_start":5836,"line_end":5836,"column_start":5,"column_end":74}},{"value":"/ synchronized mode, and then assume that all its child and grand-child","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646171,"byte_end":13646244,"line_start":5837,"line_end":5837,"column_start":5,"column_end":78}},{"value":"/ sub-surfaces are synchronized, too, without explicitly setting them.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646249,"byte_end":13646321,"line_start":5838,"line_end":5838,"column_start":5,"column_end":77}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646326,"byte_end":13646330,"line_start":5839,"line_end":5839,"column_start":5,"column_end":9}},{"value":"/ If the wl_surface associated with the wl_subsurface is destroyed, the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646335,"byte_end":13646408,"line_start":5840,"line_end":5840,"column_start":5,"column_end":78}},{"value":"/ wl_subsurface object becomes inert. Note, that destroying either object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646413,"byte_end":13646488,"line_start":5841,"line_end":5841,"column_start":5,"column_end":80}},{"value":"/ takes effect immediately. If you need to synchronize the removal","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646493,"byte_end":13646561,"line_start":5842,"line_end":5842,"column_start":5,"column_end":73}},{"value":"/ of a sub-surface to the parent surface update, unmap the sub-surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646566,"byte_end":13646638,"line_start":5843,"line_end":5843,"column_start":5,"column_end":77}},{"value":"/ first by attaching a NULL wl_buffer, update parent, and then destroy","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646643,"byte_end":13646715,"line_start":5844,"line_end":5844,"column_start":5,"column_end":77}},{"value":"/ the sub-surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646720,"byte_end":13646740,"line_start":5845,"line_end":5845,"column_start":5,"column_end":25}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646745,"byte_end":13646749,"line_start":5846,"line_end":5846,"column_start":5,"column_end":9}},{"value":"/ If the parent wl_surface object is destroyed, the sub-surface is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646754,"byte_end":13646822,"line_start":5847,"line_end":5847,"column_start":5,"column_end":73}},{"value":"/ unmapped.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13646827,"byte_end":13646840,"line_start":5848,"line_end":5848,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2627},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13647402,"byte_end":13647414,"line_start":5866,"line_end":5866,"column_start":16,"column_end":28},"name":"WlSubsurface","qualname":"::generated::client::wl_subsurface::WlSubsurface","value":"WlSubsurface {  }","parent":null,"children":[{"krate":0,"index":2628},{"krate":0,"index":2629}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3645},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13650284,"byte_end":13650294,"line_start":5943,"line_end":5943,"column_start":9,"column_end":19},"name":"BadSurface","qualname":"::generated::client::wl_subsurface::Error::BadSurface","value":"Error::BadSurface","parent":{"krate":0,"index":3644},"children":[],"decl_id":null,"docs":" wl_surface is not a sibling or the parent\n","sig":null,"attributes":[{"value":"/ wl_surface is not a sibling or the parent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13650230,"byte_end":13650275,"line_start":5942,"line_end":5942,"column_start":9,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":3644},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13650214,"byte_end":13650219,"line_start":5941,"line_end":5941,"column_start":14,"column_end":19},"name":"Error","qualname":"::generated::client::wl_subsurface::Error","value":"pub enum Error { BadSurface = , }","parent":null,"children":[{"krate":0,"index":3645}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13650146,"byte_end":13650158,"line_start":5939,"line_end":5939,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13650338,"byte_end":13650346,"line_start":5946,"line_end":5946,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<Error>::from_raw","value":"pub fn from_raw(u32) -> Option<Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13650515,"byte_end":13650521,"line_start":5952,"line_end":5952,"column_start":16,"column_end":22},"name":"to_raw","qualname":"<Error>::to_raw","value":"pub fn to_raw(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13651396,"byte_end":13651403,"line_start":5972,"line_end":5972,"column_start":16,"column_end":23},"name":"destroy","qualname":"<WlSubsurface>::destroy","value":"pub fn destroy(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" remove sub-surface interface","sig":null,"attributes":[{"value":"/ remove sub-surface interface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13650880,"byte_end":13650912,"line_start":5963,"line_end":5963,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13650921,"byte_end":13650924,"line_start":5964,"line_end":5964,"column_start":9,"column_end":12}},{"value":"/ The sub-surface interface is removed from the wl_surface object","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13650933,"byte_end":13651000,"line_start":5965,"line_end":5965,"column_start":9,"column_end":76}},{"value":"/ that was turned into a sub-surface with a","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13651009,"byte_end":13651054,"line_start":5966,"line_end":5966,"column_start":9,"column_end":54}},{"value":"/ wl_subcompositor.get_subsurface request. The wl_surface's association","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13651063,"byte_end":13651136,"line_start":5967,"line_end":5967,"column_start":9,"column_end":82}},{"value":"/ to the parent is deleted, and the wl_surface loses its role as","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13651145,"byte_end":13651211,"line_start":5968,"line_end":5968,"column_start":9,"column_end":75}},{"value":"/ a sub-surface. The wl_surface is unmapped.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13651220,"byte_end":13651266,"line_start":5969,"line_end":5969,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13651275,"byte_end":13651278,"line_start":5970,"line_end":5970,"column_start":9,"column_end":12}},{"value":"/ This is a destructor, you cannot send requests to this object once this method is called.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13651287,"byte_end":13651380,"line_start":5971,"line_end":5971,"column_start":9,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653142,"byte_end":13653154,"line_start":6003,"line_end":6003,"column_start":16,"column_end":28},"name":"set_position","qualname":"<WlSubsurface>::set_position","value":"pub fn set_position(&Self, i32, i32) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" reposition the sub-surface","sig":null,"attributes":[{"value":"/ reposition the sub-surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652125,"byte_end":13652155,"line_start":5985,"line_end":5985,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652164,"byte_end":13652167,"line_start":5986,"line_end":5986,"column_start":9,"column_end":12}},{"value":"/ This schedules a sub-surface position change.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652176,"byte_end":13652225,"line_start":5987,"line_end":5987,"column_start":9,"column_end":58}},{"value":"/ The sub-surface will be moved so that its origin (top left","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652234,"byte_end":13652296,"line_start":5988,"line_end":5988,"column_start":9,"column_end":71}},{"value":"/ corner pixel) will be at the location x, y of the parent surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652305,"byte_end":13652373,"line_start":5989,"line_end":5989,"column_start":9,"column_end":77}},{"value":"/ coordinate system. The coordinates are not restricted to the parent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652382,"byte_end":13652453,"line_start":5990,"line_end":5990,"column_start":9,"column_end":80}},{"value":"/ surface area. Negative values are allowed.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652462,"byte_end":13652508,"line_start":5991,"line_end":5991,"column_start":9,"column_end":55}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652517,"byte_end":13652521,"line_start":5992,"line_end":5992,"column_start":9,"column_end":13}},{"value":"/ The scheduled coordinates will take effect whenever the state of the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652530,"byte_end":13652602,"line_start":5993,"line_end":5993,"column_start":9,"column_end":81}},{"value":"/ parent surface is applied. When this happens depends on whether the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652611,"byte_end":13652682,"line_start":5994,"line_end":5994,"column_start":9,"column_end":80}},{"value":"/ parent surface is in synchronized mode or not. See","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652691,"byte_end":13652745,"line_start":5995,"line_end":5995,"column_start":9,"column_end":63}},{"value":"/ wl_subsurface.set_sync and wl_subsurface.set_desync for details.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652754,"byte_end":13652822,"line_start":5996,"line_end":5996,"column_start":9,"column_end":77}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652831,"byte_end":13652835,"line_start":5997,"line_end":5997,"column_start":9,"column_end":13}},{"value":"/ If more than one set_position request is invoked by the client before","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652844,"byte_end":13652917,"line_start":5998,"line_end":5998,"column_start":9,"column_end":82}},{"value":"/ the commit of the parent surface, the position of a new request always","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13652926,"byte_end":13653000,"line_start":5999,"line_end":5999,"column_start":9,"column_end":83}},{"value":"/ replaces the scheduled position from any previous request.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653009,"byte_end":13653071,"line_start":6000,"line_end":6000,"column_start":9,"column_end":71}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653080,"byte_end":13653084,"line_start":6001,"line_end":6001,"column_start":9,"column_end":13}},{"value":"/ The initial position is 0, 0.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653093,"byte_end":13653126,"line_start":6002,"line_end":6002,"column_start":9,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13654463,"byte_end":13654474,"line_start":6025,"line_end":6025,"column_start":16,"column_end":27},"name":"place_above","qualname":"<WlSubsurface>::place_above","value":"pub fn place_above(&Self, &super::wl_surface::WlSurface) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" restack the sub-surface","sig":null,"attributes":[{"value":"/ restack the sub-surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653462,"byte_end":13653489,"line_start":6008,"line_end":6008,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653498,"byte_end":13653501,"line_start":6009,"line_end":6009,"column_start":9,"column_end":12}},{"value":"/ This sub-surface is taken from the stack, and put back just","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653510,"byte_end":13653573,"line_start":6010,"line_end":6010,"column_start":9,"column_end":72}},{"value":"/ above the reference surface, changing the z-order of the sub-surfaces.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653582,"byte_end":13653656,"line_start":6011,"line_end":6011,"column_start":9,"column_end":83}},{"value":"/ The reference surface must be one of the sibling surfaces, or the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653665,"byte_end":13653734,"line_start":6012,"line_end":6012,"column_start":9,"column_end":78}},{"value":"/ parent surface. Using any other surface, including this sub-surface,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653743,"byte_end":13653815,"line_start":6013,"line_end":6013,"column_start":9,"column_end":81}},{"value":"/ will cause a protocol error.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653824,"byte_end":13653856,"line_start":6014,"line_end":6014,"column_start":9,"column_end":41}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653865,"byte_end":13653869,"line_start":6015,"line_end":6015,"column_start":9,"column_end":13}},{"value":"/ The z-order is double-buffered. Requests are handled in order and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653878,"byte_end":13653947,"line_start":6016,"line_end":6016,"column_start":9,"column_end":78}},{"value":"/ applied immediately to a pending state. The final pending state is","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13653956,"byte_end":13654026,"line_start":6017,"line_end":6017,"column_start":9,"column_end":79}},{"value":"/ copied to the active state the next time the state of the parent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13654035,"byte_end":13654103,"line_start":6018,"line_end":6018,"column_start":9,"column_end":77}},{"value":"/ surface is applied. When this happens depends on whether the parent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13654112,"byte_end":13654183,"line_start":6019,"line_end":6019,"column_start":9,"column_end":80}},{"value":"/ surface is in synchronized mode or not. See wl_subsurface.set_sync and","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13654192,"byte_end":13654266,"line_start":6020,"line_end":6020,"column_start":9,"column_end":83}},{"value":"/ wl_subsurface.set_desync for details.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13654275,"byte_end":13654316,"line_start":6021,"line_end":6021,"column_start":9,"column_end":50}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13654325,"byte_end":13654329,"line_start":6022,"line_end":6022,"column_start":9,"column_end":13}},{"value":"/ A new sub-surface is initially added as the top-most in the stack","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13654338,"byte_end":13654407,"line_start":6023,"line_end":6023,"column_start":9,"column_end":78}},{"value":"/ of its siblings and parent.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13654416,"byte_end":13654447,"line_start":6024,"line_end":6024,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13654984,"byte_end":13654995,"line_start":6034,"line_end":6034,"column_start":16,"column_end":27},"name":"place_below","qualname":"<WlSubsurface>::place_below","value":"pub fn place_below(&Self, &super::wl_surface::WlSurface) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" restack the sub-surface","sig":null,"attributes":[{"value":"/ restack the sub-surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13654814,"byte_end":13654841,"line_start":6030,"line_end":6030,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13654850,"byte_end":13654853,"line_start":6031,"line_end":6031,"column_start":9,"column_end":12}},{"value":"/ The sub-surface is placed just below the reference surface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13654862,"byte_end":13654925,"line_start":6032,"line_end":6032,"column_start":9,"column_end":72}},{"value":"/ See wl_subsurface.place_above.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13654934,"byte_end":13654968,"line_start":6033,"line_end":6033,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13656221,"byte_end":13656229,"line_start":6054,"line_end":6054,"column_start":16,"column_end":24},"name":"set_sync","qualname":"<WlSubsurface>::set_sync","value":"pub fn set_sync(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" set sub-surface to synchronized mode","sig":null,"attributes":[{"value":"/ set sub-surface to synchronized mode","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13655335,"byte_end":13655375,"line_start":6039,"line_end":6039,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13655384,"byte_end":13655387,"line_start":6040,"line_end":6040,"column_start":9,"column_end":12}},{"value":"/ Change the commit behaviour of the sub-surface to synchronized","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13655396,"byte_end":13655462,"line_start":6041,"line_end":6041,"column_start":9,"column_end":75}},{"value":"/ mode, also described as the parent dependent mode.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13655471,"byte_end":13655525,"line_start":6042,"line_end":6042,"column_start":9,"column_end":63}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13655534,"byte_end":13655538,"line_start":6043,"line_end":6043,"column_start":9,"column_end":13}},{"value":"/ In synchronized mode, wl_surface.commit on a sub-surface will","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13655547,"byte_end":13655612,"line_start":6044,"line_end":6044,"column_start":9,"column_end":74}},{"value":"/ accumulate the committed state in a cache, but the state will","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13655621,"byte_end":13655686,"line_start":6045,"line_end":6045,"column_start":9,"column_end":74}},{"value":"/ not be applied and hence will not change the compositor output.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13655695,"byte_end":13655762,"line_start":6046,"line_end":6046,"column_start":9,"column_end":76}},{"value":"/ The cached state is applied to the sub-surface immediately after","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13655771,"byte_end":13655839,"line_start":6047,"line_end":6047,"column_start":9,"column_end":77}},{"value":"/ the parent surface's state is applied. This ensures atomic","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13655848,"byte_end":13655910,"line_start":6048,"line_end":6048,"column_start":9,"column_end":71}},{"value":"/ updates of the parent and all its synchronized sub-surfaces.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13655919,"byte_end":13655983,"line_start":6049,"line_end":6049,"column_start":9,"column_end":73}},{"value":"/ Applying the cached state will invalidate the cache, so further","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13655992,"byte_end":13656059,"line_start":6050,"line_end":6050,"column_start":9,"column_end":76}},{"value":"/ parent surface commits do not (re-)apply old state.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13656068,"byte_end":13656123,"line_start":6051,"line_end":6051,"column_start":9,"column_end":64}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13656132,"byte_end":13656136,"line_start":6052,"line_end":6052,"column_start":9,"column_end":13}},{"value":"/ See wl_subsurface for the recursive effect of this mode.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13656145,"byte_end":13656205,"line_start":6053,"line_end":6053,"column_start":9,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13657685,"byte_end":13657695,"line_start":6080,"line_end":6080,"column_start":16,"column_end":26},"name":"set_desync","qualname":"<WlSubsurface>::set_desync","value":"pub fn set_desync(&Self) -> RequestResult<()>","parent":null,"children":[],"decl_id":null,"docs":" set sub-surface to desynchronized mode","sig":null,"attributes":[{"value":"/ set sub-surface to desynchronized mode","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13656511,"byte_end":13656553,"line_start":6059,"line_end":6059,"column_start":9,"column_end":51}},{"value":"/","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13656562,"byte_end":13656565,"line_start":6060,"line_end":6060,"column_start":9,"column_end":12}},{"value":"/ Change the commit behaviour of the sub-surface to desynchronized","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13656574,"byte_end":13656642,"line_start":6061,"line_end":6061,"column_start":9,"column_end":77}},{"value":"/ mode, also described as independent or freely running mode.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13656651,"byte_end":13656714,"line_start":6062,"line_end":6062,"column_start":9,"column_end":72}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13656723,"byte_end":13656727,"line_start":6063,"line_end":6063,"column_start":9,"column_end":13}},{"value":"/ In desynchronized mode, wl_surface.commit on a sub-surface will","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13656736,"byte_end":13656803,"line_start":6064,"line_end":6064,"column_start":9,"column_end":76}},{"value":"/ apply the pending state directly, without caching, as happens","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13656812,"byte_end":13656877,"line_start":6065,"line_end":6065,"column_start":9,"column_end":74}},{"value":"/ normally with a wl_surface. Calling wl_surface.commit on the","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13656886,"byte_end":13656950,"line_start":6066,"line_end":6066,"column_start":9,"column_end":73}},{"value":"/ parent surface has no effect on the sub-surface's wl_surface","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13656959,"byte_end":13657023,"line_start":6067,"line_end":6067,"column_start":9,"column_end":73}},{"value":"/ state. This mode allows a sub-surface to be updated on its own.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13657032,"byte_end":13657099,"line_start":6068,"line_end":6068,"column_start":9,"column_end":76}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13657108,"byte_end":13657112,"line_start":6069,"line_end":6069,"column_start":9,"column_end":13}},{"value":"/ If cached state exists when wl_surface.commit is called in","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13657121,"byte_end":13657183,"line_start":6070,"line_end":6070,"column_start":9,"column_end":71}},{"value":"/ desynchronized mode, the pending state is added to the cached","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13657192,"byte_end":13657257,"line_start":6071,"line_end":6071,"column_start":9,"column_end":74}},{"value":"/ state, and applied as a whole. This invalidates the cache.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13657266,"byte_end":13657328,"line_start":6072,"line_end":6072,"column_start":9,"column_end":71}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13657337,"byte_end":13657341,"line_start":6073,"line_end":6073,"column_start":9,"column_end":13}},{"value":"/ Note: even if a sub-surface is set to desynchronized, a parent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13657350,"byte_end":13657416,"line_start":6074,"line_end":6074,"column_start":9,"column_end":75}},{"value":"/ sub-surface may override it to behave as synchronized. For details,","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13657425,"byte_end":13657496,"line_start":6075,"line_end":6075,"column_start":9,"column_end":80}},{"value":"/ see wl_subsurface.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13657505,"byte_end":13657527,"line_start":6076,"line_end":6076,"column_start":9,"column_end":31}},{"value":"/ ","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13657536,"byte_end":13657540,"line_start":6077,"line_end":6077,"column_start":9,"column_end":13}},{"value":"/ If a surface's parent surface behaves as desynchronized, then","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13657549,"byte_end":13657614,"line_start":6078,"line_end":6078,"column_start":9,"column_end":74}},{"value":"/ the cached state is applied on set_desync.","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13657623,"byte_end":13657669,"line_start":6079,"line_end":6079,"column_start":9,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":396},"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":9179,"byte_end":9182,"line_start":259,"line_end":259,"column_start":9,"column_end":12},"name":"sys","qualname":"::sys","value":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"decl_id":null,"docs":" Reexports of types and objects from wayland-sys\n","sig":null,"attributes":[{"value":"/ Reexports of types and objects from wayland-sys","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":9189,"byte_end":9240,"line_start":260,"line_end":260,"column_start":5,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":12872,"byte_end":12881,"line_start":91,"line_end":91,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17875,"byte_end":17891,"line_start":41,"line_end":41,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21548,"byte_end":21558,"line_start":130,"line_end":130,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26224,"byte_end":26234,"line_start":262,"line_end":262,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26365,"byte_end":26375,"line_start":269,"line_end":269,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26638,"byte_end":26653,"line_start":282,"line_end":282,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":27466,"byte_end":27481,"line_start":308,"line_end":308,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":32063,"byte_end":32073,"line_start":60,"line_end":60,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":34735,"byte_end":34745,"line_start":136,"line_end":136,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43376,"byte_end":43388,"line_start":24,"line_end":24,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43413,"byte_end":43425,"line_start":25,"line_end":25,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43893,"byte_end":43905,"line_start":38,"line_end":38,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45892,"byte_end":45904,"line_start":103,"line_end":103,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47331,"byte_end":47342,"line_start":41,"line_end":41,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":48701,"byte_end":48712,"line_start":89,"line_end":89,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":49466,"byte_end":49477,"line_start":116,"line_end":116,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":49817,"byte_end":49823,"line_start":130,"line_end":130,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":49841,"byte_end":49847,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":53526,"byte_end":53543,"line_start":242,"line_end":242,"column_start":26,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":53571,"byte_end":53588,"line_start":244,"line_end":244,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7418,"byte_end":7431,"line_start":207,"line_end":207,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13390243,"byte_end":13390252,"line_start":59,"line_end":59,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13390281,"byte_end":13390290,"line_start":60,"line_end":60,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13390320,"byte_end":13390329,"line_start":61,"line_end":61,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393251,"byte_end":13393256,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393700,"byte_end":13393709,"line_start":156,"line_end":156,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13397167,"byte_end":13397177,"line_start":232,"line_end":232,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13397206,"byte_end":13397216,"line_start":233,"line_end":233,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13397246,"byte_end":13397256,"line_start":234,"line_end":234,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13399802,"byte_end":13399812,"line_start":300,"line_end":300,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402577,"byte_end":13402591,"line_start":360,"line_end":360,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402622,"byte_end":13402636,"line_start":361,"line_end":361,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402753,"byte_end":13402767,"line_start":367,"line_end":367,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13403054,"byte_end":13403064,"line_start":377,"line_end":377,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13404769,"byte_end":13404779,"line_start":419,"line_end":419,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13404808,"byte_end":13404818,"line_start":420,"line_end":420,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13404848,"byte_end":13404858,"line_start":421,"line_end":421,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13407404,"byte_end":13407414,"line_start":487,"line_end":487,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409052,"byte_end":13409066,"line_start":528,"line_end":528,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409097,"byte_end":13409111,"line_start":529,"line_end":529,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409228,"byte_end":13409242,"line_start":535,"line_end":535,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409411,"byte_end":13409421,"line_start":543,"line_end":543,"column_start":10,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13410367,"byte_end":13410379,"line_start":574,"line_end":574,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13410408,"byte_end":13410420,"line_start":575,"line_end":575,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13410450,"byte_end":13410462,"line_start":576,"line_end":576,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13413083,"byte_end":13413095,"line_start":644,"line_end":644,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13415217,"byte_end":13415226,"line_start":695,"line_end":695,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13415255,"byte_end":13415264,"line_start":696,"line_end":696,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13415294,"byte_end":13415303,"line_start":697,"line_end":697,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13417924,"byte_end":13417933,"line_start":766,"line_end":766,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13422035,"byte_end":13422040,"line_start":855,"line_end":855,"column_start":26,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13422069,"byte_end":13422074,"line_start":856,"line_end":856,"column_start":26,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13422104,"byte_end":13422109,"line_start":857,"line_end":857,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13424605,"byte_end":13424610,"line_start":923,"line_end":923,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426051,"byte_end":13426056,"line_start":962,"line_end":962,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432734,"byte_end":13432740,"line_start":1106,"line_end":1106,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436480,"byte_end":13436494,"line_start":1185,"line_end":1185,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436525,"byte_end":13436539,"line_start":1186,"line_end":1186,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436656,"byte_end":13436670,"line_start":1192,"line_end":1192,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436882,"byte_end":13436887,"line_start":1201,"line_end":1201,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13438697,"byte_end":13438705,"line_start":1246,"line_end":1246,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13438734,"byte_end":13438742,"line_start":1247,"line_end":1247,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13438772,"byte_end":13438780,"line_start":1248,"line_end":1248,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13441306,"byte_end":13441314,"line_start":1314,"line_end":1314,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443249,"byte_end":13443263,"line_start":1359,"line_end":1359,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443294,"byte_end":13443308,"line_start":1360,"line_end":1360,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443425,"byte_end":13443439,"line_start":1366,"line_end":1366,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443652,"byte_end":13443660,"line_start":1375,"line_end":1375,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13445917,"byte_end":13445928,"line_start":1430,"line_end":1430,"column_start":26,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13445957,"byte_end":13445968,"line_start":1431,"line_end":1431,"column_start":26,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13445998,"byte_end":13446009,"line_start":1432,"line_end":1432,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13448567,"byte_end":13448578,"line_start":1498,"line_end":1498,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450384,"byte_end":13450389,"line_start":1544,"line_end":1544,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1294},{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13454334,"byte_end":13454348,"line_start":1620,"line_end":1620,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13454379,"byte_end":13454393,"line_start":1621,"line_end":1621,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13454510,"byte_end":13454524,"line_start":1627,"line_end":1627,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455049,"byte_end":13455060,"line_start":1642,"line_end":1642,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13463387,"byte_end":13463399,"line_start":1797,"line_end":1797,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13463428,"byte_end":13463440,"line_start":1798,"line_end":1798,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13463470,"byte_end":13463482,"line_start":1799,"line_end":1799,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13466050,"byte_end":13466062,"line_start":1865,"line_end":1865,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468268,"byte_end":13468273,"line_start":1917,"line_end":1917,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13474276,"byte_end":13474290,"line_start":2035,"line_end":2035,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13474321,"byte_end":13474335,"line_start":2036,"line_end":2036,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13474452,"byte_end":13474466,"line_start":2042,"line_end":2042,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13475123,"byte_end":13475135,"line_start":2058,"line_end":2058,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13479042,"byte_end":13479054,"line_start":2142,"line_end":2142,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13479083,"byte_end":13479095,"line_start":2143,"line_end":2143,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13479125,"byte_end":13479137,"line_start":2144,"line_end":2144,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13481705,"byte_end":13481717,"line_start":2210,"line_end":2210,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1498},{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484393,"byte_end":13484398,"line_start":2266,"line_end":2266,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13489128,"byte_end":13489142,"line_start":2352,"line_end":2352,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13489173,"byte_end":13489187,"line_start":2353,"line_end":2353,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13489304,"byte_end":13489318,"line_start":2359,"line_end":2359,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13489950,"byte_end":13489962,"line_start":2375,"line_end":2375,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13495289,"byte_end":13495308,"line_start":2478,"line_end":2478,"column_start":26,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13495337,"byte_end":13495356,"line_start":2479,"line_end":2479,"column_start":26,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13495386,"byte_end":13495405,"line_start":2480,"line_end":2480,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13499617,"byte_end":13499626,"line_start":2583,"line_end":2583,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1598},{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13499953,"byte_end":13499972,"line_start":2593,"line_end":2593,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13501924,"byte_end":13501931,"line_start":2642,"line_end":2642,"column_start":26,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13501960,"byte_end":13501967,"line_start":2643,"line_end":2643,"column_start":26,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13501997,"byte_end":13502004,"line_start":2644,"line_end":2644,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13504628,"byte_end":13504633,"line_start":2716,"line_end":2716,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1677},{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13504942,"byte_end":13504949,"line_start":2728,"line_end":2728,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13507088,"byte_end":13507102,"line_start":2779,"line_end":2779,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13507131,"byte_end":13507145,"line_start":2780,"line_end":2780,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13507175,"byte_end":13507189,"line_start":2781,"line_end":2781,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13509777,"byte_end":13509791,"line_start":2847,"line_end":2847,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1755},{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512166,"byte_end":13512172,"line_start":2910,"line_end":2910,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1758},{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512707,"byte_end":13512716,"line_start":2928,"line_end":2928,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513710,"byte_end":13513726,"line_start":2953,"line_end":2953,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13516233,"byte_end":13516247,"line_start":3007,"line_end":3007,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13516278,"byte_end":13516292,"line_start":3008,"line_end":3008,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13516409,"byte_end":13516423,"line_start":3014,"line_end":3014,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517205,"byte_end":13517219,"line_start":3034,"line_end":3034,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13529083,"byte_end":13529092,"line_start":3258,"line_end":3258,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13529121,"byte_end":13529130,"line_start":3259,"line_end":3259,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13529160,"byte_end":13529169,"line_start":3260,"line_end":3260,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13531705,"byte_end":13531714,"line_start":3326,"line_end":3326,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533264,"byte_end":13533269,"line_start":3367,"line_end":3367,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1878},{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534651,"byte_end":13534665,"line_start":3400,"line_end":3400,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534696,"byte_end":13534710,"line_start":3401,"line_end":3401,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534827,"byte_end":13534841,"line_start":3407,"line_end":3407,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13535505,"byte_end":13535514,"line_start":3426,"line_end":3426,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13555576,"byte_end":13555582,"line_start":3785,"line_end":3785,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13555611,"byte_end":13555617,"line_start":3786,"line_end":3786,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13555647,"byte_end":13555653,"line_start":3787,"line_end":3787,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13558159,"byte_end":13558165,"line_start":3853,"line_end":3853,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1986},{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13559927,"byte_end":13559937,"line_start":3897,"line_end":3897,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562513,"byte_end":13562527,"line_start":3947,"line_end":3947,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562558,"byte_end":13562572,"line_start":3948,"line_end":3948,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562689,"byte_end":13562703,"line_start":3954,"line_end":3954,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2002}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13563102,"byte_end":13563108,"line_start":3967,"line_end":3967,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13568034,"byte_end":13568043,"line_start":4069,"line_end":4069,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13568072,"byte_end":13568081,"line_start":4070,"line_end":4070,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13568111,"byte_end":13568120,"line_start":4071,"line_end":4071,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13570656,"byte_end":13570665,"line_start":4137,"line_end":4137,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2085},{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13574699,"byte_end":13574704,"line_start":4213,"line_end":4213,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575300,"byte_end":13575311,"line_start":4236,"line_end":4236,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2091},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575913,"byte_end":13575917,"line_start":4259,"line_end":4259,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577265,"byte_end":13577275,"line_start":4295,"line_end":4295,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2097},{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13588018,"byte_end":13588032,"line_start":4498,"line_end":4498,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13588063,"byte_end":13588077,"line_start":4499,"line_end":4499,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13588194,"byte_end":13588208,"line_start":4505,"line_end":4505,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2117}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13588986,"byte_end":13588995,"line_start":4523,"line_end":4523,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2121},{"krate":0,"index":2122}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13593408,"byte_end":13593418,"line_start":4615,"line_end":4615,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13593447,"byte_end":13593457,"line_start":4616,"line_end":4616,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13593487,"byte_end":13593497,"line_start":4617,"line_end":4617,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13596043,"byte_end":13596053,"line_start":4683,"line_end":4683,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2196},{"krate":0,"index":2197}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13599735,"byte_end":13599747,"line_start":4754,"line_end":4754,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2199},{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600375,"byte_end":13600383,"line_start":4777,"line_end":4777,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2202},{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604062,"byte_end":13604076,"line_start":4850,"line_end":4850,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604107,"byte_end":13604121,"line_start":4851,"line_end":4851,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604238,"byte_end":13604252,"line_start":4857,"line_end":4857,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604786,"byte_end":13604796,"line_start":4871,"line_end":4871,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2222}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13606969,"byte_end":13606976,"line_start":4926,"line_end":4926,"column_start":26,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13607005,"byte_end":13607012,"line_start":4927,"line_end":4927,"column_start":26,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13607042,"byte_end":13607049,"line_start":4928,"line_end":4928,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13609565,"byte_end":13609572,"line_start":4994,"line_end":4994,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2296},{"krate":0,"index":2297}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614332,"byte_end":13614346,"line_start":5087,"line_end":5087,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614377,"byte_end":13614391,"line_start":5088,"line_end":5088,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614508,"byte_end":13614522,"line_start":5094,"line_end":5094,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614970,"byte_end":13614977,"line_start":5107,"line_end":5107,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13617138,"byte_end":13617146,"line_start":5160,"line_end":5160,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13617175,"byte_end":13617183,"line_start":5161,"line_end":5161,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13617213,"byte_end":13617221,"line_start":5162,"line_end":5162,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13619747,"byte_end":13619755,"line_start":5228,"line_end":5228,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2389},{"krate":0,"index":2390}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622837,"byte_end":13622845,"line_start":5295,"line_end":5295,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2392},{"krate":0,"index":2393}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624561,"byte_end":13624570,"line_start":5344,"line_end":5344,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2395},{"krate":0,"index":2396}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13625575,"byte_end":13625579,"line_start":5374,"line_end":5374,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2399}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629526,"byte_end":13629540,"line_start":5448,"line_end":5448,"column_start":23,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629571,"byte_end":13629585,"line_start":5449,"line_end":5449,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629702,"byte_end":13629716,"line_start":5455,"line_end":5455,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2413}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13630110,"byte_end":13630118,"line_start":5467,"line_end":5467,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13632127,"byte_end":13632135,"line_start":5520,"line_end":5520,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13632164,"byte_end":13632172,"line_start":5521,"line_end":5521,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13632202,"byte_end":13632210,"line_start":5522,"line_end":5522,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13634805,"byte_end":13634813,"line_start":5591,"line_end":5591,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13638512,"byte_end":13638527,"line_start":5672,"line_end":5672,"column_start":26,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13638556,"byte_end":13638571,"line_start":5673,"line_end":5673,"column_start":26,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13638601,"byte_end":13638616,"line_start":5674,"line_end":5674,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641325,"byte_end":13641330,"line_start":5746,"line_end":5746,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2567},{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641695,"byte_end":13641710,"line_start":5759,"line_end":5759,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2572},{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13647532,"byte_end":13647544,"line_start":5871,"line_end":5871,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13647573,"byte_end":13647585,"line_start":5872,"line_end":5872,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13647615,"byte_end":13647627,"line_start":5873,"line_end":5873,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13650315,"byte_end":13650320,"line_start":5945,"line_end":5945,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2646},{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13650857,"byte_end":13650869,"line_start":5962,"line_end":5962,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3097,"byte_end":3100,"line_start":96,"line_end":96,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":217}},{"kind":"Mod","span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":3138,"byte_end":3144,"line_start":99,"line_end":99,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":244}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/display.rs","byte_start":12872,"byte_end":12881,"line_start":91,"line_end":91,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":17875,"byte_end":17891,"line_start":41,"line_end":41,"column_start":6,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":21548,"byte_end":21558,"line_start":130,"line_end":130,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26224,"byte_end":26234,"line_start":262,"line_end":262,"column_start":16,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26365,"byte_end":26375,"line_start":269,"line_end":269,"column_start":19,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":139},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":26638,"byte_end":26653,"line_start":282,"line_end":282,"column_start":6,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/event_queue.rs","byte_start":27466,"byte_end":27481,"line_start":308,"line_end":308,"column_start":15,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":152},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":29683,"byte_end":29688,"line_start":5,"line_end":5,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":179}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":32063,"byte_end":32073,"line_start":60,"line_end":60,"column_start":36,"column_end":46},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/env.rs","byte_start":34735,"byte_end":34745,"line_start":136,"line_end":136,"column_start":48,"column_end":58},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":182},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43376,"byte_end":43388,"line_start":24,"line_end":24,"column_start":22,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":234},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43413,"byte_end":43425,"line_start":25,"line_end":25,"column_start":22,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":234},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":43893,"byte_end":43905,"line_start":38,"line_end":38,"column_start":6,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/egl.rs","byte_start":45892,"byte_end":45904,"line_start":103,"line_end":103,"column_start":15,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":234},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":47331,"byte_end":47342,"line_start":41,"line_end":41,"column_start":22,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":48701,"byte_end":48712,"line_start":89,"line_end":89,"column_start":6,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":49466,"byte_end":49477,"line_start":116,"line_end":116,"column_start":15,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":49817,"byte_end":49823,"line_start":130,"line_end":130,"column_start":26,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":49841,"byte_end":49847,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":53526,"byte_end":53543,"line_start":242,"line_end":242,"column_start":26,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/cursor.rs","byte_start":53571,"byte_end":53588,"line_start":244,"line_end":244,"column_start":20,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":6902,"byte_end":6907,"line_start":191,"line_end":191,"column_start":46,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":353},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-client-0.12.5/src/lib.rs","byte_start":7418,"byte_end":7431,"line_start":207,"line_end":207,"column_start":9,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13390243,"byte_end":13390252,"line_start":59,"line_end":59,"column_start":26,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13390281,"byte_end":13390290,"line_start":60,"line_end":60,"column_start":26,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":676},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13390320,"byte_end":13390329,"line_start":61,"line_end":61,"column_start":27,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":676},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393251,"byte_end":13393256,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13393700,"byte_end":13393709,"line_start":156,"line_end":156,"column_start":10,"column_end":19},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13397167,"byte_end":13397177,"line_start":232,"line_end":232,"column_start":26,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":755},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13397206,"byte_end":13397216,"line_start":233,"line_end":233,"column_start":26,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":755},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13397246,"byte_end":13397256,"line_start":234,"line_end":234,"column_start":27,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":755},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13399802,"byte_end":13399812,"line_start":300,"line_end":300,"column_start":52,"column_end":62},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":755},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402577,"byte_end":13402591,"line_start":360,"line_end":360,"column_start":23,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402622,"byte_end":13402636,"line_start":361,"line_end":361,"column_start":24,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13402753,"byte_end":13402767,"line_start":367,"line_end":367,"column_start":28,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13403054,"byte_end":13403064,"line_start":377,"line_end":377,"column_start":10,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13404769,"byte_end":13404779,"line_start":419,"line_end":419,"column_start":26,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13404808,"byte_end":13404818,"line_start":420,"line_end":420,"column_start":26,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13404848,"byte_end":13404858,"line_start":421,"line_end":421,"column_start":27,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":846},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13407404,"byte_end":13407414,"line_start":487,"line_end":487,"column_start":52,"column_end":62},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":846},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409052,"byte_end":13409066,"line_start":528,"line_end":528,"column_start":23,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409097,"byte_end":13409111,"line_start":529,"line_end":529,"column_start":24,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409228,"byte_end":13409242,"line_start":535,"line_end":535,"column_start":28,"column_end":42},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13409411,"byte_end":13409421,"line_start":543,"line_end":543,"column_start":10,"column_end":20},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13410367,"byte_end":13410379,"line_start":574,"line_end":574,"column_start":26,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":933},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13410408,"byte_end":13410420,"line_start":575,"line_end":575,"column_start":26,"column_end":38},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":933},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13410450,"byte_end":13410462,"line_start":576,"line_end":576,"column_start":27,"column_end":39},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":933},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13413083,"byte_end":13413095,"line_start":644,"line_end":644,"column_start":10,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13415217,"byte_end":13415226,"line_start":695,"line_end":695,"column_start":26,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13415255,"byte_end":13415264,"line_start":696,"line_end":696,"column_start":26,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13415294,"byte_end":13415303,"line_start":697,"line_end":697,"column_start":27,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1009},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13417924,"byte_end":13417933,"line_start":766,"line_end":766,"column_start":10,"column_end":19},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13422035,"byte_end":13422040,"line_start":855,"line_end":855,"column_start":26,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13422069,"byte_end":13422074,"line_start":856,"line_end":856,"column_start":26,"column_end":31},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13422104,"byte_end":13422109,"line_start":857,"line_end":857,"column_start":27,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1087},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13424605,"byte_end":13424610,"line_start":923,"line_end":923,"column_start":52,"column_end":57},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1087},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13426051,"byte_end":13426056,"line_start":962,"line_end":962,"column_start":10,"column_end":15},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13432734,"byte_end":13432740,"line_start":1106,"line_end":1106,"column_start":10,"column_end":16},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436480,"byte_end":13436494,"line_start":1185,"line_end":1185,"column_start":23,"column_end":37},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1115},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436525,"byte_end":13436539,"line_start":1186,"line_end":1186,"column_start":24,"column_end":38},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1115},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436656,"byte_end":13436670,"line_start":1192,"line_end":1192,"column_start":28,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1115},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13436882,"byte_end":13436887,"line_start":1201,"line_end":1201,"column_start":10,"column_end":15},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13438697,"byte_end":13438705,"line_start":1246,"line_end":1246,"column_start":26,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1182},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13438734,"byte_end":13438742,"line_start":1247,"line_end":1247,"column_start":26,"column_end":34},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1182},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13438772,"byte_end":13438780,"line_start":1248,"line_end":1248,"column_start":27,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1182},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13441306,"byte_end":13441314,"line_start":1314,"line_end":1314,"column_start":52,"column_end":60},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1182},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443249,"byte_end":13443263,"line_start":1359,"line_end":1359,"column_start":23,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1204},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443294,"byte_end":13443308,"line_start":1360,"line_end":1360,"column_start":24,"column_end":38},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1204},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443425,"byte_end":13443439,"line_start":1366,"line_end":1366,"column_start":28,"column_end":42},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1204},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13443652,"byte_end":13443660,"line_start":1375,"line_end":1375,"column_start":10,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13445917,"byte_end":13445928,"line_start":1430,"line_end":1430,"column_start":26,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1271},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13445957,"byte_end":13445968,"line_start":1431,"line_end":1431,"column_start":26,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1271},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13445998,"byte_end":13446009,"line_start":1432,"line_end":1432,"column_start":27,"column_end":38},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1271},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13448567,"byte_end":13448578,"line_start":1498,"line_end":1498,"column_start":52,"column_end":63},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1271},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13450384,"byte_end":13450389,"line_start":1544,"line_end":1544,"column_start":10,"column_end":15},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13454334,"byte_end":13454348,"line_start":1620,"line_end":1620,"column_start":23,"column_end":37},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1296},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13454379,"byte_end":13454393,"line_start":1621,"line_end":1621,"column_start":24,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1296},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13454510,"byte_end":13454524,"line_start":1627,"line_end":1627,"column_start":28,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1296},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13455049,"byte_end":13455060,"line_start":1642,"line_end":1642,"column_start":10,"column_end":21},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13463387,"byte_end":13463399,"line_start":1797,"line_end":1797,"column_start":26,"column_end":38},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13463428,"byte_end":13463440,"line_start":1798,"line_end":1798,"column_start":26,"column_end":38},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1376},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13463470,"byte_end":13463482,"line_start":1799,"line_end":1799,"column_start":27,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1376},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13466050,"byte_end":13466062,"line_start":1865,"line_end":1865,"column_start":52,"column_end":64},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1376},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13468268,"byte_end":13468273,"line_start":1917,"line_end":1917,"column_start":10,"column_end":15},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13474276,"byte_end":13474290,"line_start":2035,"line_end":2035,"column_start":23,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13474321,"byte_end":13474335,"line_start":2036,"line_end":2036,"column_start":24,"column_end":38},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13474452,"byte_end":13474466,"line_start":2042,"line_end":2042,"column_start":28,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13475123,"byte_end":13475135,"line_start":2058,"line_end":2058,"column_start":10,"column_end":22},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13479042,"byte_end":13479054,"line_start":2142,"line_end":2142,"column_start":26,"column_end":38},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1478},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13479083,"byte_end":13479095,"line_start":2143,"line_end":2143,"column_start":26,"column_end":38},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1478},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13479125,"byte_end":13479137,"line_start":2144,"line_end":2144,"column_start":27,"column_end":39},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1478},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13481705,"byte_end":13481717,"line_start":2210,"line_end":2210,"column_start":52,"column_end":64},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1478},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13484393,"byte_end":13484398,"line_start":2266,"line_end":2266,"column_start":10,"column_end":15},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13489128,"byte_end":13489142,"line_start":2352,"line_end":2352,"column_start":23,"column_end":37},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1503},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13489173,"byte_end":13489187,"line_start":2353,"line_end":2353,"column_start":24,"column_end":38},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1503},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13489304,"byte_end":13489318,"line_start":2359,"line_end":2359,"column_start":28,"column_end":42},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1503},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13489950,"byte_end":13489962,"line_start":2375,"line_end":2375,"column_start":10,"column_end":22},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13495289,"byte_end":13495308,"line_start":2478,"line_end":2478,"column_start":26,"column_end":45},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1579},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13495337,"byte_end":13495356,"line_start":2479,"line_end":2479,"column_start":26,"column_end":45},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1579},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13495386,"byte_end":13495405,"line_start":2480,"line_end":2480,"column_start":27,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1579},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13499617,"byte_end":13499626,"line_start":2583,"line_end":2583,"column_start":10,"column_end":19},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13499953,"byte_end":13499972,"line_start":2593,"line_end":2593,"column_start":10,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13501924,"byte_end":13501931,"line_start":2642,"line_end":2642,"column_start":26,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1658},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13501960,"byte_end":13501967,"line_start":2643,"line_end":2643,"column_start":26,"column_end":33},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1658},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13501997,"byte_end":13502004,"line_start":2644,"line_end":2644,"column_start":27,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1658},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13504628,"byte_end":13504633,"line_start":2716,"line_end":2716,"column_start":10,"column_end":15},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13504942,"byte_end":13504949,"line_start":2728,"line_end":2728,"column_start":10,"column_end":17},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13507088,"byte_end":13507102,"line_start":2779,"line_end":2779,"column_start":26,"column_end":40},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1735},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13507131,"byte_end":13507145,"line_start":2780,"line_end":2780,"column_start":26,"column_end":40},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1735},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13507175,"byte_end":13507189,"line_start":2781,"line_end":2781,"column_start":27,"column_end":41},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1735},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13509777,"byte_end":13509791,"line_start":2847,"line_end":2847,"column_start":52,"column_end":66},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1735},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512166,"byte_end":13512172,"line_start":2910,"line_end":2910,"column_start":10,"column_end":16},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13512707,"byte_end":13512716,"line_start":2928,"line_end":2928,"column_start":10,"column_end":19},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13513710,"byte_end":13513726,"line_start":2953,"line_end":2953,"column_start":10,"column_end":26},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13516233,"byte_end":13516247,"line_start":3007,"line_end":3007,"column_start":23,"column_end":37},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1766},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13516278,"byte_end":13516292,"line_start":3008,"line_end":3008,"column_start":24,"column_end":38},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1766},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13516409,"byte_end":13516423,"line_start":3014,"line_end":3014,"column_start":28,"column_end":42},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1766},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13517205,"byte_end":13517219,"line_start":3034,"line_end":3034,"column_start":10,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13529083,"byte_end":13529092,"line_start":3258,"line_end":3258,"column_start":26,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1855},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13529121,"byte_end":13529130,"line_start":3259,"line_end":3259,"column_start":26,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1855},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13529160,"byte_end":13529169,"line_start":3260,"line_end":3260,"column_start":27,"column_end":36},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1855},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13531705,"byte_end":13531714,"line_start":3326,"line_end":3326,"column_start":52,"column_end":61},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1855},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13533264,"byte_end":13533269,"line_start":3367,"line_end":3367,"column_start":10,"column_end":15},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534651,"byte_end":13534665,"line_start":3400,"line_end":3400,"column_start":23,"column_end":37},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1880},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534696,"byte_end":13534710,"line_start":3401,"line_end":3401,"column_start":24,"column_end":38},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1880},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13534827,"byte_end":13534841,"line_start":3407,"line_end":3407,"column_start":28,"column_end":42},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1880},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13535505,"byte_end":13535514,"line_start":3426,"line_end":3426,"column_start":10,"column_end":19},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13555576,"byte_end":13555582,"line_start":3785,"line_end":3785,"column_start":26,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1966},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13555611,"byte_end":13555617,"line_start":3786,"line_end":3786,"column_start":26,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1966},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13555647,"byte_end":13555653,"line_start":3787,"line_end":3787,"column_start":27,"column_end":33},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1966},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13558159,"byte_end":13558165,"line_start":3853,"line_end":3853,"column_start":52,"column_end":58},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1966},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13559927,"byte_end":13559937,"line_start":3897,"line_end":3897,"column_start":10,"column_end":20},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562513,"byte_end":13562527,"line_start":3947,"line_end":3947,"column_start":23,"column_end":37},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1991},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562558,"byte_end":13562572,"line_start":3948,"line_end":3948,"column_start":24,"column_end":38},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1991},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13562689,"byte_end":13562703,"line_start":3954,"line_end":3954,"column_start":28,"column_end":42},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1991},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13563102,"byte_end":13563108,"line_start":3967,"line_end":3967,"column_start":10,"column_end":16},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13568034,"byte_end":13568043,"line_start":4069,"line_end":4069,"column_start":26,"column_end":35},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2065},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13568072,"byte_end":13568081,"line_start":4070,"line_end":4070,"column_start":26,"column_end":35},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2065},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13568111,"byte_end":13568120,"line_start":4071,"line_end":4071,"column_start":27,"column_end":36},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2065},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13570656,"byte_end":13570665,"line_start":4137,"line_end":4137,"column_start":52,"column_end":61},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2065},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13574699,"byte_end":13574704,"line_start":4213,"line_end":4213,"column_start":10,"column_end":15},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575300,"byte_end":13575311,"line_start":4236,"line_end":4236,"column_start":10,"column_end":21},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13575913,"byte_end":13575917,"line_start":4259,"line_end":4259,"column_start":10,"column_end":14},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13577265,"byte_end":13577275,"line_start":4295,"line_end":4295,"column_start":10,"column_end":20},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13588018,"byte_end":13588032,"line_start":4498,"line_end":4498,"column_start":23,"column_end":37},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2099},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13588063,"byte_end":13588077,"line_start":4499,"line_end":4499,"column_start":24,"column_end":38},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2099},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13588194,"byte_end":13588208,"line_start":4505,"line_end":4505,"column_start":28,"column_end":42},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2099},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13588986,"byte_end":13588995,"line_start":4523,"line_end":4523,"column_start":10,"column_end":19},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13593408,"byte_end":13593418,"line_start":4615,"line_end":4615,"column_start":26,"column_end":36},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2176},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13593447,"byte_end":13593457,"line_start":4616,"line_end":4616,"column_start":26,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2176},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13593487,"byte_end":13593497,"line_start":4617,"line_end":4617,"column_start":27,"column_end":37},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2176},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13596043,"byte_end":13596053,"line_start":4683,"line_end":4683,"column_start":52,"column_end":62},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2176},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13599735,"byte_end":13599747,"line_start":4754,"line_end":4754,"column_start":10,"column_end":22},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13600375,"byte_end":13600383,"line_start":4777,"line_end":4777,"column_start":10,"column_end":18},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604062,"byte_end":13604076,"line_start":4850,"line_end":4850,"column_start":23,"column_end":37},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2204},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604107,"byte_end":13604121,"line_start":4851,"line_end":4851,"column_start":24,"column_end":38},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2204},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604238,"byte_end":13604252,"line_start":4857,"line_end":4857,"column_start":28,"column_end":42},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2204},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13604786,"byte_end":13604796,"line_start":4871,"line_end":4871,"column_start":10,"column_end":20},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13606969,"byte_end":13606976,"line_start":4926,"line_end":4926,"column_start":26,"column_end":33},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2276},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13607005,"byte_end":13607012,"line_start":4927,"line_end":4927,"column_start":26,"column_end":33},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2276},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13607042,"byte_end":13607049,"line_start":4928,"line_end":4928,"column_start":27,"column_end":34},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2276},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13609565,"byte_end":13609572,"line_start":4994,"line_end":4994,"column_start":52,"column_end":59},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2276},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614332,"byte_end":13614346,"line_start":5087,"line_end":5087,"column_start":23,"column_end":37},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2298},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614377,"byte_end":13614391,"line_start":5088,"line_end":5088,"column_start":24,"column_end":38},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2298},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614508,"byte_end":13614522,"line_start":5094,"line_end":5094,"column_start":28,"column_end":42},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2298},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13614970,"byte_end":13614977,"line_start":5107,"line_end":5107,"column_start":10,"column_end":17},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13617138,"byte_end":13617146,"line_start":5160,"line_end":5160,"column_start":26,"column_end":34},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2369},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13617175,"byte_end":13617183,"line_start":5161,"line_end":5161,"column_start":26,"column_end":34},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2369},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13617213,"byte_end":13617221,"line_start":5162,"line_end":5162,"column_start":27,"column_end":35},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2369},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13619747,"byte_end":13619755,"line_start":5228,"line_end":5228,"column_start":52,"column_end":60},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2369},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13622837,"byte_end":13622845,"line_start":5295,"line_end":5295,"column_start":10,"column_end":18},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13624561,"byte_end":13624570,"line_start":5344,"line_end":5344,"column_start":10,"column_end":19},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13625575,"byte_end":13625579,"line_start":5374,"line_end":5374,"column_start":10,"column_end":14},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629526,"byte_end":13629540,"line_start":5448,"line_end":5448,"column_start":23,"column_end":37},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2400},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629571,"byte_end":13629585,"line_start":5449,"line_end":5449,"column_start":24,"column_end":38},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2400},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13629702,"byte_end":13629716,"line_start":5455,"line_end":5455,"column_start":28,"column_end":42},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2400},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13630110,"byte_end":13630118,"line_start":5467,"line_end":5467,"column_start":10,"column_end":18},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13632127,"byte_end":13632135,"line_start":5520,"line_end":5520,"column_start":26,"column_end":34},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2470},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13632164,"byte_end":13632172,"line_start":5521,"line_end":5521,"column_start":26,"column_end":34},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2470},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13632202,"byte_end":13632210,"line_start":5522,"line_end":5522,"column_start":27,"column_end":35},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2470},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13634805,"byte_end":13634813,"line_start":5591,"line_end":5591,"column_start":10,"column_end":18},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13638512,"byte_end":13638527,"line_start":5672,"line_end":5672,"column_start":26,"column_end":41},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2548},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13638556,"byte_end":13638571,"line_start":5673,"line_end":5673,"column_start":26,"column_end":41},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2548},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13638601,"byte_end":13638616,"line_start":5674,"line_end":5674,"column_start":27,"column_end":42},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2548},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641325,"byte_end":13641330,"line_start":5746,"line_end":5746,"column_start":10,"column_end":15},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13641695,"byte_end":13641710,"line_start":5759,"line_end":5759,"column_start":10,"column_end":25},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13647532,"byte_end":13647544,"line_start":5871,"line_end":5871,"column_start":26,"column_end":38},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2627},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13647573,"byte_end":13647585,"line_start":5872,"line_end":5872,"column_start":26,"column_end":38},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2627},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13647615,"byte_end":13647627,"line_start":5873,"line_end":5873,"column_start":27,"column_end":39},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2627},"to":{"krate":0,"index":353}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13650315,"byte_end":13650320,"line_start":5945,"line_end":5945,"column_start":10,"column_end":15},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/abraham/Frontier/snake_game/target/rls/debug/build/wayland-client-74fb8fd5603a8533/out/wayland_api.rs","byte_start":13650857,"byte_end":13650869,"line_start":5962,"line_end":5962,"column_start":10,"column_end":22},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2627},"to":{"krate":4294967295,"index":4294967295}}]}